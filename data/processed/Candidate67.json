{
  "filename": "Candidate67.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate67.docx",
  "text": "Candidate67\nSENIOR FULL STACK JAVA DEVELOPER\n+1 (816) 945 2787, Candidate6787@gmail.com \nSUMMARY:\nHighly Skilled Professional with having 8+ years of professional experience in designing, developing and testing internet/intranet Web-based applications, Client/Server applications, J2EE Architecture, OO Design patterns, Core Java.\nExperience in designing web/enterprise applications using Software Development Lifecycle (SDLC) methodology.\nProficient in applying design patterns like MVC, Singleton, Session Facade, Service Locator, Adapter, Visitor, Observer, Decorator, Front Controller, Data Access Object.\nVery good understanding of Model View Controller (MVC), Client Server and Multi-tier architectures.\nExcellent experience in Object Oriented Analysis and Design (OOAD), Development, Implementation and Testing of various software applications using Java, J2EE.\nExpertise in\u00a0Java\u00a0concepts like\u00a0OOP, JAVA SWING, JDBC, JMS, Multi-Threading and JUnit.\nHands on expertise in designing, developing and deploying applications using J2EE technologies including JSP, Servlets, Spring, Hibernate, EJB, JSTL, Struts, AJAX, JDBC, JNDI, Java Beans, Web Services and RDBMS.\u00a0\nExpertise in web development using HTML 4/5, DHTML, CSS, Java Script, XSL, XSLT, and XML (DOM, JAXP, JAXB).\nExpertise on\u00a0Spring\u00a0Boot, Spring Core, Spring ORM, Spring DAO, and Spring MVC architectures.\nProficient in implementation of frameworks like Struts, spring, JSF, AJAX frameworks (RichFaces, MyFaces) and ORM frameworks like Hibernate.  \nExcellent experience with Application Servers like JBoss, Tomcat7.x/6.x/5.x/4.x/3.x, IBM WebSphere 7.x/6.x/5.x and Oracle/BEA WebLogic 10.x/9.x/8.x/7.x/6.x \nExcellent experience with major relational databases \u2013 Oracle 8i/9i/10g, SQL Server 2000/2005/2008, DB2, My SQL.\nGood knowledge and working experience on Big data technologies like\u00a0Spark, Scala, Hadoop, Map-Reduce, HDFS, Hive, HBase, Zookeeper, Kafka.\nStrong experience\u00a0with\u00a0MongoDB development (reports, schema design, map reduce functions) and migrations from SQL relational databases.\u00a0\nExperience in building large scale web applications using JavaScript, React.js, Backbone.js, Node.js, Ext JS, jQuery.\nSolid experience of Defect/Test Management tools like JIRA, Quality Center/Test Director, Bugzilla.\nDesigning and Developing Single Page web applications (SPA) using AngularJS, and Node.js with other UI technologies/ libs such as Backbone, jQuery, Bootstrap.\nProficient in creating the Dash Boards using the Backbone.js for faster performance with AJAX calls.\nExtensive Experience in retrieving and manipulating data from backend using Database\u00a0SQL\u00a0queries, PL/SQL- Stored Procedures, Functions, Sequences, Triggers, Views and Packages.\nExperience in creating rules using Business Rules Engines: Drools, ILOG.\nExpertise in working on ANT, Hudson, Maven, Log4j, JUnit, Mockito, JMock, Test-ng.\nExperience in using various version control tools like SVN, CVS and IBM Rational Clear Case.\nExtensive development experience in different IDE's like Eclipse, NetBeans, JBuilder 9.x/8.x, JSource, JDeveloper.\nExcellent experience in writing ANT, Maven build scripts, providing logging facility using Log4j, Writing JUnit test cases and used Clear Quest, JMeter, Bugzilla for bug tracking.\nProficient in NoSQL DB such as Apache Cassandra DB, Mongo DB.\nExpertise in developing SOA (Service Oriented Architecture), REST and J2EE Web Services based on SOAP, WSDL, UDDI, JAX-WS, JAXB, JAX-RPC, JAX-RS using tools like Apache Axis.\nExperience working with big data and real time/near real time analytics and big data platforms like Hadoop, Spark using programming languages like Scala and Java.\nExperience in preparing project related documents using Microsoft Office Suite like MS-Office, MS-Excel, MS-PowerPoint and MS-Visio.\nExperience in Integration tools Oracle SOA Suite/BPEL/Fusion Middleware, web-methods and Apache CAMEL.\nExtensive experience in using Amazon Web Services like RDS, EC2, Redshift, SQS, SNS, Cloud Watch and S3.\nExperience in Integration of Amazon Web Services, AWS with other applications infrastructure.\nExtensive programming experience with Google Map APIs, YouTube Data APIs.\nTECHNICAL SKILLS:\nEducation:\nBachelor of Technology in Information Technology (B. Tech), Jawaharlal Nehru Technological University, JNTU, Hyderabad.\t\t\t\t\t\t\t\t\t\t\t             Class of 2009\nPROFESSIONAL EXPERIENCE:\nCitizens Energy Group - Indianapolis, IN\t\t\t\t\t\t\t                   Jan\u201917 - Till Date\nSenior Full Stack Java Developer\nRESPONSIBILITIES:\nWorked and developed functionalities in Agile Methodology of SDLC, and involved in Team planning and grooming sessions and Retro session in Agile environment.\nInvolved in development, deployment of Web Applications, Micro services deployed on Cloud Foundry.\nWorking with Offline First Multi-device and Multi-Platform application architecture.\nWorked on Rest Web services as well as Node Rest framework for backend services and developed backend code using Java collections including Set, List, Map, Multithreading and Exception Handling.\nWorking on AngularJS 1.5 to Angular 2.0 Code transition. With ES6 and TypeScript.\nBuilt npm libraries/packages in Node.js and Grunt Task runner for Unit testing AngularJS components as part of Test-driven development. \nPrepared Tableau reports in various subject areas like Materials Procurement Savings, Bill of Materials, Customer Service Index, Employee Productivity and Employee Safety.\nDeveloped Spring Application using Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, and Spring DAO and middleware application using spring core framework.\nUsed Executor Service Multi-Threading in programming and developed various helper classes. \nInvolved in coding for the presentation layer using jQuery, jQuery Mobile, Node.js, and JavaScript.\nInvolved in developing iOS SOA application based on Microservices and Predix cloud.\nWorking on RESTful web services, exclusively consuming REST API with Asynchronous behavior.\nImplemented application using\u00a0Spring Boot\u00a0Framework and handled the security using\u00a0Spring Security.\u00a0\nSelected the Test Cases to be automated and performed functional testing of the front end using Selenium (IDE and Web Driver) & created Data Driven framework using JUnit.\nDesigned and Implemented Real time applications using\u00a0Apache\u00a0Spark\u00a0and Kafka.\u00a0\nWrote SQL queries and developed the back-end programs in PL-SQL for this application.\nProvided data persistence by object/relational mapping solution via Hibernate for application save, update, delete operations.\u00a0\nExperience with messaging systems like\u00a0Kafka, RabbitMQ\nImplemented interceptors using Hibernate and build and release\u00a0Spring\u00a0Boot\u00a0framework.\u00a0\nPerformed Unit testing, Integration Testing and generating of test cases for web applications using JUnit.\nUsed\u00a0Spring\u00a0(IoC) for injecting the beans and reduced the coupling between the classes.\u00a0\nImplemented the Model View Controller using\u00a0Spring\u00a0MVC and implemented various design patterns.\nWorked on GIT for version control and bug tracking. Worked on Code integration and deployment tool Jenkins, Ansible, Docker.\nManaged local deployments in Kubernetes, creating local cluster and deploying application containers.\nWorked with Object relational databases like PostgreSQL Database and H2 database engine.\nWorked with CouchBase NoSQL database, multiple ERP connections based on RDBMS. \nUsed Node.js,\u00a0Express.js\u00a0to create server-side API with MongoDB.\nUsed Postman Collections for Rest API testing. JSON output was tested using\u00a0Advanced REST Client or POSTMAN.\nStrong understanding of supporting JSON based RESTful web-services, integrating with the front-end.\nDevelop RESTFUL Web Services interface supporting both XML and JSON to publish printing machines operational data, also developed the code to interact with other web services.\nDeploy and debug application on Predix Platform (Cloud Bases PaaS Model) and Cloud foundry.\nENVIRONMENT: J2EE, Spring Boot, JPA, Tableau, Predix (Cloud Foundry), Ansible, JDK 1.8, AngularJS, Node.js, JUnit, Eclipse STS, Spring Framework, Agile Scrum, Rest Web Services, Postman, Postgres DB, HTML5, CSS3, Selenium Web Driver, Amazon Web Services, Apache Spark, Jenkins, Ansible, Docker.\t\t\t\t\nFreeman Health System, Joplin, MO\t\t\t\t\t\t\t     Sept\u2019 2015 \u2013 Dec\u2019 2016\nSenior Full Stack Java Developer\nRESPONSIBILITIES:\nInvolved in Requirements gathering, analysis, design, development, testing and Maintenance phases with TDD approach\nDesigned and developed the UI using HTML5, CSS3, JavaScript, Node.js, and Backbone.js, Ext JS, AJAX, and JSON.\nUsed Bootstrap for responsive design which allows users to access it from any device.\nThe presentation layer used Spring MVC to implement the MVC architecture design and facilitates user interface designed by use of JSP's and tag libraries.\nWorked on\u00a0Media Queries\u00a0as a complement to the\u00a0Grid System\u00a0of\u00a0UI\u00a0Bootstrap\u00a0to facilitate the implementation of the responsiveness\nEnhanced user experience by designing new web features using MVC Framework like\u00a0Backbone.js accommodate these advanced and fast technologies.\u00a0Enhanced User Interface based on Adobe Flex.\nDeveloped entire user interface using various Ext JS components like Form panels, Tab panels, View port and Editable grids. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDD, Scala and Python.\nDeveloped and implemented\u00a0Swing, spring and J2EE based MVC (Model-View-Controller) framework for the application.\u00a0\nGathered existing functionality of various products from PE BRD, HLAD and FDN.\nImplemented RUP development process on Software Development Life Cycle and done with effort estimations using Function point\u2019s 3p estimations.\nPrepared design documents with Sequence Diagrams, Class Diagrams using Microsoft VISIO tool.\nUsed\u00a0spring\u00a0framework to inject services, entity services, transaction management, and concerns by factory class corresponding to the use case operation executing.\nUsed ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application (SPA).\nInvolved in using\u00a0spring\u00a0concepts DI/IOC, AOP, Batch implementation and\u00a0Spring\u00a0MVC.\nImplemented Declarative transaction management using\u00a0Spring\u00a0AOP.\nDeployed Spring Boot based microservices Docker container using Amazon EC2 container services and using AWS admin console.\nWritten Storm topology to accept the events from Kafka producer and emit into Cassandra DB.\u00a0\t\nUsed\u00a0spring\u00a0JDBC\u00a0Template to do CRUD operations with Database.\nDesigned AWS Cloud Formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates.\nDeveloped modules in the application using micro services architecture style.\nInvolved in building and deploying scripts using Maven3.3 to generate WAR, EAR and JAR files.\nLeveraged Zeno framework for Writing Storm topology to accept the events from Kafka producer and to emit into Mongo DB.\nCreated WSDLs as per wire frames, UI pages generated client jars using JAX-WS.\nUsed Apache CXF to create SOAP based Restful web services.\nDeveloped Applications using Rule Engines, Drools 4. X and ILOG with corresponding to validate the business User Roles.\nUsed CORE and HTML5 tag libraries for expressing Java Server Faces within a view template.\nWrote AngularJS services to consume Restful web service to load data.\nExplored\u00a0Spark, Kafka, Storm along with other open source projects to create a Realtime analytics framework.\u00a0\nUsed SVN for version control and source repository, Used Fisheye for Code Review and JIRA for reporting Bugs.\nWorked on Column Filters of Data table using jQuery and ReactJS.\nInvolved in writing Thread Safe blocks for multithread access to make valid transactions.\nCreated continuous integration builds using Ant Jenkins, Docker, Ansible and deployed on WebSphere app server.\nDone with Web sphere server configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA/IST/Production.\nUsed Google Maps API to implement location module in the application.\nUsed Spark-Streaming APIs to perform necessary transformations and actions on data model which gets the data from\u00a0Kafka\u00a0in near real time and Persists into Cassandra.\t\nWorked on\u00a0Rest\u00a0Web services as well as Node\u00a0Rest\u00a0framework for backend services and used MongoDB (NoSQL) for database services.\nUsed ActiveMQ messaging to set up communication between applications in ESB. And flows are created for JAX-WS and JAX-RS web services.\nParticipated in migration to DB2 data base from Oracle DB.\nFollowed coding guidelines and implemented Core\u00a0Java\u00a0J2EE\u00a0design patterns.\nUsed IBM Clear case as version controlling system.\nInvolved in deploying the application in UNIX and to connect to see logs for fixing UAT/Production defects.\nCoordinated with Performance team to get thread dumps tuned\u00a0java\u00a0as well as DB code.\nENVIRONMENT:\u00a0JAVA 1.6/1.7, J2EE,\u00a0Servlets, JSP, Swing, Web Sphere Application Server 8.x, XML,\u00a0HTML, XSD, XSLT, XPATH, JAXP, JAXB, WSDL, Maven, Java Spring MVC, SOAP, Drools,\u00a0JavaScript, Jenkins, Docker, Ansible, AngularJS,\u00a0Node.js, Backbone.js, Bootstrap, Ext JS, Spring\u00a0frame work- Boot, DI, AOP, ReactJS, MVC, REST, JAX-RS, CXF, IBM MQ Series, RAD 8.0, JUNIT, TDD, AWS, IBM Clear Case, SOAPUI, JProfiler, Selenium, JNDI,\u00a0Java/J2EE\u00a0design patters, Adobe Flex, EMMA, JIRA, Ant, MongoDB, Elastic Search, HP QC, DB2, IBM Optimum tool, Google Maps API, Drools, iLog, Linux, Micro services etc.\t\t\nFNB Corporation, Pittsburgh, PA\t\t\t\t\t\t                          July 2014 \u2013 Aug\u2019 2015\nFull-Stack Java Developer\nRESPONSIBILITIES:\nWorked on\u00a0JavaScript to validate input, manipulated\u00a0HTML\u00a0elements using\u00a0JavaScript and AngularJS developed external\u00a0JavaScript codes that can be used in several different web pages.\nCreated rule files using JBoss Drools 5 rules.\nInvolved in preparing High low-level design docs with UML diagrams.\nInvolved in PSI estimations using Fibonacci approach and divided feature into different USs.\nDeveloped the presentation layer written using HTML, CSS3, Ext JS, ReactJS and client-side validations were done using JavaScript, jQuery, and JSON.\nDesigned a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile, tablet and desktop.\nConfigured Spark streaming to receive real time data from the Kafka and store the stream data to HDFS using\u00a0Scala.\nWritten business logic to retrieve data from legacy systems using web methods Mainframe, Java\nAdministered and configured multiple web methods B2B installations. This included moving developed code to various environments, setting up multiple databases aliases (Oracle), partner server\u2019s subscriptions.\nUsed multithreading extensively to improve the performance of the application.\nWorked on the Common UI layout for defining the Header, Footer and Menu using JSF Facelets.\nDeveloped Spark code using\u00a0Scala\u00a0and Spark-SQL/Streaming for faster testing and processing of data.\nDeveloped the application using frameworks like Struts, Java Server Faces (JSF) and Spring frameworks\nUsed AWS Beanstalk for deploying and scaling web applications and services developed with Java, PHP, Node.js, Python, Ruby, Ansible and Docker on familiar servers such as Apache, and IIS.\nDeveloped custom directives, Factories and Services in AngularJS.\nKnowledge on Apache\u00a0Spark\u00a0java\u00a0API and worked on Drools to configure rules as per business requirements.\nImplemented\u00a0EJB's session bean to maintain mobile session.\nWorked with NoSQL databases such as Cassandra, MongoDB.\nImplemented methods to validate, invalidate, keep a live session for login process and maintaining session credentials.\nImplemented Spring MVC Controller module for better handling of client request, consume RESTful Webservice and sending response back to client.\nUsed Maven repository to include all the jar files required for the JDBC Connections and JSP Tag libraries.\nDeveloped certain features of the application functionality i.e. CRUD (Create, read, update, delete) features using Backbone.js and Responsive Design.\nDeveloped REST services to talk with adapter classes and exposed them to the AngularJS front-end. Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology Involved in detailed analysis based on the requirement documents\nWorked on serialize and de-serialize of data in applications using JSON\nImplemented code to consume messages from streaming data platform (SDP) using Apache\u00a0Kafka.\t\nUsed\u00a0Spring\u00a0MVC as Web module, involved in design, development of new Action classes to interact with business logic\nDesigned, built, and deployed a multitude application utilizing almost all the\u00a0AWS\u00a0stack (Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling).\nExperienced in build, deploy multi module applications using Maven, ANT and CI/CD services like Jenkins, Docker, Ansible.\nTransformed, Navigated, Formatted XML documents using XSL, XSLT, XPath, and XSL-FO.\nInvolved in\u00a0Web sphere server\u00a0configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA/IST/Production.\nUsed\u00a0IBM Clear Case\u00a0for source code version control.\nENVIRONMENT: JAVA/J2EE, HTML, XHTML, DHTML, JS, AJAX, jQuery, DOJO,CSS3, Servlets, JSP, AngularJS, Node.js, Backbone.js, ReactJS, Bootstrap, XML, XSLT, XPATH, WSDL,AWS,  SOAP, CXF, REST, JAX-RS, JAX-WS, Web Logic server 10.3.3, JMS, Maven, Drools 5 , Eclipse, Jenkins, Docker, Ansible, JUNIT, MongoDB ,Mockito, Star Team, TDD, Spring MVC, Ext JS, EMMA, JIRA, Spring framework DI, AOP, Batch, Struts, Hibernate, Elastic Search, Ant, HP QC, Coherence, Rally, Apache Camel.\nKansas City Life Insurance Company, Kansas City, MO\t\t\t\t\t            Nov 2013 - June 2014\nJava/J2EE Programmer\nRESPONSIBILITIES:\nParticipated in all phases of the project like design, development, testing, enhancements and production support.\nDeveloped and supported all tiers of the application \u2013 UI/Business Logic/Database\nWorked on impact analysis to migrate existing persistence layer to Hibernate.\nCreated and injected dependency injection and to wire objects of business classes. \nExpertise in developing Web Applications using Spring Dependency Injection, and AOP for modularity.\nDesigned the Front-end screens using JSP, Servlets, HTML, and JavaScript.\nDesign & Development of User Interface module using J2EE, JSP, Servlets and Struts Framework.\nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalities.\nProvided installation, configuration & maintenance of pre-prod and production Cloud environments including services such as Tomcat, Apache, Jetty, MongoDB, MySQL, and Jira.\u00a0\nExposed the Web Services to the client applications by sharing the REST Request and Response.\nDeveloped the functionalities under Agile Methodology JIRA processes.\nPrepared documents containing detailed recommendations for automation and support, enabling business process improvements.\nLed and participated in weekly marketing meetings to build relationships with the marketing team and improve problem resolution process.\nInstalled, Configured and administered Tomcat server.\nDeveloped the application using JSP, Java Servlet, and XML.\nWorked with DB2 and Wrote SQL Queries, Stored Procedures, triggers, views and integrated SQL Queries into DAO.\nImplemented entity beans utilizing container-managed relationship for retrieving data.\nThoroughly Unit tested the application by writing test cases in JUnit for different scenarios.\nInvolved in testing, debugging, bugs fixing and documentation of the system.\nENVIRONMENT: Java, JSP, DB2, JUnit, Eclipse, WebLogic, Log4j, XML, J2EE, JSP, JIRA, Web Services. Servlets, Struts Framework.\nBarclays Bank\t\t\t\t\t\t                            Sept 2011 - Oct 2013\nJava/J2ee Developer\nRESPONSIBILITIES:\nWorked extensively with the backend which comprised of Spring, Hibernate and JPA.\nUsed JSON and XML formats to transfer data from the server.\nImplemented Web Services to handle data from third party interfaces used tool like axis 1.4 to create web service clients.\nDeveloped AJAX based web based UI framework.\nCreated simple user interface for application's configuration system using MVC design patterns and Swing\u00a0framework.\u00a0\nDeveloped Servlets and JSP for performing CRUD operations on domain specific entities.\nDeveloped Service Layer using POJOs and Spring IOC.\nDeveloped Data Access Layer using Hibernate and DAO Design Pattern.\nUsed Java Message Service (JMS) for loosely coupled, reliable and asynchronous exchange of user and   real estate information among J2EE components and legacy system \nInvolved in working with J2EE Design patterns (Singleton, Factory, DAO, and Business Delegate) and Model View Controller Architecture with JSF and Spring IOC.\nUsed Apache POI API to generate excel document for data in each grid in the application.\nExtensively used Spring IOC architectural model to inject objects based on the selection of components like setter injection and Interface injection to manage the object references.\nInvolved in the development of the application based on backend Spring MVC architecture.\nUtilized Spring MVC framework to implement design patterns like IOC (Dependency Injection), Spring DAO (Data access objects), Data Transfer objects, Business objects, ORM Mappings.\nUsed the Spring DAO to handle exception for database transaction like open connections, no result, connection aborted, closing the connections etc.\nUtilized the concept of Lazy initialization and Eager fetch based on the requirements and increase the performance within the session of objects.\nENVIRONMENT: Spring, Hibernate, Swing, Oracle, Maven, Eclipse, AJAX, JSP, HTML, CSS, Java Script, XML, Servlets, Design Patterns, Web Services.\nSingleSource Computing Pvt. Ltd.\t\t\t\t                          June 2009 \u2013 Aug 2011\nJava Developer\nRESPONSIBILITIES:\nInvolved in the software development life cycle requirement gathering, coding, testing, and implementation.\nUsed Java Message Service (JMS) for loosely coupled, reliable and asynchronous exchange of user and   real estate information among J2EE components and legacy system \nInvolved in working with J2EE Design patterns (Singleton, Factory, DAO, and Business Delegate) and Model View Controller Architecture with JSF and Spring IOC.\nInstalled, Configured and administered JBoss server.\nDeveloped UI using java swings.\u00a0\nConfigured and Implemented Web Services specifications.\nDisplayed the Documents in PDF format using Spring AbstractPdfView.\nDeveloper advanced UI features (like slider, crop etc.) using jQuery.\nDynamic web pages are developed using JSP, servlet, HTML, JavaScript, XML and CSS.\nUsed CVS for version control.\nExtracted data in UI for different clients using JSON format. \nImplemented client-side validations using JavaScript \nImplemented AJAX to speed up web application \nUsed Web Developer, Firebug, and IE developer toolbar for debugging and browser compatibility \nParticipated in maintenance and production support. \nUsed Junit to test all the APIs and business logic.\nENVIRONMENT: Web Service, WSDL, spring, Swing, jQuery, HTML, JSON, AJAX, JSP, JavaScript, Web Services.XML, UML, Oracle, JBoss, CVS.",
  "size_bytes": 48412,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:49.664593",
  "clean_text": "senior stack java developer summary highly skilled professional have year professional experience designing develop testing internet intranet web base application client server application architecture oo design pattern core java experience design web enterprise application software development lifecycle sdlc methodology proficient apply design pattern like mvc singleton session facade service locator adapter visitor observer decorator controller data access object good understanding model view controller mvc client server multi tier architecture excellent experience object oriented analysis design ooad development implementation testing software application java expertise java concept like oop java swing jdbc jms multi threading junit hand expertise designing develop deploy application technology include jsp servlets spring hibernate ejb jstl struts ajax jdbc jndi java beans web services rdbms expertise web development html dhtml css java script xsl xslt xml dom jaxp jaxb expertise spring boot spring core spring orm spring dao spring mvc architecture proficient implementation framework like strut spring jsf ajax framework richfaces myfaces orm framework like hibernate excellent experience application servers like jboss ibm websphere oracle bea weblogic excellent experience major relational database oracle g sql server sql good knowledge working experience big data technology like spark scala hadoop map reduce hdfs hive hbase zookeeper kafka strong experience mongodb development report schema design map reduce function migration sql relational database experience build large scale web application javascript ext js jquery solid experience defect test management tool like jira quality center test director bugzilla designing developing single page web application spa angularjs ui lib backbone jquery bootstrap proficient create dash boards fast performance ajax call extensive experience retrieve manipulate datum backend database sql query pl store procedures functions sequences triggers view packages experience create rule business rules engines drools ilog expertise work ant hudson maven junit mockito jmock test ng experience version control tool like svn cvs ibm rational clear case extensive development experience different ide like eclipse netbeans jbuilder jsource jdeveloper excellent experience write ant maven build script provide log facility writing junit test case clear quest jmeter bugzilla bug tracking proficient nosql db apache cassandra db mongo db expertise develop soa service oriented architecture rest web services base soap wsdl uddi jax ws jaxb jax rpc jax rs tool like apache axis experience work big datum real time near real time analytic big data platform like hadoop spark programming language like scala java experience prepare project relate document microsoft office suite like ms office ms excel ms powerpoint ms visio experience integration tool oracle soa suite bpel fusion middleware web method apache camel extensive experience amazon web services like rds redshift sqs sns cloud watch experience integration amazon web services aw application infrastructure extensive programming experience google map api youtube data api technical skills education bachelor technology information technology tech jawaharlal nehru technological university jntu hyderabad class professional experience citizens energy group indianapolis till date senior stack java developer responsibility worked develop functionality agile methodology sdlc involve team planning groom session retro session agile environment involve development deployment web applications micro service deploy cloud foundry work offline multi device multi platform application architecture work rest web service node rest framework backend service develop backend code java collection include set list map multithreading exception handling work angularjs angular code transition typescript build npm library package grunt task runner unit testing angularjs component test drive development prepare tableau report subject area like materials procurement savings bill materials customer service index employee productivity employee safety develop spring application spring core spring aop spring mvc spring batch spring security spring dao middleware application spring core framework executor service multi threading programming develop helper class involve code presentation layer jquery jquery mobile javascript involve develop ios soa application base microservices predix cloud work restful web service exclusively consume rest api asynchronous behavior implement application spring boot framework handle security spring security select test case automate perform functional testing end selenium ide web driver create data driven framework junit design implement real time application apache spark kafka wrote sql query develop end program pl sql application provide data persistence object relational mapping solution hibernate application save update delete operation experience message system like kafka rabbitmq implement interceptor hibernate build release spring boot framework performed unit testing integration testing generating test case web application junit spring ioc inject bean reduce coupling class implement model view controller spring mvc implement design pattern work git version control bug tracking work code integration deployment tool jenkins ansible docker manage local deployment kubernetes create local cluster deploy application container work object relational database like postgresql database database engine work couchbase nosql database multiple erp connection base rdbms create server api mongodb postman collections rest api testing json output test advanced rest client postman strong understanding support json base restful web service integrate end develop restful web services interface support xml json publish printing machine operational datum develop code interact web service deploy debug application predix platform cloud bases paas model cloud foundry environment spring boot jpa tableau predix cloud foundry ansible jdk angularjs junit eclipse sts spring framework agile scrum rest web services postman postgres db selenium web driver amazon web services apache spark jenkins ansible docker freeman health system joplin mo sept dec senior stack java developer responsibility involve requirements gathering analysis design development testing maintenance phase tdd approach design develop ui javascript ext js ajax json bootstrap responsive design allow user access device presentation layer spring mvc implement mvc architecture design facilitate user interface design use jsp tag library work media query complement grid system ui bootstrap facilitate implementation responsiveness enhance user experience design new web feature mvc framework like accommodate advanced fast technology enhance user interface base adobe flex develop entire user interface ext js component like form panel tab panel view port editable grid involve convert hive sql query spark transformation spark rdd scala python develop implement swing spring base mvc model view controller framework application gather existing functionality product pe brd hlad fdn implement rup development process software development life cycle effort estimation function point estimation prepare design document sequence diagrams class diagrams microsoft visio tool spring framework inject service entity service transaction management concern factory class correspond use case operation executing reactj create view hook model dom synchronize datum server single page application spa involve spring concept di ioc aop batch implementation spring mvc implement declarative transaction management spring aop deploy spring boot base microservice docker container amazon container service aws admin console write storm topology accept event kafka producer emit cassandra db spring jdbc template crud operation database design aws cloud formation template create custom sized vpc subnet nat ensure successful deployment web application database template develop module application micro service architecture style involve build deploy script generate war ear jar file leveraged zeno framework writing storm topology accept event kafka producer emit mongo db create wsdl wire frame ui page generate client jar jax ws apache cxf create soap base restful web service develop application rule engines drools x ilog correspond validate business user roles core tag library express java server face view template wrote angularjs service consume restful web service load datum explored spark kafka storm open source project create realtime analytic framework svn version control source repository fisheye code review jira report bug work column filters data table jquery reactj involve write thread safe block multithread access valid transaction create continuous integration build ant jenkins docker ansible deploy websphere app server web sphere server configuration data sources connection pooling mq series queues set message deploy app different server different environment like qa ist production google maps api implement location module application spark streaming api perform necessary transformation action datum model get datum kafka near real time persist cassandra work rest web service node rest framework backend service mongodb nosql database service activemq message set communication application esb flow create jax ws jax rs web service participate migration datum base oracle db follow code guideline implement core java design pattern ibm clear case version control system involve deploy application unix connect log fix uat production defect coordinate performance team thread dump tune java db code environment java servlets jsp swing web sphere application server xml html xsd xslt xpath jaxp jaxb wsdl maven java spring mvc soap drools javascript jenkins docker ansible angularjs bootstrap ext js spring frame boot di aop reactjs mvc rest jax rs cxf ibm mq series rad junit tdd aws ibm clear case soapui jprofiler selenium jndi java design patter adobe flex emma jira ant mongodb elastic search hp qc ibm optimum tool google maps api drools ilog linux micro service etc fnb corporation pittsburgh pa july aug stack java developer responsibility work javascript validate input manipulated html element javascript angularjs develop external javascript code different web page create rule file jboss drool rule involve prepare high low level design doc uml diagram involve psi estimation fibonacci approach divide feature different us develop presentation layer write html ext js reactjs client validation javascript jquery json design responsive website bootstrap grid system layout content fit different device include mobile tablet desktop configure spark stream receive real time datum kafka store stream datum hdfs scala write business logic retrieve datum legacy system web method mainframe java administered configure multiple web method installation include move develop code environment set multiple database alias oracle partner server subscription multithreade extensively improve performance application work common ui layout define header footer menu jsf facelets develop spark code scala spark sql streaming fast testing processing datum develop application framework like strut java server faces jsf spring framework aws beanstalk deploy scale web application service develop java php python ruby ansible docker familiar server apache iis develop custom directive factories services angularjs knowledge apache spark java api work drools configure rule business requirement implement ejb session bean maintain mobile session work nosql database cassandra mongodb implement method validate invalidate live session login process maintain session credential implement spring mvc controller module well handling client request consume restful webservice send response client maven repository include jar file require jdbc connections jsp tag library develop certain feature application functionality crud create read update delete feature responsive design develop rest service talk adapter class expose angularjs end work restful web service enforce stateless client server support json change soap restful technology involve detailed analysis base requirement document work serialize de serialize datum application json implement code consume message stream datum platform sdp apache kafka spring mvc web module involve design development new action class interact business logic design build deploy multitude application utilize aws stack include mongodb focus high availability fault tolerance auto scaling experience build deploy multi module application maven ant ci cd service like jenkins docker ansible transform navigate format xml document xsl xslt xpath xsl fo involve web sphere server configuration data sources connection pooling mq series queues set message deploy app different server different environment like qa ist production ibm clear case source code version control environment java html xhtml dhtml js ajax jquery dojo servlets jsp angularjs reactjs bootstrap xml xslt xpath wsdl aws soap cxf rest jax rs jax ws web logic server jms maven drools eclipse jenkins docker ansible junit mongodb mockito star team tdd spring mvc ext js emma jira spring framework di aop batch struts hibernate elastic search ant hp qc coherence rally apache camel kansas city life insurance company kansas city mo nov june java programmer responsibility participate phase project like design development testing enhancement production support develop support tier application ui business logic database work impact analysis migrate exist persistence layer hibernate create inject dependency injection wire object business class expertise develop web application spring dependency injection aop modularity design end screen jsp servlets html javascript design development user interface module jsp servlets struts framework extensive use core java collections generics exception handling design patterns functionality provide installation configuration maintenance pre prod production cloud environment include service tomcat apache jetty mongodb mysql jira expose web services client application share rest request response develop functionality agile methodology jira process prepare document contain detailed recommendation automation support enable business process improvement lead participate weekly marketing meeting build relationship marketing team improve problem resolution process instal configured administer tomcat server develop application jsp java servlet xml work wrote sql queries stored procedures trigger view integrate sql query dao implement entity bean utilize container manage relationship retrieve datum thoroughly unit test application write test case junit different scenario involve testing debugging bug fixing documentation system environment java jsp junit eclipse weblogic xml jsp jira web services servlet struts framework barclays bank sept oct java developer responsibility work extensively backend comprise spring hibernate jpa json xml format transfer datum server implement web services handle datum party interface tool like axis create web service client develop ajax base web base ui framework create simple user interface application configuration system mvc design pattern swing framework develop servlets jsp perform crud operation domain specific entity develop service layer pojo spring ioc develop data access layer hibernate dao design pattern java message service jms loosely couple reliable asynchronous exchange user real estate information component legacy system involve work design pattern singleton factory dao business delegate model view controller architecture jsf spring ioc apache poi api generate excel document datum grid application extensively spring ioc architectural model inject object base selection component like setter injection interface injection manage object reference involve development application base backend spring mvc architecture utilize spring mvc framework implement design pattern like ioc dependency injection spring dao data access object data transfer object business object orm mappings spring dao handle exception database transaction like open connection result connection abort close connection etc utilize concept lazy initialization eager fetch base requirement increase performance session object environment spring hibernate swing oracle maven eclipse ajax jsp html css java script xml servlets design patterns web services singlesource computing pvt june aug java developer responsibility involve software development life cycle requirement gathering coding testing implementation java message service jms loosely couple reliable asynchronous exchange user real estate information component legacy system involve work design pattern singleton factory dao business delegate model view controller architecture jsf spring ioc instal configured administer jboss server develop ui java swing configure implement web services specification display documents pdf format spring abstractpdfview developer advance ui feature like slider crop etc jquery dynamic web page develop jsp servlet html javascript xml css cvs version control extract datum ui different client json format implement client validation javascript implement ajax speed web application web developer firebug ie developer toolbar debug browser compatibility participate maintenance production support junit test api business logic environment web service wsdl spring swing jquery html json ajax jsp javascript web services xml uml oracle jboss cvs"
}