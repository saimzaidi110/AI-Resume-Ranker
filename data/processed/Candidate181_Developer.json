{
  "filename": "Candidate181_Developer.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate181_Developer.docx",
  "text": "Candidate 181\n502-378-5940 \ncandidate181.work@gmail.com \nObjective\nAccomplished Java Developer and talented Software Engineer with demonstrated success in developing and maintaining business functionality, is seeking work in a challenging environment to promote individual as well as organizational growth. Proven expertise in maintenance of Web Based, Client-Server Architectures in areas like Telecom, Financial, Insurance etc. A self-starter and fit for working freely to accomplish points of reference and due dates. Proficient at organizing, following and finishing undertakings to achieve venture objectives.\nProfessional Summary\nAround 8 years of IT involvement in all phases of Software Development Life Cycle (SDLC), such as Planning, Analysis, Design, Implementation, Testing and Maintenance of various Client/Server Applications, Web Based applications using JAVA/J2EE technologies.\nWell versed with complete Software Development Life Cycle (SDLC) using various methodologies like\u00a0Agile Methodology (Scrum, XP), Waterfall and followed Test Driven Development (TDD).\nDeveloped Web-based enterprise applications using Java/J2EE, Core Java, Servlets, JDBC, Hibernate, Web Services (SOAP and REST) and MVC Framework (Struts, Spring MVC). \nExpertise in developing UI using JSP, HTML5, CSS3, Java Script, Bootstrap, JQuery, Ajax, Angular1.x, 2 and ReactJS\nExperience with Java 1.8 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise. \nHands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, Spring Data and Spring Boot.\nExperience in developing XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration.\nExperience in developing the application with Service Oriented Architecture (SOA) and Micro Services Architecture.\nExpertise in working with the JavaScript, Ext JS, prototype JS and various MVC JavaScript frameworks AngularJS, Angular 2, Angular 4, BackboneJS, ReactJS, NodeJS, Hudson, Bamboo, Canvas and Jenkins.\nCreated and Configure Micro Service architecture for CDT Directory project and integrated with AngularJS application.\nHands-on experience on various AWS Cloud services like EC2, Route53, EBS, Auto Scaling, VPC, Cloud Formation, S3, RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling. \nWorked with Java 1.8 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment. \nExpert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics.\nProficient in implementing various Java design patterns like\u00a0MVC,\u00a0Session Facade,\u00a0Data Access Object (DAO),\u00a0Factory,\u00a0Singleton,\u00a0Data Transfer Object and Front Controller.\nKnowledgeable with RDBMS concepts like writing SQL Queries. Working experience of Relational DBMS like MySQL, Apache Solr, Elastic Search, Oracle SQL PL/SQL, Teradata, SQL Server (MS SQL), DB2, MongoDB, Dynamo DB and Cassandra. Postgre-SQL and NoSQL DBMS and Oracle Performance Tuning.\nExpertise in designing POJO classes using Hibernate Annotations using\u00a0EJB/JPA\u00a0API.\nExperience in working with DevOps/Continuous integration tools like GITHUB, Jenkins, Nexus, Jira and SonarQube.\nExperience with application servers like\u00a0Web Logic, JBOSS, Apache Tomcat\u00a0and\u00a0IBM Web Sphere.\nExperienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache ActiveMQ and Apache Camel as JMS provider. \nCore development experience for Groovy Grails restful web services.\nUsed Apache Kafka for integration and Data Processing with spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nExperience in developing core infrastructure in Python on Google App Engine.\nGood experience with\u00a0Cassandra NoSQL\u00a0Database.\nGood understanding of Openshift platform in managing Docker containers Kubernetes Clusters, Mesos.\nImplemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub and AWS AMIs to run the war, AMI and deploy jobs in Jenkins brew master instance, which reduces the time for the deployment of micro services.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ, RabbitMQ and Kafka as a message queue. \nGood Skills in using Dojo Components and integrating back-end applications with AJAX driven web 2.0 front-end using OO JavaScript Framework.\nExperienced in using Eureka Servers while deploying in EC2. \nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExperience DOJO DOM manipulation, Event Handlers, Events.\nStrong experience in database design using PL/SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data.\nUnit testing with mocha, chai.\nExpertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ.\nProficient in Continuous Integration and Continuous Deployment tools like Jenkins.\nExperience with Selenium, JUnit and Mockito in developing test cases and Log4J in determining application functionality.\nHaving Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server.\nExperience in writing shell scripting for deployment process and expertise in sharing files between Linux boxes and windows using the WinSCP, secure FTP, SCP client for Microsoft Windows.\nExperience working with version control tools like Git Hub, Subversion(SVN) and CVS. \nGood experience with JIRA in issue tracking.\nExperience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments.\nTechnical Skills\nProfessional Experience\nT-Mobile, Seattle, WA \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t\t\t \t\t\t\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0                             \u00a0    Mar\u201917 \u2013 Till Date\nRole: Full Stack Developer\nDescription: The project was to develop T-Mobile platform for web services that acts as a common gateway for APIs from different existing systems like Product and Offer Management, Billing, Sales, etc. The Java web services act as a one stop shop APIs for different T-Mobile Emerging Business Market Resellers, Clients and Partners looking to access T-Mobile APIs from their own systems. \nRoles & Responsibilities:\nInvolved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and used agile methodology (SCRUM) for developing application.\nApplication is implemented using Agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues.\nInvolved in the development of user interface using HTML5, CSS3, JSP, JavaScript, Bootstrap, JQuery, Angular JS, ReactJS and NodeJS. \nUtilized Java 1.8 features like Lambda expressions for collection, evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment. \nDesigned and developed application using various Spring framework modules like Spring IOC, Developed Controller Classes using Spring MVC, Spring AOP, Spring Boot, Spring Batch, Spring Data modules and handled security using Spring Security.\nExperience with the features of\u00a0Angular\u00a02\u00a0such as directives, modules and routing. Highly used\u00a0Angular 2\u00a0router to build single page application for navigate through the different status and multiple modals.\nDeveloped user interface using JSP, AJAX, Java, Saas, big data, cloud, POC, RBDMS, JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application.\nWorked on high level design / architecture, developed initial prototype demonstrating Google App Engine utilization and proof of concept which helped us in understand GAE and related technologies and how to use them efficiently.\nDeveloped RESTful web services to retrieve JSON documents related to customer and consumed SOAP based Web Services.\nImplemented Micro Services Architecture to divide the application into various sub modules.\nImplemented Restful Services with JAX-RS using Spring Boot and Micro Service Architecture.\nImplemented Batch jobs to deal with large number of chunks using Spring Batch Framework to execute the similar jobs simultaneously.\nDesigned and Developed the UI Framework built using JSF with Prime Faces. Creating custom JSF Facelet tags for error handling, data tables, true/false markers etc. \nResponsible for maintaining and expanding AWS (Cloud Services) infrastructure using AWS Stack especially worked with database setup and maintenance and created AWS EC2 instances.\nDesigned services to store and retrieve user data using Mongo DB database and communicated with remote servers using REST enabled Web Services on Jersey framework.\nExperience in Implementing API's in Java Multi-Threaded Environment\nDeveloped integration modules for disparate clients using\u00a0Apache Camel. \nUsed Spring JDBC API to talk MySQL Database for Read and Write operations.\nDeveloped SOAP web services using JAX-WS API and REST web services using JAX-RS API.\nRan ad-hoc queries against Cassandra using\u00a0CQL\u00a0scripts.\nWorking experience with GAE's\u00a0Google App Engine\u00a0as PaaS involving App Engine APIs: Datastore, Cloud Storage, Bigtable, Blob-store, asynchronous services using Backend, Task Queues and Modules, and scheduled tasks using App Engine Cron Service and exposure to Amazon Web Services AWS.\nWorked with\u00a0NoSQL Cassandra\u00a0to store, retrieve, and update and manage all the details for Ethernet provisioning and customer order tracking.\nWrote scripts in JMeter to test the performance of the API's\nExperience in making the Devops pipelines using Openshift and Kubernetes for the Microservices Architecture.\nMaintained SVN repositories for DevOps environment: automation code and configuration.\nResponsible for writing the Design Specifications for the generic and application specific web services in Groovy n Grails.\nImplemented service layer on top of Cassandra using\u00a0core Java, Datastax Java API\u00a0and\u00a0Restful API\nUsed Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework.\nDeveloped BASH scripts to redact sensitive data from Apache access and error logs using a sed expression, deploy WAR files to environments in parallel.\nWorked with DROOLS engine for Spring Integration and validate business rule before executing in runtime.\nWeb application development using Groovy Grails JQuery AJAX and D3.js. \nUsed Hibernate API to talk MySQL Database for Read and Write operations\nEnsured idempotentcy of KRFS DevOps BASH scripts.\nExperience with NodeJS modules including Events, http, file system, MySQL. Wrote restful services on the server in NodeJS to listen to requests from devices. \nUsed PowerShell for DevOps in Windows-based systems.\nUnderstanding the role of Filenet and CSIF framework in the project. \nDeveloped Dash-Board to monitor and report Cache Coherence Servers. \nImplemented the validation, error handling, and caching framework with Oracle Coherence cache.\nCreated views using components of Prime Faces in XHTML files and configured JSF framework. \nDeveloped test scripts using JSF with Spring MVC to evaluate the performance of different modules of the application. \nImplemented persistence layer using Hibernate, created POJOs and mapped to databases Annotations.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB. \nUtilized kubernetes and docker for the runtime environment of the CI/CD system to build, test deploy.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ as a message queue.\nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nExperience in Test Driven Development (TDD) by identifying test case scenarios and unit testing the code using JUnit framework.\nUsed Gradle as build tool and deploying the application on WebSphere Application Server. Used Jenkins to schedule the tests based on the carrier and priority of the test case.\nUsed Docker in Container Management. Used GIT\u00a0for version control across common source code used by developers.\nMonitored the error logs using log4j and fixed the problems.\u00a0Wrote unit tests using mocha, chai.\nUsed\u00a0JIRA tool for\u00a0Issue/bug tracking, monitoring\u00a0of work assignment in the system.\nUsed Intellij as an IDE for the Application development.\nEnvironment: Agile Methodology, Java 1.8, J2EE, JSP, XML, HTML5, CSS3, JavaScript, JSP, Bootstrap, JQuery, AJAX, AngularJS, ReactJS, NodeJS, Hibernate, Spring, Spring IOC, Spring AOP, Spring Batch, Spring Boot, Spring Security, Spring MVC, Oracle, MongoDB, Mockito, Gradle, WebSphere, Restful, Log4J, SOA, Amazon Web Services (AWS), Docker, Micro Services, Unix Shell Scripting, GIT, JIRA, Jenkins and Intellij.\nWells Fargo, Des Moines, IA\t\t\t\t\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0                 Aug\u201915 \u2013 Mar\u201917\nRole: Full Stack Developer\t\t\t\t\t\t\nDescription: Wells Fargo is a financial service provider dedicated to providing mortgage, financial, investments and insurance products to its customers. The HMC Website is designed and developed for Wells Fargo customers and Home Mortgage Consultants to access their functionality through online. Customers use HMC Websites to apply for mortgages and obtain home buying information through online. Each branch and individual HMC has opportunity to subscribe or modify to their own HMC Website to support their sales efforts through Site Admin and Wizard.\nRoles & Responsibilities:\nInvolved in all phases of the Software Development Life Cycle (SDLC) using Agile methodology.\nDeveloped the view-controller components using HTML5, CSS3, JavaScript, JQuery and Angular JS.\nCreated distributed Oracle coherence domains, configuration and system design based on oracle coherence.\nExperience in building end to end web applications using\u00a0MEAN\u00a0stack with\u00a0Angular1.X,\u00a02\nDeveloped user-friendly interface to seamlessly combine the new module with existing login system by using\u00a0Angular JS and Bootstrap.\nDeveloped HTML5 Mobile application with HTML5, Java, Jenkins, IIS, Java, Saas, big data, cloud, POC, RBDMS, Java Script, jQuery, JSON and RESTful web service.\nUsed\u00a0Angular JS\u00a0to create maintainable and testable single page application and Implemented two-way data binding and used ng-filters across the applications.\nDeveloped reusable and interoperable Web service modules based on\u00a0SOA\u00a0architecture using\u00a0SOAP and RESTful Services. \nExpertise in using\u00a0FIX Protocol API. Testing admin and application FIX messages like heartbeat, logon, logout, resend request, reject, sequence, pre-trade, trade and post-trade messages\nDeveloped the service layer, a layer that acts a bridge between the presentation layer and data access layer, with Spring Framework features like Spring JDBC and Spring ORM.\nUsed Apache camel integration for routing and transforming the data between two Applications using HTTP protocol.\nUsed Spring MVC Design Pattern to hold the UI data and serve the request and to send the response.\nImplemented\u00a0Dependency Injection\u00a0(IOC)\u00a0feature of\u00a0Spring\u00a0Framework to inject beans into User Interface and AOP for Logging.\nConfigured and developed the web application using JSF and Hibernate to get the data from external clients on the status of technical support tickets. Used MySQL as the database.\nDeveloped Oracle PL/SQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms.\nMigrated legacy databases by using ETL tools. Developed custom PL/SQL packages for gaps found in the ETL tools.\nDeveloped web service API methods using PL/SQL, SQL/XML and XML to enable conferencing resellers to write their own clients to interface with our web conferencing platform.\nInvolved in migrating monolithic application in Micro Service Architecture and Developed Micro services using Pivotal Cloud Foundry platform build upon Spring Boot Services.\nDeveloped applications using\u00a0Application Lifecycle Management\u00a0to deliver reliable applications.\nDeveloped persistence Layer using\u00a0Hibernate\u00a0to persist the data and to manage the data.\nWorked on Hibernate for mapping the\u00a0Java\u00a0objects to relational database and SQL queries to fetch the data, insert and update the data from the database.\u00a0\nDeveloped Hibernate configuration files and queries and Implemented DAO classes.\nWeb Services were called using SOAP protocol, WSDL descriptor file, Universal Description, Discovery and Integration Registry (UDDI).\nCreated Stored Procedures, functions, views, indexes and constraints, triggers required SQL tuning to reduce the response time in the application.\nDeveloped the\u00a0JSON\u00a0structure for the data transfer in between the Goggle Web Toolkit (UI) and business tier.\nDeveloped Graphical User Interface (GUI) to display report data using JQuery in Cross-browser compatibility and Web Application Scaling.\nGUI design and development using\u00a0Java\u00a0Swing, JFC\u00a0Used for open source web testing.\nConfigured development environment using\u00a0WebSphere\u00a0application server for developer\u2019s integration testing.\nExperience with integration frameworks like Apache Camel for enterprise integration.\nDeveloped test cases for Unit testing using JUnit.\nUsed Jenkins and Maven for automated builds and deployments.\nTo keep track of issues and tasks on individuals used JIRA ticketing system.\nUsed Spring Tool Suite (STS) for application development.\nEnvironment: Java, J2EE, HTML, CSS, JQuery, AngularJS, Spring IOC, Spring MVC, Spring AOP, Spring Security, Hibernate, REST, SOAP, JAX-RS, JAX-WS, WSDL, Pivotal Cloud Foundry(PCF), Oracle, JUnit, Maven, Jenkins, JIRA, Apache Camel, WebSphere Application Server and STS IDE.\nClient: Allstate Insurance, Chicago, IL\t\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0                                               Oct\u201913 \u2013 Jun\u201915\nRole: JAVA Developer\nDescription: The Allstate Corporation is the largest publicly held personal lines property and casualty insurer in America. The project involves the design and development of a Web based internet application to provide online insurance services. The web application provides functionalities such as policy management, profile management and claim reporting. The customer can access complete account information, policy information, receive instant auto insurance quote and report a claim.\nRoles & Responsibilities:\nWorked on design and implementation of Market Place application and involved in various phases of SDLC.\nWorked in Agile development environment and participated in SCRUM meetings throughout the life cycle of project.\nRole based application monitoring and recording audit history, activity of different roles accessing the site\nDeliver technical solutions utilizing defined technology stack.\nImplemented the front end using HTML, CSS, JavaScript and AngularJS was used to develop declarative User Interface.\nUsed JQuery, AJAX to interact with Java Servlet.\nIntegration of SEARS Product Management REST API's\nUsed Struts, and AJAX for highly interactive and graphic user interface.\nImplement JUnit test cases for Struts/Spring components\nDeveloped Action classes, Action Forms and Struts Configuration file to handle required UI actions, JSPs for Views and used HTML in web page component development.\nDeveloped Server-side presentation layer using Struts MVC Framework and designed and developed Application based on Spring framework using MVC design patterns.\nUsed Spring IOC for Dependency Injection and used Spring JDBC for interacting with database.\nUsed various design patterns like Business delegate, Singleton, Factory and DAO.\nPerformed Inheritance based Hibernate mappings in tables to simplify the data in Hibernate.\nInvolved in implementation of web services (top-down and bottom-up) using SOAP services.\nInteract with offshore team to coordinate and guide for the development happening in offshore.\nJUnit is used to perform the Unit Test Cases.\nUsed Oracle database for SQL, PL/SQL scripts, stored procedures, functions, triggers, Oracle forms/Reports.\nPerformance Tuning and Optimization with Java Performance Analysis Tool using Load Runner.\nWorked on Installing and configured WebLogic Application Server and Maven Build Tool. \nMade use of CVS for checkout and check in operations. \nEnvironment: Java, J2EE, Struts, Hibernate, JSP, Angular JS, HTML, XML, XSL/XSLT, JavaScript, AJAX, Spring MVC, SOAP, Oracle, CVS, J Profiler, Java Performance Analysis Tool, Eclipse, Maven, WebLogic.\nClient: Target, Minneapolis, MN \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     Sep\u201912 \u2013 July\u201913\nRole: \u00a0Java Developer\t\t\t\t\t\nDescription: This is an application developed with multiple web services, used for tracking the status of a purchase order by accessing three different databases. Order will be collected/placed through another web-based application. The OMS assign the order to the department. Once order is placed in the web-based application, from that moment user will be able to track the status using a track tool application. In each step of the process, different departments involved are using different tools and different database. This track tool is designed and developed in such a way that, it has robustness and flexibility to access all different DB used for tracking the status.\nResponsibilities:\nInvolved in various stages of Software Development Life Cycle (SDLC) deliverables of the project using the Agile methodology.\nDeveloped International Error Correction Screens using custom front-end forms using HTML, CSS, JavaScript, JQuery and AJAX.\nGathered and clarified requirements with business analyst to feed into high-level customization design, development and installation phases.\nUsed Spring Framework for dependency injection for Action classes using Application Context XML file.\nInvolved in implementation of MVC pattern using JSP and Spring Controller.\nDeveloped business objects using Spring IOC, Spring MVC and Spring AOP.\nImplemented MVC architecture using JSP Spring, Hibernate and used Spring Framework to initialize managed beans and services.\nImplemented SOA architecture with Web Services using SOAP, JAX-WS, WSDL, UDDI and XML.\nUsed Struts Framework, Tag Libraries to implement J2EE design patterns (MVC).\nDeveloped user interface using\u00a0JSP, Struts published validation framework to support client side and Server-side validation.\nUsed Collections for Model classes in the DAO layer (Data Access Object) Involved in modifying some changes in DAO layer using Hibernate.\nCreated mappings among the relations and written SQL queries using Hibernate.\nImplemented Concurrency, Exception Handling and Collections whenever necessary.\nUsed Entity Beans to persist the data into IBM DB2 database like database access components, Creating Schemas and Tables.\nUsed SQL to perform data mapping and backend testing, also documented all the SQL queries for future testing purpose.\nCreated process flow for deploying application in Web Sphere application server.\nManaged build, reporting and documentation from the project information using Maven Tool and SVN for version control.\nUsed Jenkins for Continuous Integration.\nUsed JUnit for testing and used JIRA for tracking bugs.\nResponsible for the dealing with the problem, bug fixing and troubleshooting.\nEnvironment: Java, J2EE, HTML, CSS, JavaScript, JQuery, Ajax, Spring, Spring IOC, Spring AOP, Spring MVC, Hibernate, REST, SOAP, XML, XSLT, Eclipse, PL/SQL, JUnit, Maven Build Tool, IBM DB2, JIRA, Jenkins, SVN and IBM Web Sphere.\nClient: Radiant Technologies \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0    Jan\u201911 \u2013 Aug\u201912\nRole: Java/J2EE Developer\t\t\t\t\nDescription: The application is an enhancement of our Internet Financial Application Framework to provide the Internet financial facility for customers. Using this system retail and corporate customers can do Web transactions securely, process customer requests like claim a reporting, view all insurance policies, insurance payments etc. The application also facilitates second level authentication for paying the utility bills through web. \nRoles & Responsibilities:\nInvolved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use Case Transaction diagrams.\nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture.\nCreated user-friendly interface using HTML, CSS, JSP and JavaScript for client-side validation.\nDesigned the user interfaces using JSPs, developed custom tags, and used JSTL.\nImplemented Multithreading and Collections in java code.\nUsed AJAX for dynamically updating the content\nUsed Eclipse as IDE tool for creating Servlet, JSP, and XML.\nDeveloped various java business classes for handling different functions.\nImplemented Business processes such as user authentication, Transfer of Service using Session EJBs\nThe application was deployed on the JBoss.\nInvolved in build and deploying the application using ANT.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nDeveloped PL/SQL queries, Triggers and Stored Procedures to check the integrity of the data and actively involved in tuning SQL queries.\nDeveloped JUnit test cases for all the developed modules. Used SVN as version control\nMonitored the logs using Log4j and fixed the problem\nEnvironment: Java, J2EE, JSP, Struts, JNDI, DB2, HTML, CSS, EJB, XML, DOM, ANT, AJAX, JUnit, Eclipse, JBoss, MYSQL, LOG4J, SVN.\nClient: Verizon \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\t\t\t\t\t\t \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Jun\u201909 \u2013 Dec\u201910\nRole: Trainee Software Engineer \t\t\t\t\nDescription: This project was designed to build a Common Access Platform for customers and insurance agents using the Internet to interact with the system from any part and allow the customers to buy insurance online. Also, used by the HR department to manage the vast information generated due to massive business operations. The main objective is to help in tracking HR related issues, optimize and increase the productivity.\nRoles & Responsibilities:\nTechnical responsibilities included high level architecture and rapid development \nDesign architecture following J2EE MVC framework \nDeveloped interfaces using HTML, JSP pages and Struts -Presentation View \nDeveloped and implemented Servlets running under JBoss\nUsed J2EE design patterns and Data Access Object (DAO) for the business tier and integration Tier layer of the project \nUsed Java Message Service (JMS) for reliable and asynchronous exchange of important information, such as loan status report, between the clients and the bank\nDesigned and developed Message driven beans that consumed the messages from the Java message queue\nImplemented CMP entity beans for persistence of business logic implementation\nDevelopment of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement\nInspection/Review of quality deliverables such as Design Documents.\nWrote SQL Scripts,\u00a0Stored procedures and SQL Loader to load reference data.\u00a0\u00a0 \nEnvironment: J2EE (Java Servlets, JSP, Struts), MVC Framework, Apache Tomcat, Oracle, JMS, SQL, HTML, JDBC, EJB",
  "size_bytes": 47749,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:36.141025",
  "clean_text": "candidate objective accomplished java developer talented software engineer demonstrate success develop maintain business functionality seek work challenging environment promote individual organizational growth prove expertise maintenance web based client server architectures area like telecom financial insurance etc self starter fit work freely accomplish point reference date proficient organize follow finish undertaking achieve venture objective professional summary year involvement phase software development life cycle sdlc planning analysis design implementation testing maintenance client server applications web base application java technology verse complete software development life cycle sdlc methodology like agile methodology scrum xp waterfall follow test driven development tdd develop web base enterprise application java core java servlets jdbc hibernate web services soap rest mvc framework struts spring mvc expertise develop ui jsp java script bootstrap jquery ajax reactjs experience java feature lambda expressions make anonymous inline function call functional interface make code readable concise hand experience different spring framework module like spring core spring aop spring mvc spring batch spring security spring data spring boot experience develop xml base web services soap uddi wsdl approach rest base service jax rs jersey spring integration experience develop application service oriented architecture soa micro services architecture expertise work javascript ext js prototype js mvc javascript framework angularjs angular angular backbonejs reactjs nodejs hudson bamboo canvas jenkins create configure micro service architecture cdt directory project integrate angularjs application hand experience aws cloud service like ebs auto scaling vpc cloud formation rds amazon elastic load balancing iam cloud watch service aws infrastructure like dynamo db sqs emr focus high availability fault tolerance auto scaling work java streams api parallel streams api enable parallel processing collection distribute environment expert core java strong understanding garbage collector collections multithreading event handling exception handling generics proficient implement java design pattern like mvc session facade data access object dao factory singleton data transfer object controller knowledgeable rdbms concept like write sql queries work experience relational dbms like mysql apache solr elastic search oracle sql pl sql teradata sql server ms sql mongodb dynamo db cassandra postgre sql nosql dbms oracle performance tuning expertise design pojo class hibernate annotations ejb jpa api experience work devops continuous integration tool like github jenkins nexus jira sonarqube experience application server like web logic jboss apache tomcat ibm web sphere experience jms message exchange information reliable asynchronous way enterprise application apache activemq apache camel jms provider core development experience groovy grails restful web service apache kafka integration data processing spring multi thread message consumption work zookeeper maintain service experience develop core infrastructure python google app engine good experience cassandra nosql database good understanding openshift platform manage docker container kubernetes clusters mesos implement continuous delivery pipeline docker jenkins github aws ami run war ami deploy job jenkins brew master instance reduce time deployment micro service experience implementation jms exchange information reliable channel asynchronous way activemq rabbitmq kafka message queue good skills dojo components integrate end application ajax drive web end oo javascript framework experience eureka servers deploy hand experience netflix cloud fall technology like eureka hystrix ribbon experience dojo dom manipulation event handlers event strong experience database design pl sql write table stored procedures functions triggers indexers proficiency write complex query retrieve datum unit testing mocha chai expertise ide tool like spring tool suite rad eclipse proficient continuous integration continuous deployment tool like jenkins experience selenium junit mockito develop test case determine application functionality have experience unix linux python shell scripting deployment applications server experience write shell scripting deployment process expertise share file linux box window winscp secure ftp scp client microsoft windows experience work version control tool like git hub cvs good experience jira issue tracking experience build automation tool like gradle ant maven build deployment different environment technical skills professional experience t mobile seattle wa till date role stack developer description project develop t mobile platform web service act common gateway api different exist system like product offer management billing sale etc java web service act stop shop api different t mobile emerging business market resellers client partners look access t mobile api system role responsibility involve analysis specification design implementation testing phase software development life cycle sdlc agile methodology scrum develop application application implement agile methodology daily scrum meeting understand status resolve issue involve development user interface jsp javascript bootstrap jquery angular js reactjs nodej utilize java feature like lambda expression collection evaluation compare datum stream api bulk datum operation collection increase performance application parallel operation collection effective sort mechanism change sequential stream flow thread session establishment design develop application spring framework module like spring ioc developed controller classes spring mvc spring aop spring boot spring batch spring data module handle security spring security experience feature angular directive module routing highly angular router build single page application navigate different status multiple modal develop user interface jsp ajax java saas big datum cloud poc rbdms jsp tag library struts tag libraries simplify complexity application work high level design architecture developed initial prototype demonstrate google app engine utilization proof concept help understand gae related technology use efficiently develop restful web service retrieve json document relate customer consume soap base web services implemented micro services architecture divide application sub module implement restful services jax rs spring boot micro service architecture implement batch job deal large number chunk spring batch framework execute similar job simultaneously design develop ui framework build jsf prime faces create custom jsf facelet tag error handling data table true false marker etc responsible maintain expand aw cloud services infrastructure aws stack especially work database setup maintenance create aws instance design service store retrieve user datum mongo db database communicate remote server rest enable web services jersey framework experience implement api java multi thread environment develop integration module disparate client apache camel spring jdbc api talk mysql database read write operation develop soap web service jax ws api rest web service jax rs api ran ad hoc query cassandra cql script work experience gae google app engine paas involve app engine api datastore cloud storage bigtable blob store asynchronous service backend task queues modules schedule task app engine cron service exposure amazon web services aws work nosql cassandra store retrieve update manage detail ethernet provisioning customer order tracking write script jmeter test performance api experience make devops pipeline openshift kubernetes microservices architecture maintain svn repository devops environment automation code configuration responsible write design specifications generic application specific web service groovy n grail implement service layer cassandra core java datastax java api restful api spring core annotations dependency injection apache camel integrate spring framework develop bash script redact sensitive datum apache access error log se expression deploy war file environment parallel work drools engine spring integration validate business rule execute runtime web application development groovy grails jquery ajax hibernate api talk mysql database read write operation ensure idempotentcy krfs devops bash script experience nodej module include event http file system mysql write restful service server nodejs listen request device powershell devops windows base system understand role filenet csif framework project develop dash board monitor report cache coherence servers implement validation error handling cache framework oracle coherence cache create view component prime faces xhtml file configure jsf framework develop test script jsf spring mvc evaluate performance different module application implement persistence layer hibernate create pojo map database annotations experience write complex pl sql query join stored procedures functions triggers cursors index oracle db utilize kubernete docker runtime environment ci cd system build test deploy experience implementation jms exchange information reliable channel asynchronous way activemq message queue develop test case unit testing integration layer mockito framework experience test driven development tdd identify test case scenario unit test code junit framework gradle build tool deploy application websphere application server jenkins schedule test base carrier priority test case docker container management git version control common source code developer monitor error log fix problem write unit test mocha chai jira tool issue bug tracking monitoring work assignment system intellij ide application development environment agile methodology java jsp xml javascript jsp bootstrap jquery ajax angularjs reactjs nodejs hibernate spring spring ioc spring aop spring batch spring boot spring security spring mvc oracle mongodb mockito gradle websphere restful soa amazon web services aws docker micro services unix shell scripting git jira jenkins intellij wells fargo des moines ia role stack developer description wells fargo financial service provider dedicate provide mortgage financial investment insurance product customer hmc website design develop wells fargo customer home mortgage consultants access functionality online customer use hmc websites apply mortgage obtain home buying information online branch individual hmc opportunity subscribe modify hmc website support sale effort site admin wizard role responsibility involve phase software development life cycle sdlc agile methodology develop view controller component javascript jquery angular js create distribute oracle coherence domain configuration system design base oracle coherence experience building end end web application mean stack develop user friendly interface seamlessly combine new module existing login system angular js bootstrap develop mobile application java jenkins iis java saas big datum cloud poc rbdms java script jquery json restful web service angular js create maintainable testable single page application implement way datum bind ng filter application develop reusable interoperable web service module base soa architecture soap restful services expertise fix protocol api test admin application fix message like heartbeat logon logout resend request reject sequence pre trade trade post trade message develop service layer layer act bridge presentation layer datum access layer spring framework feature like spring jdbc spring orm apache camel integration route transform datum applications http protocol spring mvc design pattern hold ui datum serve request send response implement dependency injection ioc feature spring framework inject bean user interface aop logging configure develop web application jsf hibernate datum external client status technical support ticket mysql database develop oracle pl sql package store procedure datum warehouse consolidated loan information disparate system platform migrate legacy database etl tool develop custom pl sql package gap find etl tool develop web service api method pl sql sql xml xml enable conference reseller write client interface web conferencing platform involve migrate monolithic application micro service architecture developed micro service pivotal cloud foundry platform build spring boot services develop application application lifecycle management deliver reliable application develop persistence layer hibernate persist datum manage datum work hibernate map java object relational database sql query fetch datum insert update datum database develop hibernate configuration file query implement dao class web services call soap protocol wsdl descriptor file universal description discovery integration registry uddi create stored procedures function view index constraint trigger require sql tune reduce response time application develop json structure data transfer goggle web toolkit ui business tier develop graphical user interface gui display report datum jquery cross browser compatibility web application scaling gui design development java swing jfc open source web testing configure development environment websphere application server developer integration testing experience integration framework like apache camel enterprise integration develop test case unit testing junit jenkins maven automated build deployment track issue task individual jira ticketing system spring tool suite sts application development environment java html css jquery angularj spring ioc spring mvc spring aop spring security hibernate rest soap jax rs jax ws wsdl pivotal cloud oracle junit maven jenkins jira apache camel websphere application server sts ide client allstate insurance chicago il role java developer description allstate corporation large publicly hold personal line property casualty insurer america project involve design development web base internet application provide online insurance service web application provide functionality policy management profile management claim report customer access complete account information policy information receive instant auto insurance quote report claim role responsibility work design implementation market place application involve phase sdlc work agile development environment participate scrum meeting life cycle project role base application monitoring record audit history activity different role access site deliver technical solution utilize define technology stack implement end html css javascript angularjs develop declarative user interface jquery ajax interact java servlet integration sears product management rest api strut ajax highly interactive graphic user interface implement junit test case struts spring component develop action class action forms struts configuration file handle require ui action jsp view html web page component development develop server presentation layer struts mvc framework design develop application base spring framework mvc design pattern spring ioc dependency injection spring jdbc interact database design pattern like business delegate singleton factory dao performed inheritance base hibernate mapping table simplify datum hibernate involve implementation web service soap service interact offshore team coordinate guide development happen offshore junit perform unit test case oracle database sql pl sql script store procedure function trigger oracle form report performance tuning optimization java performance analysis tool load runner work installing configure weblogic application server maven build tool use cvs checkout check operation environment java strut hibernate jsp angular js html xml xsl xslt javascript ajax spring mvc soap oracle cvs j profiler java performance analysis tool eclipse maven weblogic client target minneapolis mn role java developer description application develop multiple web service track status purchase order access different database order collect place web base application oms assign order department order place web base application moment user able track status track tool application step process different department involve different tool different database track tool design develop way robustness flexibility access different db track status responsibility involve stage software development life cycle sdlc deliverable project agile methodology develop international error correction screens custom end form html css javascript jquery ajax gather clarify requirement business analyst feed high level customization design development installation phase spring framework dependency injection action class application context xml file involve implementation mvc pattern jsp spring controller develop business object spring ioc spring mvc spring aop implement mvc architecture jsp spring hibernate spring framework initialize manage bean service implement soa architecture web services soap jax ws wsdl uddi xml struts framework tag libraries implement design pattern mvc develop user interface jsp strut publish validation framework support client server validation collection model class dao layer data access object involve modify change dao layer hibernate create mapping relation write sql query hibernate implement concurrency exception handling collection necessary entity beans persist datum ibm database like database access component create schemas tables sql perform datum mapping backend testing document sql query future testing purpose create process flow deploy application web sphere application server manage build reporting documentation project information maven tool svn version control jenkins continuous integration junit testing jira track bug responsible dealing problem bug fixing troubleshooting environment java html css javascript jquery ajax spring spring ioc spring aop spring mvc hibernate rest soap xml xslt eclipse pl sql junit maven build tool ibm jira jenkins svn ibm web sphere client radiant technologies role java developer description application enhancement internet financial application framework provide internet financial facility customer system retail corporate customer web transaction securely process customer request like claim reporting view insurance policy insurance payment etc application facilitate second level authentication pay utility bill web roles responsibility involve documentation use case design uml modeling include development class diagram sequence diagram use case transaction diagram develop application struts framework leverage classical model view controller mvc architecture create user friendly interface html css jsp javascript client validation design user interface jsp develop custom tag jstl implement multithreading collections java code ajax dynamically update content eclipse ide tool create servlet jsp xml develop java business class handle different function implement business process user authentication transfer service session ejbs application deploy jboss involve build deploy application ant write sql jdbc prepare statement retrieve datum database develop pl sql query triggers stored procedures check integrity datum actively involve tune sql query develop junit test case develop module svn version control monitor log fix problem environment java jsp strut jndi html css ejb xml dom ant ajax junit eclipse jboss mysql svn client verizon role trainee software engineer description project design build common access platform customer insurance agent internet interact system allow customer buy insurance online hr department manage vast information generate massive business operation main objective help track hr relate issue optimize increase productivity role responsibility technical responsibility include high level architecture rapid development design architecture follow mvc framework develop interface html jsp page struts view developed implement servlets run jboss design pattern data access object dao business tier integration tier layer project java message service jms reliable asynchronous exchange important information loan status report client bank design develop message drive bean consume message java message queue implement cmp entity bean persistence business logic implementation development database interaction code jdbc api make extensive use sql query statement advanced prepare statement inspection review quality deliverable design documents write sql scripts store procedure sql loader load reference datum environment java servlets jsp struts mvc framework apache tomcat oracle jms sql html jdbc ejb"
}