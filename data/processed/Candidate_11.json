{
  "filename": "Candidate_11.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate_11.docx",
  "text": "Candidate11\n(515)309-1612\ncandidate11.javadeveloper@gmail.com\n8+ years of experience in IT industry worked in all phases of software development life cycle from requirements gathering to the production and successfully implemented several projects.\nPROFESSIONAL SUMMARY:\nExpert working knowledge in using methodologies Agile Methodology & Software Development Life Cycle.\nHaving work experience in different domains like Healthcare, Banking, Finance, Telecom, and Retail.\nDeveloped applications using Java8 features like lambda expressions and functional interfaces.\nProficient in developing front-end systems with JavaScript, ReactJs, JQuery, Ajax, Bootstrap, HTML5, CSS3, Tag Libraries, Custom Tags and JavaScript frameworks such as AngularJS, NodeJS.\nExperienced in Client-side validations using Ajax in NodeJS, AngularJS, dash boards reports using BackboneJS.\nExpert in Java/J2EE technologies such as Struts, Spring Framework, JSP, EJB, Hibernate and Webservice. \nDeveloped applications with Spring using technologies Spring Core,  MVC, DAO, ORM, Boot, Heroku, Security, Integration, Spring Zuul, Spring Eureka, Spring Hystrix, Spring Ribbon.\nUsed Spring Boot Acurator to monitor and manage your application and to interact with different HTTP endpoints such as health, bean details, version details, configurations.\nBuild, Test and developed application from Docker containers and deployed into PCF environment.\nUsed Hibernate for Object Relational Mapping ,\u00a0MyBatis SQL Maps, Slick, and Java Ultra-Lite Persistence. \nExpertise in back-end/server side Java technologies such as webservice, JPA, JMS, JDBC.\nExpert in using SOA and Webservice Technologies and Tools like Webservice, SOAP, REST, UDDI, SOAP UI. \nExperience in XML related technologies like XML, DTD, XSL, XSLT, XPATH, JAXB, JAXP, SAX and DOM Parsers.\nAdapt in server side development skills using Apache and good knowledge of database connectivity (Data Source) for SQL databases like Oracle, MySQL and NoSQL like MongoDB,  Cassandra.\nMongoDB is used to develop dynamic queries on documents using a document based query language.\nExpertise in using Cassandra for achieving denormalization through features like collections.\nHands on experience on Amazon Webservice  provisioning and good knowledge of AWS services like EC2, S3, Elastic Beanstalk, ELB (Load Balancers), RDS, VPC, Route53, Cloud Watch, Cloud Formation, IAM, SNS.\nUsed Microservice with Spring Boot through a combination of REST and Apache Kafka message brokers.\nExpertise in Microservice using Spring, Spring Boot, Spring Cloud to develop loosely coupled processes.\nExpertise in deploy J2EE applications on IBM WebSphere/Web Logic Application Servers, Tomcat and JBOSS. \nUsed Scala for anonymous functions to increase productivity, applications scalability, and reliability.\nFamiliar with Design Patterns like Singleton, Factory Design, MVC, Data Access Objects, , Adapter, Service Locator, Session Facade, Observer, DAO, service proxy and circuit breaker.  \nUsed Apigee for enterprise business use APIs to securely share data and services across various devices.\nExpertise in Docker containers, leveraging Linux Containers and AMI's to create DockerImages/containers.\nUsed Swagger for designing and describing APIs and for keeping the API design and documentation in sync.\nExpertise in working on building tools like ANT, Maven, Gradle, Groovy, Log4j .\nWorked with Version Control Systems like GIT, WinCVS, CVS, SVN, VSS and Rational Clear Case.\u00a0\nExperience in Webservice Technologies like SOAP, WSDL, UDDI and Restful. \nExperience in various Agile methodologies like Test Driven Development, SCRUM, and Pair Programming. \nDeveloping Unit  & Integration testing with JUnit, Karma, Jenkins, Camel, Selenium, Jasmine and Mockito.\nUsed Selenium as an automated testing for web applications across different browser and platforms.\n Technical Skills:\nPROFESSIONAL EXPERIENCE:\nClient: Liberty Mutual, Dover, NH                                                                                        September 2017 \u2013 Till Date\nRole: JAVA Full Stack Developer\nDescription: Liberty Mutual is an insurance company which offers auto & vehicle insurance, property insurance, life insurance and other insurances where user can manage their policies and file claims online. Company have few external partners where they upload and download necessary data. Our project is to process the transfer of file. Customer and Admin portals are used to trace and configure the transfer. Web Based File Transfer(WBFT) is developed to interact with liberty mutual teams by external trading partners using user interface.\n       Responsibilities:\nUpgraded existing UI with HTML5, CSS3, jQuery, Ajax, and Bootstrap with ReactJS interaction.\u00a0\nUsed various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors, and Gulp as a task runner.\nUsed Node Package Manager(NPM) online repository to install and update the dependencies.\nBuilt REST by building NodeJS in the back-end to handle requests sent from the jQuery Ajax calls.\nUsed Java 8 Lambda expressions to facilitate functional programming and for simplifying the development.\nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management.\nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed\u00a0Spring\u00a0Boot\u00a0Actuator to externalize application's configuration properties for various environments.\nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console.\nUsed NGINX as a reverse proxy with the Spring Netflix components like Eureka, Ribbon, and Spring Cloud.\nDeveloped microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice.\nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice.\nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging.\nUtilized\u00a0AWS\u00a0Lambda\u00a0platform to upload data into AWS S3 buckets and to trigger\u00a0Lambda Functions Including EC2.\nDeveloped Spring Bach for AWS S3 rules like User Creation, Folder Permission, and deletion of file \nUsed PL/SQL and Oracle databases to store the information about the file transaction, sender, and receiver.\nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation.\u00a0\nExposed and consumed SOAP based Webservice to communicate between systems.\nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter\u00a0to test performance of SOAP protocol.\u00a0\nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster.\nExperience in working with messaging systems like Kafka, Event Sourcing, and Active MQ.\nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP.\nUsed Datahub dashboard to search and filter the transactions and used elastic search as a search engine.\nCreated and configured new\u00a0JIRA\u00a0projects and worked\u00a0with\u00a0departments to maintain existing\u00a0JIRA projects.\nDeveloped Unit test cases using Junit, Mockito and Bamboo for continuous integration.\nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server.\nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver).\nCreated Clusters and instances in WebSphere 7.0 Network Deployment to support high availability, fail over and implemented horizontal clustering.\n      Environment: J2EE, ReactJs, jQuery, CSS3, HTML5, Ajax, NodeJS, Gulp, Core Java, Spring IOC, Spring MVC, \n      Spring Batch, Security, Spring Boot, Hibernate, Microservice, Eureka Server, NGINX, Swagger-UI, \n      Apache Kafka, AWS Cloud, AWS Lambda, S3, EC2, Scala, Datahub, REST Webservice, JAX-WS, SOAP UI, \n      JDBC, PL/SQL, ActiveMQ, JIRA, Bamboo, SVN, GIT, log4j, Junit, Selenium, JMS Queues, WebSphere.\nClient: Express Scripts, St. Louis, MO                                                                                         April 2016 \u2013 August 2017\nRole: JAVA Full Stack Developer\nDescription: Express Scripts provides integrated pharmacy benefit management services including network-pharmacy, claims processing, home delivery pharmacy services, specialty pharmacy benefit management through its subsidiary Accredit, benefit-design consultation, drug-utilization review, formulary management, medical and drug data analysis services to manage drug plans for health plans, self-insured employers and government agencies (both as administrator of employee benefits and public assistance programs).\n       Responsibilities:\nDesigned Prototype and project layout skeletons using AngularJS, JQuery, CSS3 and HTML5.\u00a0\nInvolved in designing and developed presentation layer using Ajax, jQuery, and third-party libraries. \nUsed various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors.\u00a0\nUsed Apache Cordova to build native mobile applications using HTML5, CSS3 and Javascript.\nXQuery provides the means to extract and manipulate data from XML documents or any data source that can be viewed as XML.\nUsed Adobe Experience manager(AEM) to manage and deliver digital experiences across websites.\nUsed Groovy for various markup languages such as XML, HTML, and support for regular expressions.\nUsed Java 8 Lambda expressions to facilitate functional programming and for simplifying the development.\nUsed Java8 Stream API for Parallel execution in the Collections framework module of core java.\nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management.\nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed Spring DI, annotations, and MVC to implement business layer and navigation part of application. \nUsed\u00a0Spring\u00a0Boot\u00a0Actuator to externalize application's configuration properties for various environments.\nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console.\nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice.\nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging.\nUtilized\u00a0AWS\u00a0Lambda\u00a0platform to upload data into AWS S3 buckets and to trigger other\u00a0Lambda Functions Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling.\nDatabase required for creation of new tables, PL/SQL stored procedures, functions, views, indexes, constraints, triggers and required SQL tuning to reduce the response time in the application.\nUsed Cassandra to handle huge amount of data across many servers with out single point of failure.\nImplemented service layer on the top of Cassandra using Core Java, Data Sax API and Restful API.\nUsed PostgreSQL for multi version concurrency control and transaction.\nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation.\u00a0\nExposed and consumed SOAP based Webservice to communicate between systems.\nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter\u00a0to test performance of SOAP protocol.\u00a0\nUsed Redis as in memory database, for storing and fetching data in memory to increase the performance.\nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster.\nWorked on Drools Rule Engines with corresponding to validate the business User Roles.\nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP.\nUsed Apigee for web-scale, enterprise flexibility on premise and hybrid deployment on single code base.\nCreated and configured new\u00a0JIRA\u00a0projects and worked\u00a0with\u00a0departments to maintain existing\u00a0JIRA projects.\nDeveloped Unit test cases using Junit, Mockito and Jenkins for continuous integration.\nUsed Apache Camel for integrating different applications with the enterprise design pattern. \nUsed Kubernetes for automating deployment, scaling and management of containerized applications.\nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server.\nDeveloped Maven scripts and builds using Maven\u00a0and continuous integration servers like Jenkins.\nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver).\nDeveloped, Tested and Debugged the\u00a0Java, JSP using Eclipse\u00a0RCP.\u00a0\nCreated Clusters and instances in WebSphere 7.0 Network Deployment to support high availability, fail over and implemented horizontal clustering.\n      Environment: J2EE, AngularJS, jQuery, CSS3, HTML5, Ajax, Core Java, Spring IOC, Spring MVC, Spring \n      Security, Spring Boot, Hibernate, Microservice, Eureka Server, Swagger-UI, Apache Kafka, AWS Cloud, \n      AWS Lambda, S3, EC2, Scala, MongoDB, REST Webservice, JAX-WS, SOAP UI, JDBC, PL/SQL, PostgreSQL,JIRA, \n      GIT, SVN, log4j, Maven, Apache Camel, Junit, Mockito, Jenkins, JMS Queues.\n      Client: Commerce Bank, Kansas City, MO                                                                    Jan 2015 \u2013 Mar 2016\n      Role: Sr. JAVA/J2EE Developer & Full Stack Developer\n      Description: The project was to enhance the existing online application with A/C Information, Funds  \n      Transfer, Payment Service, Credit Card Services, Investment Services, Rates Online Application Forms,\n      and Customer Service. Development was based on Spring MVC architecture.\n       Responsibilities:\nFollowed Agile software development paired programming, Test Driven Development, and Scrum meetings.\nDeveloped using new features of Java 1.8 annotations, Generics, enhanced for loop and Enums.\nUpgraded existing UI with HTML5, CSS3, jQuery and Bootstrap with AngularJS interaction.\nDeveloped Single page application and structured the JavaScript code using AngularJS framework including MVC architectures, different modules, specific controllers, templates, custom directives, and custom filters.\nWorked with java Swing GUI controls for developing a module in the front-end part.\nUsed Java-J2EE patterns like Model View Controller, Singleton, Data Access Objects, factory patterns.\nUsed Core Java concept like Multithreading, Concurrency for performance and memory tuning.\nUsed Spring Framework AOP Module to implement logging in the application for application status.\nSpring MVC Framework IOC design pattern is used to have relationships between application components.  \nDeveloped microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice.\nDeveloped Spring Quartz jobs to run the backend jobs and generated reports.\nUsed Hibernate for back end development and Spring dependency injection for middle layer development.\nDeveloped SOAP based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability\t\nDeveloped Microservice and worked on Spring Boot, deployed applications on Pivotal Cloud Foundry. \nUsed DAO pattern to fetch data from database using Hibernate to carry out various database.\nUsed PL/SQL to extract data from the database, delete data and reload data on Oracle DB. \nDeveloped Applications using Rule Engines- JBoss Drools 4.x to validate the business User Roles.\nWorked with Apache Camel as a standalone application by deploying in JBOSS application server. \nUsed Docker to deploy applications using containers to allow package up application with all configuations. \nUsed Spring Boot to interact through a combination of REST and Apache Kafka message brokers\nWorked on development and operations to facilitate deployment of components over AWS using Jenkins.\nUsed SVN, GIT for the version management and for version controlling software and JIRA for issue tracking.\nEnvironment:  Java 1.8, HTML5, CSS3, iQuery, Bootstrap, AngularJs, Swing, Threading, AWS cloud, Spring MVC, \nSpring Boot, Spring Quartz, Hibernate Framework, Hibernate Transaction Management, Hibernate Batch Transactions, JAX-WS, Microservices, PL/SQL, Oracle DB, Cassandra, JBoss Drools 4.x, Docker, JMS, Maven, Jenkins, Apache Camel, SVN, JIRA.\nClient: E-Trade Financial Corporation, Exchange Place                                               July 2012 \u2013 Dec 2014\nRole: Sr. JAVA/J2EE Developer\n       Description: E-Trade Financial Corporation is a U.S based financial services company headquartered in   \n       New York. It is a holding company, the major business of which is an online discount stock brokerage\n       service for self-directed investors.\n Responsibilities:\nPrepared Analysis document and followed AGILE software development with Scrum methodology.\nDeveloped the application on NodeJS platform using JavaScript programming.\nUsed JavaScript and JQuery for validating the input given to the user interface. \nApplied data transformation rules to transform code from one format to another format using NodeJS.\nCreated the Nodejs express server to build MVC framework from front-end side AngularJS to back-end.\nDeveloped front-end code with\u00a0Ajax call\u00a0in\u00a0AngularJS\u00a0and\u00a0jQuery\u00a0to retrieve data as\u00a0JSON Object.\nExtensive experience using framework APIs like Struts, SPRING, iBatis and Hibernate.\nWorked on the SPRING framework like SPRING IOC, SPRING DAO, SPRING ORM and Spring Integration. \nInvolved in the development of backend Logics or data access logic using Oracle DB & JDBC. \nDeveloped API using Hibernate to interact with the Oracle database. \nExpertise in Multithreading, Remote Method Invocation (RMI), EJB, Serialization, and Java Beans.\nWorked extensively on SPRING MVC framework to develop new internal web application.\nUsed Spring AOP components for the Logging, Exception handling and Transactional Models.\nEnforce compliance with dynamic processing and security policies by using Mule ESB. \nDeveloped Spring boot application with microservice and deployed it into AWS using EC2 instances. \nUses the DAO pattern for data access layer and JMS API for the messaging requirement.\nDesign PL/SQL batches using Core JAVA with connectivity to Oracle for data maintenance and handling.\nTest API responses for WCS changes deployed on continuous basis, validate Green Box and MongoDB data.\nDeveloped test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs.\nDeveloped and executed SQL queries for testing database integrity and for data analysis using Selenium.\u00a0\nDeveloped automated regression test cases in\u00a0Selenium\u00a0WebDriver using\u00a0Java programming language.\u00a0\nUsed Maven to build and generate code analysis reports and JENKINS for continuous integration.\nUsed WebLogic for design, development, and deployment of applications.\nEnvironment: Java, J2EE, SPRING, Hibernate, Struts, WebLogic, Restful, JQuery, AJAX, Ext JS, JavaScript, AngularJs, JSP, JSTL, Servlet, Microservice, Oracle, CRUD, PL/SQL, JIRA, Angular, GWT, JDBC, AWS, MongoDB, NodeJS, Adobe (CQ5), Bootstrap, Core Java, jBPM, NoSQL, UML, Eclipse, Junit, Maven, Agile, SOA, JIRA, JENKINS, Selenium.\nClient: US Cellular - Chicago, IL                                                                                                     April 2011 \u2013 June 2012\nRole: Java Developer\nDescription: US Cellular is the fifth-largest full-service wireless carrier in the United States, providing     national network coverage and industry-leading innovations designed to elevate the customer experience. The Chicago-based carrier has a strong line-up of cutting-edge devices that are all backed by a high-quality network in big and small cities and rural communities, and currently.        \nResponsibilities:\nSprint planning sessions and participated in the daily Agile SCRUM meetings.\nDesigned and implemented web module using SPRING MVC.\nDesigned & Developed persistence service using Hibernate framework.\nDevelop high-level class diagrams, sequence diagrams, and implement the same in Java, SPRING, and SOAP.\nDeveloped web screens in JSP, JSTL, CSS3 and client side validation using JavaScript and JQuery.\nUsed\u00a0Struts\u00a0validation and tiles framework in the presentation layer and tags to simplify complexities.\u00a0\nDeveloped JSP  custom tags in the web tier to dynamically generate web pages. Worked with\u00a0Struts\u00a0(MVC Paradigm) components such as Action Mapping, Action class, Dispatch action class, Action Form bean.\u00a0\nUsed SPRING ORM module for integration with Hibernate for persistence layer.\nUsed SPRING AOP in exception handling, which reduces the development time to handle the exceptions.\nDeveloped SOAP based Webservice using JAX-WS and tested the webservice with SOAPUI.s\nUsed JIRA for defect tracking and project management.\nUsed STS (SPRING Tool Suite) as software development platform for developing the whole application.\nUsed SVN for the version management and for version controlling software.\nConfigured Selenium\u00a0WebDriver, TestNG, Maven and created selenium\u00a0automation scripts using Test NG.\u00a0\nPerformed functional testing to identify critical points  and automated it by using\u00a0Selenium\u00a0web driver.\u00a0\nUnit and integration test cases are designed  using Junit and Log4j for log error, info and debug messages.\nTested Service and data access tier using JUnit in TDD methodology.\nFollowed Agile SCRUM methodology and used Test Driven Development (TDD).\u00a0\nProject builds with Maven and Eclipse as IDE for application development and integration of  frameworks.\nUsed Apache Tomcat as application server to deploy the application.\nEnvironment: Java/J2EE, JSP, Spring, Servlet, JDBC, Hibernate, Soap, SPRING, Struts, XML/XSL, DB2, JUnit, JSTL, Jira, Eclipse, SOAP Webservice, Selenium, TDD, SOAP UI, AJAX-WS RAD, Log4j, SQL, Maven, Tomcat, Log4j, WebLogic.\n Client: Footlocker -  New York, NY                                                                                                           Oct 2009 \u2013 Mar 2011\n Role: JAVA/J2EE Developer\n Description: This is an internet based online shopping website in which products will be sold                         electronically involving buyers and sellers. The application also has googled map to represent the address. The products that this application sell, or buy are related to electronic products, consumer products and household products.\nResponsibilities:\nInvolved in the complete Software Development Life Cycle including Requirement Analysis, Design, Implementation, Testing and Maintenance.\nDeveloped JSP, HTML5, XHTML5, CSS3 pages for modified views worked on responsive web design.\nWrote Code to interact with back-end JAVA, AJAX,\u00a0JSON.\nUsed AJAX with JQuery to parse JSON object to dynamically overlay contents on web pages.\nUsed JSF\u00a0components and custom styles to convert model output to a tabular schedule view for trainees.\nResponsible for system analysis, design and development, which is built on top of J2EE and SPRING MVC.\nInvolved in various phases of Software Development Life Cycle using Agile Methodology.\nDeveloped code for obtaining bean references in SPRING framework using Dependency Injection.\nDeveloped DAO layer using Hibernate and SPRING and implemented the web tier using SPRING MVC.\nUsed Java/J2EE Design Patterns such as DAO pattern, MVC pattern, singleton in the project extensively, which facilitates clean distribution of roles and responsibilities across various layers of processing.\nInvolved in consuming and developing RESTful Webservice using SPRING MVC and Hibernate.\nImplemented Maven Script to create JAR, WAR, EAR and deploy the entire project onto the WebSphere.\nUsed Oracle SQL developer for the writing queries or procedures in SQL.\nMonitored the error logs using Log4J and fixed the problems and GIT, SVN for version control.\nUsed WebSphere as the Application Server to deploy the application.\nUsed\u00a0JUnit\u00a0for the unit testing of various modules.\nEnvironment: Java/J2EE, Eclipse, JSP, SOAP, RESTful, JMS,AJAX, JSON, SPRING, Hibernate, XML, XSLT, HTML5, XHTML5, CSS3, JavaScript, JSF, WebSphere, Oracle SQL Developer, Maven, Agile scrum, Integration tool, Log4J, GIT, JUnit.\nClient: YANA Software Pvt., LTD - China.                                                                    Sep 2008- Sep 2009  \nRole: JAVA/J2EE Developer\nDescription:  The product was online banking system which provides personal savings details to the clients. It offers a wide range of financial clients and as per users account status offers him to take up the new schemes. Upon the user request it generates the corresponding requests and sends to the user.\nResponsibilities: \nDeveloped presentation screens by using JSP, HTML and JavaScript.\nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action   Classes for the entire application using Struts Framework and used for server side validation..\nPerformed client side validations using JavaScript.\nUsed Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer.\nUsed HQL statements and procedures to fetch the data from the database.\nTransformed, Navigated and Formatted XML documents using XSL, XSLT.\nUsed JMS for asynchronous exchange of message by applications on different platforms.\nDeveloped the view components using JSP, HTML, Struts Logic tags and Struts tag libraries.\nInvolved in developing SQL queries, stored procedures, and functions.\nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL.\nUsed JUnit Testing Framework for performing Unit testing.\nDeployed application in Tomcat and developed using Rational Application Developer RAD.\n Environment: Struts 2.0, Hibernate 3.0, Servlets 2.5, JSP, JMS, CVS, JavaScript, XSL, XSLT, PL/SQL, Junit, Tomcat, Oracle 10g.                                                                                 ",
  "size_bytes": 69066,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:58.191029",
  "clean_text": "year experience industry work phase software development life cycle requirement gather production successfully implement project professional summary expert work knowledge methodology agile methodology software development life cycle have work experience different domain like healthcare banking finance telecom retail develop application feature like lambda expression functional interface proficient develop end system javascript reactjs jquery ajax bootstrap tag libraries custom tags javascript framework angularjs nodejs experience client validation ajax nodejs angularjs dash board report backbonejs expert java technology struts spring framework jsp ejb hibernate webservice develop application spring technology spring core mvc dao orm boot heroku security integration spring zuul spring eureka spring hystrix spring ribbon spring boot acurator monitor manage application interact different http endpoint health bean detail version detail configuration build test develop application docker container deploy pcf environment hibernate object relational mapping mybatis sql maps slick java ultra lite persistence expertise end server java technology webservice jpa jms jdbc expert soa webservice technologies tools like webservice soap rest uddi soap ui experience xml relate technology like xml dtd xsl xslt xpath jaxb jaxp sax dom parsers adapt server development skill apache good knowledge database connectivity data source sql database like oracle mysql nosql like mongodb cassandra mongodb develop dynamic query document document base query language expertise cassandra achieve denormalization feature like collection hand experience amazon webservice provision good knowledge aws service like elastic beanstalk elb load balancers rds vpc cloud watch cloud formation iam sns microservice spring boot combination rest apache kafka message broker expertise microservice spring spring boot spring cloud develop loosely couple process expertise deploy application ibm websphere web logic application servers tomcat jboss scala anonymous function increase productivity application scalability reliability familiar design patterns like singleton factory design mvc data access objects adapter service locator session facade observer dao service proxy circuit breaker apigee enterprise business use api securely share datum service device expertise docker container leverage linux containers ami create dockerimages container swagger design describe api keep api design documentation sync expertise work building tool like ant maven gradle groovy work version control systems like git wincvs cvs svn vss rational clear case experience webservice technologies like soap wsdl uddi restful experience agile methodology like test driven development scrum pair programming develop unit integration testing junit karma jenkins camel selenium jasmine mockito selenium automate testing web application different browser platform technical skills professional experience client liberty mutual dover nh september till date role java stack developer description liberty mutual insurance company offer auto vehicle insurance property insurance life insurance insurance user manage policy file claim online company external partner upload download necessary datum project process transfer file customer admin portal trace configure transfer web base file develop interact liberty mutual team external trading partner user interface responsibility upgrade exist ui jquery ajax bootstrap reactjs interaction jquery bootstrap plug like date picker bootstrap selector gulp task runner node package online repository install update dependency build rest build nodejs end handle request send jquery ajax call java lambda expression facilitate functional programming simplify development develop class core java concept like multithreading concurrency memory management multithreading develop helper class programming improve overall performance spring boot actuator externalize application configuration property environment configure swagger ui register microservice eureka monitor service spring boot console nginx reverse proxy spring netflix component like eureka ribbon spring cloud develop microservice spring eureka retrieve api route implemented spring circuit breaker pattern integrate hystrix dashboard monitor spring microservice define hibernate name queries batch operation define criteria queries microservice microservice build spring boot spring security deploy aws cloud spring cloud aws core spring cloud aws context spring cloud aws message utilize aws lambda platform upload datum aws bucket trigger lambda functions include develop spring bach aws rule like user creation folder permission deletion file pl sql oracle database store information file transaction sender receiver develop rest webservice produce xml json perform task leverage web mobile application restful webservice jersey jax rs implementation expose consume soap base webservice communicate system develop soaps base jax ws webservice interface integrate multiple system code usability jmeter test performance soap protocol apache kafka build real time datum pipeline store datum distribute cluster experience work message system like kafka event sourcing active mq soap ui functional testing performance testing regression testing test rest soap datahub dashboard search filter transaction elastic search search engine create configure new jira project work department maintain exist jira project develop unit test case junit mockito bamboo continuous integration docker collaborate code run deliver securely linux windows server logging git svn project management version management functional testing end application selenium ide web driver create clusters instance websphere network deployment support high availability fail implement horizontal clustering environment reactjs jquery ajax nodejs gulp core java spring ioc spring mvc spring batch security spring boot hibernate microservice eureka server nginx swagger ui apache kafka aws cloud aws lambda scala datahub rest webservice jax ws soap ui jdbc pl sql activemq jira bamboo svn git junit selenium jms queues websphere client express scripts louis mo april august role java stack developer description express scripts provide integrate pharmacy benefit management service include network pharmacy claim processing home delivery pharmacy service specialty pharmacy benefit management subsidiary accredit benefit design consultation drug utilization review formulary management medical drug datum analysis service manage drug plan health plan self insure employer government agency administrator employee benefit public assistance program responsibility design prototype project layout skeleton angularjs jquery involve design develop presentation layer ajax jquery party library jquery bootstrap plug like date picker bootstrap selector apache cordova build native mobile application javascript xquery provide mean extract manipulate datum xml document datum source view xml adobe experience manage deliver digital experience website groovy markup language xml html support regular expression java lambda expression facilitate functional programming simplify development stream api parallel execution collections framework module core java develop class core java concept like multithreading concurrency memory management multithreading develop helper class programming improve overall performance spring di annotation mvc implement business layer navigation application spring boot actuator externalize application configuration property environment configure swagger ui register microservice eureka monitor service spring boot console define hibernate name queries batch operation define criteria queries microservice microservice build spring boot spring security deploy aws cloud spring cloud aws core spring cloud aws context spring cloud aws message utilize aws lambda platform upload datum aws bucket trigger lambda functions include mongodb focus high availability fault tolerance auto scaling database require creation new table pl sql store procedure function view index constraint trigger require sql tune reduce response time application cassandra handle huge datum server single point failure implement service layer cassandra core java data sax api restful api postgresql multi version concurrency control transaction develop rest webservice produce xml json perform task leverage web mobile application restful webservice jersey jax rs implementation expose consume soap base webservice communicate system develop soaps base jax ws webservice interface integrate multiple system code usability jmeter test performance soap protocol redis memory database store fetch datum memory increase performance apache kafka build real time datum pipeline store datum distribute cluster work drools rule engines correspond validate business user roles soap ui functional testing performance testing regression testing test rest soap apigee web scale enterprise flexibility premise hybrid deployment single code base create configure new jira project work department maintain exist jira project develop unit test case junit mockito jenkins continuous integration apache camel integrate different application enterprise design pattern kubernetes automate deployment scaling management containerized application docker collaborate code run deliver securely linux windows server develop maven script build maven continuous integration server like jenkins logging git svn project management version management functional testing end application selenium ide web driver develop test debug java jsp eclipse rcp create clusters instance websphere network deployment support high availability fail implement horizontal clustering environment angularjs jquery ajax core java spring ioc spring mvc spring security spring boot hibernate microservice eureka server swagger ui apache kafka aws cloud aws lambda scala mongodb rest webservice jax ws soap ui jdbc pl sql postgresql jira git svn maven apache camel junit mockito jenkins jms queues client commerce bank kansas city mo jan mar role sr java developer stack developer description project enhance exist online application c information funds transfer payment service credit card services investment services rates online application forms customer service development base spring mvc architecture responsibility follow agile software development pair programming test driven development scrum meeting develop new feature java annotation generics enhance loop enums upgrade exist ui jquery bootstrap angularjs interaction develop single page application structure javascript code angularjs framework include mvc architecture different module specific controller template custom directive custom filter work java swing gui control develop module end java pattern like model view controller singleton data access objects factory pattern core java concept like multithreading concurrency performance memory tuning spring framework aop module implement logging application application status spring mvc framework ioc design pattern relationship application component develop microservice spring eureka retrieve api route implemented spring circuit breaker pattern integrate hystrix dashboard monitor spring microservice develop spring quartz job run backend job generate report hibernate end development spring dependency injection middle layer development develop soap base jax ws webservice interface integrate multiple system code usability developed microservice work spring boot deploy application pivotal cloud foundry dao pattern fetch datum database hibernate carry database pl sql extract datum database delete datum reload datum oracle db developed applications rule jboss drool validate business user roles work apache camel standalone application deploy jboss application server docker deploy application container allow package application configuation spring boot interact combination rest apache kafka message broker work development operation facilitate deployment component aws jenkins svn git version management version control software jira issue tracking environment java iquery bootstrap angularjs swing threading aws cloud spring mvc spring boot spring quartz hibernate framework hibernate transaction management hibernate batch transactions jax ws microservices pl sql oracle db cassandra jboss drool docker jms maven jenkins apache camel svn jira client e trade financial corporation exchange place july dec role sr java developer description e trade financial corporation base financial service company headquarter new york hold company major business online discount stock brokerage service self direct investor responsibility prepare analysis document follow agile software development scrum methodology develop application nodejs platform javascript programming javascript jquery validate input give user interface applied datum transformation rule transform code format format nodejs create nodejs express server build mvc framework end angularjs end develop end code ajax angularjs jquery retrieve datum json object extensive experience framework api like strut spring ibatis hibernate work spring framework like spring ioc spring dao spring orm spring integration involve development backend logic datum access logic oracle db jdbc develop api hibernate interact oracle database expertise multithreading remote method invocation rmi ejb serialization java beans work extensively spring mvc framework develop new internal web application spring aop component logging exception handling transactional models enforce compliance dynamic processing security policy mule esb develop spring boot application microservice deploy aws instance use dao pattern datum access layer jms api message requirement design pl sql batch core java connectivity oracle datum maintenance handling test api response wcs change deploy continuous basis validate green box mongodb datum develop test case perform unit test junit framework jira track bug develop execute sql query test database integrity datum analysis selenium develop automate regression test case selenium webdriver java programming language maven build generate code analysis report jenkin continuous integration weblogic design development deployment application environment java spring hibernate struts weblogic restful jquery ajax ext js javascript angularjs jsp jstl servlet microservice oracle crud pl sql jira angular gwt jdbc aws mongodb nodejs adobe bootstrap core java jbpm nosql uml eclipse junit maven agile soa jira jenkins selenium client cellular chicago il april june role java developer description cellular fifth large service wireless carrier united states provide national network coverage industry lead innovation design elevate customer experience chicago base carrier strong line cut edge device back high quality network big small city rural community currently responsibility sprint planning session participate daily agile scrum meeting design implement web module spring mvc design developed persistence service hibernate framework develop high level class diagram sequence diagram implement java spring soap develop web screen jsp jstl client validation javascript jquery strut validation tile framework presentation layer tag simplify complexity develop jsp custom tag web tier dynamically generate web page work strut mvc paradigm component action mapping action class dispatch action class action form bean spring orm module integration hibernate persistence layer spring aop exception handling reduce development time handle exception develop soap base webservice jax ws test webservice jira defect tracking project management sts spring tool suite software development platform develop application svn version management version control software configure selenium webdriver testng maven create selenium automation script test ng performed functional testing identify critical point automate selenium web driver unit integration test case design junit log error info debug message test service datum access tier junit tdd methodology follow agile scrum methodology test driven development tdd project build maven eclipse ide application development integration framework apache tomcat application server deploy application environment java jsp spring servlet jdbc hibernate soap spring struts xml xsl junit jstl jira eclipse soap webservice selenium tdd soap ui ajax ws rad sql maven tomcat weblogic client footlocker new york ny oct mar role java developer description internet base online shopping website product sell electronically involve buyer seller application google map represent address product application sell buy relate electronic product consumer product household product responsibility involve complete software development life cycle include requirement analysis design implementation testing maintenance develop jsp page modify view work responsive web design wrote code interact end java ajax json ajax jquery parse json object dynamically overlay content web page jsf component custom style convert model output tabular schedule view trainee responsible system analysis design development build spring mvc involve phase software development life cycle agile methodology develop code obtain bean reference spring framework dependency injection develop dao layer hibernate spring implement web tier spring mvc java design patterns dao pattern mvc pattern singleton project extensively facilitate clean distribution role responsibility layer processing involve consume develop restful webservice spring mvc hibernate implement maven script create jar war ear deploy entire project websphere oracle sql developer writing query procedure sql monitor error log fix problem git svn version control websphere application server deploy application junit unit testing module environment java eclipse jsp soap restful jms ajax json spring hibernate xml xslt javascript jsf websphere oracle sql developer maven agile scrum integration tool git junit client yana software pvt ltd china sep sep role java developer description product online banking system provide personal saving detail client offer wide range financial client user account status offer new scheme user request generate correspond request send user responsibility develop presentation screen jsp html javascript implement model view controller architecture develop form class action class entire application struts framework server validation performed client validation javascript hibernate annotations reduce time configuration level access annotated bean hibernate dao layer hql statement procedure fetch datum database transform navigate format xml document xsl xslt jms asynchronous exchange message application different platform develop view component jsp html struts logic tag strut tag library involve develop sql query store procedure function creation database object like table view oracle tool like toad sql plus involve write store procedure pl sql junit testing framework perform unit testing deploy application tomcat develop rational application developer rad environment strut hibernate servlets jsp jms cvs javascript xsl xslt pl sql junit tomcat oracle"
}