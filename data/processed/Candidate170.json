{
  "filename": "Candidate170.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate170.docx",
  "text": "Candidate 170\n+1(940)437-0150\nCandidate170atwork@gmail.com\nPROFESSIONAL SUMMARY:\nAround 8 years of experience in the requirement analysis, design, development, testing, implementation, and support using Object Oriented Methodologies and Java/J2EE technologies.\nActively involved in each phase of Software Development Life cycle (SDLC).\nExpertise in client scripting language and server scripting languages like HTML, CSS, JavaScript, Groovy, JQuery, Ajax, AngularJS, JSP, NodeJS, ExtJS, BackboneJS, ReactJS, JSON, Bootstrap.\nExtensive experience working in Spring framework, Struts framework, O/R Mapping Hibernate framework, Mybatis and web services.\nExperience using Spring MVC, Spring Boot, Spring Cloud, Spring DAO, Spring Data, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring Security.\nExperience in developing applications using Micro Services architecture.\nExpert in Core Java with strong understanding of Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nExpertise in developing reliable and scalable enterprise applications using Servlets, JSPs, Structs, JSTL, JDBC, AJAX, JSF, EJB and Web Services.\nStrong work experience in application integration and communicating using SOA, Web Services such as Simple Object Access Protocol(SOAP), Representational State Transfer (REST/ Restful), JAX-RPC, JAX-RS, JAX-WS, WSDL, UDDI, Apache CXF, JAXB, XSD, Axis 2.\nExcellent knowledge and experience in writing SQL queries, Stored Procedures, Triggers and views using various databases such as MS SQL Server, MySQL, IBM DB2, Oracle databases and NoSQL database systems like Mongo DB, Cassandra.\u00a0\nExpertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XForms, XSL-FO and parsers like SAX, DOM.\nExperienced in JMS and Kafka over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache Active MQ and Apache Camel as JMS provider.\nExperience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server.    \nHands on experience in deploying application in Google App Engine. \u00a0                    \nUtilized Java 1.8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.\nManaged Amazon Web Services like EC2, S3 bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud (VPC) through AWS Console and API Integration.\nHands on experience with amazon web services (AWS) and amazon cloud technologies such as Amazon EC2 (virtual servers) and Amazon Cloud Watch (monitoring).\nSkilled in programming scripting languages like Java \nDeploy application updates to AWS and monitored the load balancing of different instances.\nDeployed the Applications into Docker container and made easily accessible at runtime using Pivotal Cloud Foundry and other cloud services like AWS, Netflix Eureka.\nExperience in developing logging and standard mechanism based on Log4j and SLF4j.\nExperience in working in agile practices like ATDD\u00a0and TDD using Junit, and mocking libraries like Mockito, Jmock for Java\u00a0applications and Karma JS, Jasmine, Mocha JS, cucumber JS and Selenium web driver for UI applications.\u00a0\nWorked on implementing full life cycle of software development process (SDLC) in using version control tools like Git, Rational Clear Case, Tortoise SVN, CVS (Concurrent Version System).\nHands-on experience working with Continuous Integration (CI) build-automation tools such as Jenkins along with Build Plugins like Maven, Gradle and Apache Ant.\nExperienced in the formation and mentoring of project teams working on Agile methodologies to deliver business critical software applications using tools like Jira.\nSignificant experience in web development tools like NetBeans, Adobe Dreamweaver, Spring Tool Suite, Eclipse, intelliJ and RAD.\nHands on experience with Windows, UNIX and Linux Environments.\nHaving Experience on Shell Scripting and Deployment of Applications in Server.\nExperience in designing, developing, and deploying J2EE applications on IBM Web sphere, Web logic, Apache Tomcat, Glassfish, Redhat and JBOSS Servers.\nTECHNICAL SKILLS:\nPROFESSIONAL EXPERIENCE:\nClient: MasterCard \t\t\t\t\t\t\t\t\tFeb 2016 \u2013 Till Date\nLocation: St Louis, MO\nRole:  Full Stack Java Developer\nDescription: MasterCard Worldwide is an American multinational financial services corporation. Its principal business is to process payments between the banks of merchants and the card issuing banks or credit unions of the purchasers who use the MasterCard brand debit and credit cards to make purchases.\nResponsibilities:\nInvolved in the complete SDLC (software development life cycle) of the application from requirement analysis to testing. \nExtensively worked on Responsive Web Design (RWD) page development using HTML5, CSS3, JQuery, JavaScript, Backbone.js, Twitter Bootstrap, Ajax, Angular JS, JSON, JSF UI Components and JSP.\nDefined new validations through AngularJS for the form field validation implemented through HTML5.\nUsed NodeJS to run AngularJS on server with mock JSON data and completed the UI development independent of server.\n\u00a0Implemented new features in Groovy\u00a0programming language as a part of Jenkins continuous delivery.\u00a0\nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nUtilized Java 1.8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.\nDeveloped the application using J2EE Design Patterns like Business Delegate, Factory, Singleton, Session Facade, Service Locator and DAO. \n\u00a0Used Java8\u00a0features in developing the code like Lambda expressions, creating resource classes, fetching documents from database.\u00a0\nIntegrated Scala\u00a0Web Service with Relational DB using Slick\nUsed JAX-Web services\u00a0to interact with other applications using SOAP and WSDL file.\nDeveloped RESTful API for assessment indicators module and token based authentication for RESTful services\u00a0using Spring Security.\nInvolved in building database Model, APIs and Views utilizing Python, to build an interactive web based solution.\u00a0\nUsed Jersey to implement Restful Web Service and used XML form to transfer the data. \nExposed SOAP webservices as API's using Apigee\u00a0Edge by implementing API Proxies\u00a0\n\u00a0Deployed and Monitored Micro Services\u00a0Using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry.\nFollowed Agile Methodology in analyze, define, and document the application, which will support functional and business requirements. Coordinate these efforts with Functional Architects. \nWorked and involved in deployment of core platform technologies, techniques, and web app frameworks such as spring, JBOSS, Tomcat, JSON, XML, HTML5, and Web Services.\nUsed Spring MVC module to develop MVC Architecture. \nDeveloped the Controller to handle the requests and responses.\nUsed Core Java to develop Business Logic as Spring Beans. \nConfigured Spring Container to implement IOC/DI of the Spring Beans, and to manage the beans life circle.\nWorked on Apache Camel, RabbitMQ for sending messages over queue.\u00a0\nDeployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka\nUsed Spring Security and OAuth2.0 for Authentication and Authorization of the application.\nImplemented Spring AOP for declarative transaction management.\nCreated Stored Procedures, functions and Packages in Oracle 10g using SQL\u00a0and\u00a0PL/SQL\u00a0for the Audit Trail using Oracle 10g as backend.\u00a0\nWrote Microservices to export/import data and task scheduling and Spring boot, Spring and Hibernate in the Micro services\u00a0and Swagger API for Microservices.\u00a0\nDeveloped API for using AWS Lambda to manage the servers and run the code in the AWS\nDesigned, Configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the Amazon cloud formation.\nExperienced in setting up Amazon EC2 instances, virtual private cloud (VPCs), and security groups. Setting up databases in AWS using RDS, storage using S3 bucket and configuring instance backups to S3 bucket.\nDeveloped POJO objects and used Hibernate as the Object-Relational Mapping (ORM) tool to access the persistent data from SQL Server. \nManaged code versioning with GitHub and deployment to staging and production servers\nUsed Rest Controllers to replace the existing operations layer, which acts as bridge between business layer and the UI. \nWorked on Solr, Elastic Search, Kafka, Flume, MangoDB and Cassendra.\nUsed Jenkins as build management tool for continuous integration process.\nUsed Google App Engine\u00a0cloud services to launch Linux and windows machines.\nDeveloped Unit Test Cases. Used Junit for unit testing, Selenium for the testing of the application.\nConfigured pom.xml to deploy the project using Maven.\nProvided Technical support for production environments resolving the issues, analyzing the defects, providing and implementing the solution defects. \nEnvironment: Java, Lambda, J2EE,\u00a0HTML, CSS, JavaScript, JQuery, Apache Camel,  AJAX, AngularJS, Bootstrap, JSON, JSP, JNDI, Oracle, Apache Camel, RabbitMQ, Spring AOP, Hibernate, Springcloud, Google Cloud Platform Spring MVC, Spring JDBC, JDBC, Web-Services, SOA (Service-oriented) Architecture, AWS, Redis, REST, JAX-RS, Jersey, JUnit, JAX-B, WebSphere, JIRA, Maven, GIT, RAD, Jenkins, MongoDB, PostgreSQL, Cassendra, Agile Methodology.\nClient: BCBS\t\t\t\t\t\t\t\t\t\tDec 2014 \u2013 Jan 2016\nLocation: Chicago, IL\nRole: JAVA Full Stack Developer\nDescription:\n Blue Cross and Blue Shield is a leading insurance company owned by its policyholder. BCBS is the health insurance and health care provider company. \u201cFind a plan\u201d is a web based J2EE application, created to help individuals and families easily shop for, and buy health insurance. Well mark offers a variety of insurance plans, as well as tools to help you choose the plan that\u2019s right for you.\nResponsibilities:\nInvolved in SDLC requirements gathering, analysis, design, development and testing of application developed using AGILE methodology.\nCreated user-friendly GUI interface using HTML5, CSS3, JavaScript, JQuery, AngularJS, Node.js, ExpressJS, Backbone.js, AJAX, XML and JSON.\u00a0\nInvolved in designing the client-side module architecture based on new Angular Framework.\nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nImplemented persistence framework using Hibernate& Handled Transaction Management using the provided data source.\nResponsible for designing Hibernate mapping files based on business logic and Object relationships.\nDeveloped restful web service APIs using Spring Framework such as Spring Core, Spring MVC, Spring\u00a0\nAOP and Java\u00a0Persistence API with a backend PostgreSQL and Cassendra\u00a0database.\nInvolved in developing Web Services to send XML request and reading the response SOAP UI from Java platform.\nInstalled and configured various components of Hadoop\u00a0ecosystem and maintained their integrity.\u00a0\n\u00a0Involved in extracting customer's Big data from various data sources into Hadoop\u00a0HDFS. This included data from mainframes, databases and logs data from servers.\nConsumed Web Services to interact with other external interfaces to exchange the data in the form of XML and by using SOAP.\n\u00a0Used Apigee as a API gateway for APIs transformation, multiple authentication mechanisms\u00a0\n\u00a0Migrating application functionality in sending emails from MySQL to NoSQL database implemented by Google Cloud platform\u00a0which handles BIG Data.\u00a0\nExtensively used Google Cloud\u00a0resources like Compute Engine, IAM, Google\u00a0Container Registry, Container Builder and Cloud\u00a0Storage buckets.\u00a0\nMigrating servers, databases, and applications from AWS On-premises to  Google cloud platform\nCreated Restful Web services using Jersey API (JAX-RS) while data exchange was carried out between application and services\u00a0using JSON.\u00a0\n\u00a0Used Apache Camel to implement Java\u00a0Message Service (JMS) API for sending and receiving email notifications to the employee about notifications to their portal.\u00a0\nCreating and supporting of JMS, MQ\u00a0connection factory, topics, queues, channel, listeners.\u00a0\nImplemented microservices using Spring boot, spring based microservices, and enabled discovery using Netflix eureka server.\nUsed Java-PHP\u00a0bridge code to integrate Java\u00a0with PHP.\u00a0\nUsed Maven Deployment Descriptor Setting up build environment by writing Maven build.xml, taking build configuration and deployment of the application on JBoss Application Server.\nUsed Spring MVC, Ajax and Dependency Injection for handling presentation and business logic.\nTo maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP.\nIntegrated Spring DAO for data access using Hibernate.\nUsed Apache Camel framework for connectivity to different APIs and transports.\nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nIntegrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring.\nExtensively used HQL and SQL for querying databases. \nDeveloped Message Driven Bean for asynchronous sending Messages using JMS.\nUsed Rest methodology for the service layer interface and used JSON for the data transformation.\nDeveloped various AJAX and JSON calls for the communication between the server and the UI.\nDeveloped web services for produce and consumed the services by making Web Service Calls to remote services in different applications.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners \nEstablished Database Connectivity using Hibernate O/R mapping with Spring ORM for MySQL Server. \nDeveloped the Mapping Resource Files for the database entities.\nPackaged and deployed the application in IBM Web sphere.\nUsed\u00a0IntelliJ\u00a0as IDE to develop the application and followed the standard features for debugging and running.\nWritten LINUX shell scripts to identify user login information.\nPlayback and technical presentations to the clients on acquired knowledge.\nGenerating reports in PDF using iText Open source and excel file formats.\nUsed log4J for application logging and notification tracing mechanisms.\nAnalysis and Bug fixing of the production problems and defects along with enhancements\nUsed Rational Clear Case for the version control\nUsed Maven as the build tool.\nUsed J-Unit Testing and Ant Scripts.\nUsed JIRA for tracking the Project Stories in AGILE Methodology.\nEnvironment: Java, JDK, J2EE (EJBs, JSP/Servlet, JDBC), Mongo DB, XML, HTML, CSS, Java Script, JQuery, Ajax, AngularJS, NodeJS, JSON, JMS,  Struts, Spring, Apache Camel, MVC design patterns, Spring MVC, Hibernate, Agile, Ant, Maven, Netflix, Rational Clear Case, Web sphere Server, IBM Web Sphere, Apache Camel, SOAP UI, JNDI, Log4J, PostgreSQL,  MySQL Server, Google cloud platform, JIRA , RMI, IntelliJ,  IDE, LINUX. \nClient: US Cellular\t\t\t\t\t\t\t\t\tNov 2013 \u2013 Nov 2014\nLocation: Knoxville, TN\nRole: Java Developer\nDescription:\nUs Cellular is a leading company in providing the wireless services to the mobile platform. One message is the system that Us Cellular uses to send communications to its customers. One message is the Enterprise Wide application for all transactional customer communications. The application supports all Email, SMS, EMS, and MMS communications for various organizations in Us Cellular One message stores customer notification Preferences in the preference center where customer can configure various notification types. \nResponsibilities:\nDesigned and developed the REST based Micro Services using the Spring Boot.\nWriting end-to-end flow i.e. controllers classes, service classes, DAOs classes as per the Spring MVC design and writing business logics using core java API and data structures\nDesign, develop & deliver the REST\u00a0APIs that are necessary to support new feature development and enhancements in an agile environment.\u00a0\nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nUsed Spring JMS related MDB to receive the messages from other team with IBMMQ for queuing\nDeveloped presentation layer code, using JSP, HTML, AJAX and JQuery\nDeveloped the Business layer using spring (IOC, AOP), DTO, and JTA\nDeveloped the Persistence layer DAO using HIBERNATE\nWorked with Open symphony\u00a0workflows and delivered work flow module to the client.\u00a0\nDeveloped the project using industry standard design patterns like Singleton, Business Delegate Factory Pattern for better maintenance of code and re-usability\nDeveloping application module coded on Spring Batch and Apache Camel.\u00a0\nWritten Jenkins pipeline template script in Groovy\u00a0programming language for the automation of build and deployment process.\nCreated groovy\u00a0scripts to extract transaction volume information and email to management on daily basis.\u00a0\nInvolved in debugging and tuning the\u00a0PL/SQL\u00a0 code, tuning queries, optimization for the Oracle database using Explain Plan, hints and also worked on Partition tables using Range method.\u00a0\nDeveloped unit test cases using Junit framework for testing accuracy of code and logging with SLF4j + Log4j\nWorked with defect tracking system Clear Quest\nWorked with IDE as Spring STS and deployed into spring tomcat server, WebSphere 6 & used Maven as build tool\nResponsible for code sanity in integration stream used Clear Case as version control tool.\nEnvironment: Java, J2EE, HTML, CSS, AJAX, JQuery, MongoDB,  Apache Camel, symphony, JavaScript, JSP, Spring, Spring Batch, Spring web services ,  XML, UML, JUNIT, IBM WebSphere, Maven, Clear Case, SoapUI, Oracle 11g, Spring JMS, IBM MQ.\nClient: FedEx\t\t\t\t\t\t\t\t\tJan 2012 \u2013 July 2013\nLocation: Memphis, TN\nRole: Java/J2EE Developer\nDescription:\nFedEx Corporation provides customers and businesses worldwide with a broad portfolio of transportation, e-commerce, and business services. The company offers integrated business applications through operating companies competing collectively and managed collaboratively, under the respected FedEx brand.\nResponsibilities:\nInvolved in all phases of the Software development life cycle (SDLC).\nDesigned project related documents which includes Use case, Class and Sequence diagrams.\nInvolved in design, development, testing and implementation of the process systems, working on iterative life cycles business requirements, and creating Detail Design Document.\nUsing\u00a0Agile\u00a0methodologies to plan work for every iteration and used continuous integration tool to make the build passes before deploying the code to other environments.\nExtensive experience in developing PL/SQL\u00a0Stored Procedures, Functions, Packages, Cursors, Collections (Nested tables and Varrays), Records, Object types and Database Triggers.\u00a0\nCreated\u00a0HTML\u00a0Wireframes based in the Detailed System Specification document Developed the presentation layer of the application using\u00a0MVC\u00a0architecture of\u00a0spring framework.\u00a0\nCreated\u00a0DAO\u00a0classes to interact with\u00a0DB2\u00a0database.\nUsed Spring\u00a0ORM\u00a0module to integrate with\u00a0Hibernate.\nUsed Core Java concepts like Swing, socket programming, Collections, Multithreading, Event handling, Exception handling and Generics.\nUsed JMS API for sending and receiving the messages on the queue.\nUsed the\u00a0spring validation\u00a0and\u00a0Tiles Framework\u00a0in the presentation layer.\nDeveloped user interface using\u00a0JSP,\u00a0Spring Tag Libraries\u00a0to simplify the complexities of the application.\nDeveloped user interface with\u00a0Java Server Pages, Ajax\u00a0support to speed up the application form filling.\nUsed\u00a0Apache Axis\u00a0as the Web Service framework for creating and consuming\u00a0Web Service\u00a0clients using\u00a0SOAP and WSDL.\nUsed Rally for tracking purpose.\nDesigned various tables required for the project using\u00a0DB2\u00a0database. Used\u00a0JBOSS\u00a0server for deploying the application.\nUsed Ant for build, create JAR, WAR, EAR files and deploy the EAR files automatically.\u00a0\nUsed Junit to test the application classes.\nUsed\u00a0Log4J\u00a0to capture the logging information.\nEnvironment: Java, J2EE, JavaScript, JSP, AJAX, XML, Agile, Spring, Eclipse IDE, DB2, Rational Rose, Log4j, Junit, Ant, JBOSS, Rally, Apache Axis, Web Service, SOAP, WSDL.\nClient: InfoTech\t\t\t\t\t\t\t\t\t\tSep 2010 \u2013 Dec 2011\nRole: Java Developer\nDescription:\nThe objective of Item Management is to set-up, maintain, and share Item information in a flexible system that easily supports Unilever\u2019s growth, increases speed to market and improves data accuracy, while reducing user workload. Guided Setup is one module of the project which functions as a wizard to complete the configuration and creation of various types of items like Single Items, Multiple Items and Assortment Items.\nResponsibilities:\u00a0\nInvolved in the design and development of an entire Module \u2013 Guided Set Up. Developed user interface through JSP and Servlets.\u00a0\nDeveloped Action classes and Action Forms using the struts framework.\u00a0\nDeveloped Customs tags to display dynamic contents and to avoid large amounts of java code in JSP pages\nConnected to database through JDBC.\u00a0\nExtensive experience working with XML (DOM and SAX).\nUsed SQL-server to store the items in the database.\nUsed Session beans for navigation of steps.\nUsed Entity beans for storing the database in to database. Developed Session Beans as the clients of Entity Beans to maintain the Client state.\nDeveloped Ant Scripts to build and deploy EAR files on to Tomcat Server. Analyzed the EJB performance in terms of scalability by various Loads, Stress tests using Bean- test tool.\nExtensively used Eclipse while writing code as IDE. Written complex SQL queries, stored procedures, functions and triggers in PL/SQL.\u00a0\nDeveloped test cases and used Junit for Unit Testing.\u00a0\nUsed CVS for version controlling.\nEnvironment: Java, J2EE, Servlets, XML (DOM and SAX), JSP, EJB, JavaScript, CSS, JDBC, Struts, Ant, Web Logic Application Server, WSAD, Eclipse IDE, SQL-Server, Apache Tomcat, Oracle, PL/SQL, CVS, PVCS, Junit, Windows.\nClient: SLK Software\t\t\t\t\t\t\t\t\tJun 2009 - Aug 2010\nRole: Java Developer\nDescription:\nSLK Software Services is an offshore development company providing end-to-end solutions using its proven methodologies based on SEI CMM Level 4 Guidelines. SLK Billing Care is the Web-based front office application used by customer service representatives to create and maintain customer accounts, manage their services, and handle customer issues. SLK Billing care is designed as the front-end application to customer related activities supported by SLK charging and other billing products.\nResponsibilities:\nDeveloped web application using Struts 2.X, JSP, Servlets, Java beans that uses MVC design pattern\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP\nWrote JavaScript for client side validation.\nUsed Eclipse as IDE tool for creating Servlets, JSP, and XML.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nMonitored the logs using Log4J and fixed the problem\nThe application was deployed on the Tomcat.\nInvolved in build and deploying the application using ANT  \nUsed CVS as version control system \nWorked on bug fixing and Production Support\nEnvironment: Java, JDBC, Struts, JavaScript, HTML, CSS, JSP, Servlets, Tomcat, Oracle, Eclipse IDE, CVS, ANT, Log4J.",
  "size_bytes": 53439,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:33.864300",
  "clean_text": "candidate professional summary year experience requirement analysis design development testing implementation support object orient methodologies java technology actively involve phase software development life cycle sdlc expertise client scripting language server scripting language like html css javascript groovy jquery ajax angularjs jsp nodejs extjs backbonejs reactjs json bootstrap extensive experience work spring framework strut framework o r mapping hibernate framework mybatis web service experience spring mvc spring boot spring cloud spring dao spring data spring ioc spring annotations spring aop spring transactions spring security experience develop application micro services architecture expert core java strong understanding swing socket programming collection multithreading event handling exception handling generics expertise develop reliable scalable enterprise application servlets jsp struct jstl jdbc ajax jsf ejb web services strong work experience application integration communicating soa web services simple object access representational state transfer restful jax rpc jax rs jax ws wsdl uddi apache cxf jaxb xsd axis excellent knowledge experience write sql query stored procedures triggers view database ms sql server mysql ibm oracle database nosql database system like mongo db cassandra expertise xml technology xsl xslt xml schemas xpath xforms xsl fo parser like sax dom experience jms kafka message exchange information reliable asynchronous way enterprise application apache active mq apache camel jms provider experience creating configure continuous delivery pipeline deploy micro service lambda function jenkins ci server hand experience deploy application google app engine utilize java feature like lambda expression stream api bulk datum operation collection increase performance application managed amazon web services like bucket elb auto scaling sns sqs ami iam dynamo db elastic search virtual private cloud vpc aws console api integration hand experience amazon web service aws amazon cloud technology amazon virtual server amazon cloud watch monitoring skilled program scripting language like java deploy application update aws monitor load balancing different instance deploy applications docker container easily accessible runtime pivotal cloud foundry cloud service like aws netflix eureka experience develop logging standard mechanism base experience work agile practice like atdd tdd junit mock library like mockito jmock java application karma js jasmine mocha js cucumber js selenium web driver ui application work implement life cycle software development process sdlc version control tool like git rational clear case tortoise svn cvs concurrent version system hand experience work continuous integration ci build automation tool jenkins build plugins like maven gradle apache ant experience formation mentoring project team work agile methodology deliver business critical software application tool like jira significant experience web development tool like netbeans adobe dreamweaver spring tool suite eclipse intellij rad hand experience windows unix linux environments have experience shell scripting deployment applications server experience designing develop deploy application ibm web sphere web logic apache tomcat glassfish redhat jboss server technical skill professional experience client mastercard feb till date location st louis mo role stack java developer description mastercard worldwide american multinational financial service corporation principal business process payment bank merchant card issue bank credit union purchaser use mastercard brand debit credit card purchase responsibility involve complete sdlc software development life cycle application requirement analysis testing extensively work responsive web design rwd page development jquery javascript twitter bootstrap ajax angular js json jsf ui components jsp define new validation angularjs form field validation implement nodej run angularjs server mock json datum complete ui development independent server implement new feature groovy programming language jenkins continuous delivery core java concept like swing socket programming collection multithreading event handling exception handling generics utilize java feature like lambda expression stream api bulk datum operation collection increase performance application develop application design patterns like business delegate factory singleton session facade service locator dao feature develop code like lambda expression create resource class fetch document database integrated scala web service relational db slick jax web service interact application soap wsdl file develop restful api assessment indicator module token base authentication restful service spring security involve building database model api view utilize python build interactive web base solution jersey implement restful web service xml form transfer datum expose soap webservice api apigee edge implement api proxies deploy monitored micro services pivotal cloud foundry managed domains routes cloud foundry follow agile methodology analyze define document application support functional business requirement coordinate effort functional architects work involve deployment core platform technology technique web app framework spring jboss tomcat json xml web services spring mvc module develop mvc architecture develop controller handle request response core java develop business logic spring beans configure spring container implement ioc di spring beans manage bean life circle work apache camel rabbitmq send message queue deploy application docker container easily accessible runtime cloud foundry cloud service like aws netflix eureka spring security authentication authorization application implement spring aop declarative transaction management create stored procedures function packages oracle g sql pl sql audit trail oracle g backend wrote microservices export import datum task scheduling spring boot spring hibernate micro service swagger api microservices develop api aws lambda manage server run code aws design configured deploy amazon web services aws multitude application utilize amazon cloud formation experience set amazon instance virtual private cloud vpcs security group set database aw rds storage bucket configure instance backup bucket develop pojo object hibernate object relational mapping orm tool access persistent datum sql server manage code versione github deployment staging production server rest controller replace exist operation layer act bridge business layer ui work solr elastic search kafka flume mangodb cassendra jenkins build management tool continuous integration process google app engine cloud service launch linux window machine develop unit test case junit unit testing selenium testing application configure deploy project maven provide technical support production environment resolve issue analyze defect provide implement solution defect environment java lambda html css javascript jquery apache camel ajax angularjs bootstrap json jsp jndi oracle apache camel rabbitmq spring aop hibernate springcloud google cloud platform spring mvc spring jdbc jdbc web services soa service orient architecture aws redis rest jax rs jersey junit jax b websphere jira maven git rad jenkins mongodb postgresql cassendra agile methodology client bcbs dec jan location chicago il role java stack developer description blue cross blue shield lead insurance company own policyholder bcbs health insurance health care provider company find plan web base application create help individual family easily shop buy health insurance mark offer variety insurance plan tool help choose plan right responsibility involve sdlc requirement gathering analysis design development testing application develop agile methodology create user friendly gui interface javascript jquery angularjs expressjs ajax xml json involve design client module architecture base new angular framework core java concept like swing socket programming collection multithreading event handling exception handling generics implement persistence framework hibernate handled transaction management provide datum source responsible design hibernate mapping file base business logic object relationship develop restful web service api spring framework spring core spring mvc spring aop java persistence api backend postgresql cassendra database involve develop web services send xml request read response soap ui java platform instal configure component hadoop ecosystem maintain integrity involve extract customer big datum data source hadoop hdfs include datum mainframe database log datum server consumed web services interact external interface exchange datum form xml soap apigee api gateway api transformation multiple authentication mechanism migrating application functionality send email mysql nosql database implement google cloud platform handle big data extensively google cloud resource like compute engine iam google container registry container builder cloud storage bucket migrating server database application aws premise google cloud platform create restful web service jersey api jax rs datum exchange carry application service json apache camel implement java message service jms api send receive email notification employee notification portal create support jms mq connection factory topic queue channel listener implement microservice spring boot spring base microservice enable discovery netflix eureka server java php bridge code integrate java php maven deployment descriptor set build environment write maven take build configuration deployment application jboss application server spring mvc ajax dependency injection handle presentation business logic maintain loose coupling layer publish business layer service inject necessary dependent component spring ioc publish cross cut concern like logging user interface exception transactions spring aop integrated spring dao datum access hibernate apache camel framework connectivity different api transport create data model generate hibernate mapping domain object hibernate tool integrated spring hibernate work develop backend component service hibernate spring extensively hql sql query database develop message driven bean asynchronous send message jms rest methodology service layer interface json data transformation develop ajax json call communication server ui develop web service produce consume service make web service call remote service different application spring jms module lookup queue mdb listener established database connectivity hibernate o r mapping spring orm mysql server develop mapping resource files database entity package deploy application ibm web sphere intellij ide develop application follow standard feature debug run write linux shell script identify user login information playback technical presentation client acquire knowledge generating report pdf itext open source excel file format application logging notification trace mechanism analysis bug fixing production problem defect enhancement rational clear case version control maven build tool j unit testing ant scripts jira track project stories agile methodology environment java jdk ejbs jsp servlet jdbc mongo db xml html css java script jquery ajax angularj nodejs json jms struts spring apache camel mvc design pattern spring mvc hibernate agile ant maven netflix rational clear case web sphere server ibm web sphere apache camel soap ui jndi postgresql mysql server google cloud platform jira rmi intellij ide linux client cellular nov nov location knoxville tn role java developer description cellular lead company provide wireless service mobile platform message system cellular use send communication customer message enterprise wide application transactional customer communication application support email sms ems mms communication organization cellular message store customer notification preferences preference center customer configure notification type responsibility design develop rest base micro services spring boot write end end flow controller class service class daos class spring mvc design write business logic core java api datum structure design develop deliver rest api necessary support new feature development enhancement agile environment core java concept like swing socket programming collection multithreading event handling exception handling generics spring jms relate mdb receive message team ibmmq queue developed presentation layer code jsp html ajax jquery develop business layer spring ioc aop dto jta develop persistence layer dao hibernate work open symphony workflow deliver work flow module client develop project industry standard design pattern like singleton business delegate factory pattern well maintenance code usability develop application module code spring batch apache camel write jenkins pipeline template script groovy programming language automation build deployment process create groovy script extract transaction volume information email management daily basis involve debug tune pl sql code tuning query optimization oracle database explain plan hint work partition table range method develop unit test case junit framework test accuracy code log work defect tracking system clear quest worked ide spring sts deploy spring tomcat server websphere maven build tool responsible code sanity integration stream clear case version control tool environment java html css ajax jquery mongodb apache camel symphony javascript jsp spring spring batch spring web service xml uml junit ibm websphere maven clear case soapui oracle g spring jms ibm mq client fedex jan july location memphis tn role java developer description fedex corporation provide customer business worldwide broad portfolio transportation e commerce business service company offer integrate business application operate company compete collectively manage collaboratively respected fedex brand responsibility involve phase software development life cycle sdlc design project relate document include use case class sequence diagram involve design development testing implementation process system work iterative life cycle business requirement create detail design document agile methodology plan work iteration continuous integration tool build pass deploy code environment extensive experience develop pl sql stored procedures functions packages cursors collection nest table varray records object type database triggers create html wireframes base detailed system specification document develop presentation layer application mvc architecture spring framework create dao class interact database spring orm module integrate hibernate core java concept like swing socket programming collection multithreading event handling exception handling generics jms api send receive message queue spring validation tiles framework presentation layer develop user interface jsp spring tag libraries simplify complexity application develop user interface java server pages ajax support speed application form filling apache axis web service framework create consume web service client soap wsdl rally track purpose design table require project database jboss server deploy application ant build create jar war ear file deploy ear file automatically junit test application class capture log information environment java javascript jsp ajax xml agile spring eclipse ide rational rose junit ant jboss rally apache axis web service soap wsdl client infotech sep dec role java developer description objective item management set maintain share item information flexible system easily support unilever growth increase speed market improve data accuracy reduce user workload guided setup module project function wizard complete configuration creation type item like single items multiple items assortment items responsibility involve design development entire module guided set develop user interface jsp servlets develop action class action forms strut framework develop customs tag display dynamic content avoid large amount java code jsp page connect database jdbc extensive experience work xml dom sax sql server store item database session bean navigation step entity bean store database database develop session beans client entity beans maintain client state develop ant scripts build deploy ear file tomcat server analyze ejb performance term scalability loads stress test test tool extensively eclipse write code ide write complex sql query store procedure function trigger pl sql develop test case junit unit testing cvs version control environment java servlets xml dom sax jsp ejb javascript css jdbc struts ant web logic application server wsad eclipse ide sql server apache tomcat oracle pl sql cvs pvcs junit windows client slk software jun aug role java developer description slk software services offshore development company provide end end solution prove methodology base sei cmm level guidelines slk billing care web base office application customer service representative create maintain customer account manage service handle customer issue slk billing care design end application customer relate activity support slk charging billing product responsibility develop web application struts jsp servlets java bean use mvc design pattern create user friendly gui interface web page html css jsp wrote javascript client validation eclipse ide tool create servlets jsp xml write sql jdbc prepare statement retrieve datum database monitor log fix problem application deploy tomcat involve build deploy application ant cvs version control system work bug fixing production support environment java jdbc struts javascript html css jsp servlets tomcat oracle eclipse ide cvs ant"
}