{
  "filename": "Candidate198.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate198.docx",
  "text": "Candidate198\nEmail: candidate198@gmail.com\nContact: (913)890-3489   \nSummary:\nOver 8+ years of IT experience in Analysis, Design, Development, implementation and execution of test cases of software application using Java/J2EE technologies.\nExperienced in Java Application Development, Object Oriented Concepts, Object Oriented Design (OOD), Object Oriented Analysis (OOA), Object Oriented Programming (OOP) and its implementation.\nExperienced with developing rich user interface applications using HTML5, CSS3 and JavaScript, JQuery, Angular 4.0,2.0,JS, Node JS, React JS, Backbone JS, Twitter Bootstrap, JQuery Mobile, XML, JSON that follows W3C Web Standards and are browser compatible\nExperience working with various SDLC methodologies like Agile Scrum, RUP and Waterfall Model. \nExperienced in developing front end applications using HTML, HTML5, XML, XHTML, DHTML, CSS, CSS3, Bootstrap, SAAS, LESS, JavaScript, DOM, jQuery, Ajax, JSON, and JSP.\nExpertise in implementing the persistence logic using JDBC, JPA, Spring JDBC, Hibernate, iBATIS.\nGood Understanding of Document Object Model (DOM) and DOM Functions. \nDesign and implement a Web based content management utilizing XML, JAXB, DOM, XSLT, XPath and JavaScript for data generation and presentation with JSF.\nStrong Experience in JavaScript MVC design pattern such as Angular JS, Backbone JS and Ember JS.\nExperience in server side scripting with Node JS, Express JS.\nGood Knowledge in JavaScript library used for building reusable UI components like React JS.\nWorked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop, Tablets and mobile users using React.js.\nStrong experience in working on JavaScript environment like MEAN (Mongo, Express, Angular, Node)\nStrong knowledge on OOPs concepts, Core Java, Multithreading, Exception handling, and Collection Framework.\nStrong programming skills towards developing and implementing complete n-tier web based application systems using Java/J2EE technologies- JDBC, JSP, Servlets, Enterprise Java Beans, Struts, JSF, Spring, SOA implementation, JAX-RS, JAX-WS, JNDI, XML, JAXB, JSON, WSDL.\nHave considerable knowledge in developing UNIX shell scripts and pearl scripts.\nStrong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework.\nGood knowledge on the Spring Modules like Spring IOC, Spring MVC, Spring DAO, Spring Batch, Spring Web Flow,  Spring Security and Spring Boot.\nHaving Handful experience in using OAuth 2 for Microservices security.\nHaving knowledge on (JMS) MQ's like Apache Kafka, Rabbit MQ, IBM MQ and Active MQ.\nExperience with Web/Application servers (Tomcat, Web Logic and JBOSS)\nGood knowledge in using Restful framework like JAX-RS Framework, SOAP Web services using JAX-WS, Apache CXF, Jersey.\nGood knowledge in using Amazon Web Services (Amazon EC2, Amazon Simple DB, Amazon RDS, Amazon Elastic Load Balancing, Amazon SQS, and AWS Identity), Pivotal Cloud and IBM Web Sphere.\nDefined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances.\nKnowledge on various Docker components like Docker Engine, Hub, Machine, Compose and Dockers Registry.\nExtensively worked on beginner patches for Docker Engine.\nExperience in using Drools rules engine for defining business rules and Validations.\nExperience in using different version controlling/tracking systems GIT, CVS, Subversion, and Rational Clear Case.\nExperienced in working with multiple databases like Oracle 10/11g, SQL Server, NoSQL (Mongo DB, Cassandra), PostgreSQL, MySQL and DB2. \nExperience using JIRA and Bugzilla5.0.x /4.4.x as issue and bug tracking tools.\u00a0\nExperienced with J-Unit Framework4.x, Jasmine and Mockito for developing test cases using Test driven development (TDD) approach and log4j for logging.\u00a0\nExpertise in using NoSQL databases like Mongo DB, Apache Cassandra 2.0.12 as a distributed database management system and writing queries to it using CQL 3.0.\nExperienced in performing unit testing using JUnit, Mockito integration and deployment of applications using tools such as ANT, Jenkins and Maven & debugging through log4j. \nExperience in Backing up databases using Mongo DB backup facility in OPS manager\nExperience in using Ant1.x and Maven3.x for build automation.\u00a0\nIn-depth knowledge of PL/SQL with the experience in constructing the triggers, tables, functions, user defined data type, procedures etc\nGood knowledge in JavaScript Task Runner like Gulp, Grunt for magnification, compilation, unit testing.\nStrong knowledge on JavaScript Unit testing with Jasmine, Karma, Protractor, Mocha and Chai\nExcellent verbal, written communication and presentation skills, problem solving and conflict resolution skills.\nTechnical Skills:\nWORK EXPERIENCE:\nSr Java Fullstack Developer           \t\t\t\t\t\t\t\t  \t June 2016 to Present\nPG & E Corporation-Dinuba, CA\t\nRoles & Responsibilities:\nInvolved in the complete SDLC (software development life cycle) of the application from requirement analysis to testing. \nInvolved in Analysis, design and coding on Java and J2EE Environment.\nImplemented Spring Framework for the project.\nBuild and Release Management Built application logic using\u00a0Python\u00a02.7\nResponsible for Creating custom, general use modules and components which extend the elements and modules of core Angular 4, Polymer JS.\nCreated and maintain web pages using HTML5, CSS3, JavaScript, JQUERY, Java, J2EE and also responsible for Designing of Web pages including Ajax controls and XML.\nCreated and managed microservices. Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features\nApplied advanced HTML5, JavaScript, and CSS3 to deliver cutting-edge user interfaces using material design components in Polymer JS.\nAll the functionality is implemented using Spring IO / Spring Boot, Microservices and Hibernate ORM.\nCreated and injected Spring Services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes.\nFollowed agile methodology for developing the application.\nCreated continuous integration builds using Jenkins and deployed on app server.\nExtensively used spring framework and Apache CXF for producing SOAP and REST web services as a part of the project development\nSpring MVC Framework IOC (Inversion of Control) design pattern is used to have relationships between application components.\nApplication is Open Source on GitHub and developed using Eclipse, GWT and GAE for cloud based backend data.\nProgrammed the Event handling for DOJO Widgets to accept user inputs and validate it.\nResponsible for validating user actions on the client side and provided responsive feedback using Polymer JS, Angular 4, and predix components.\nImplementing Webservices using JSON.\nDeveloped various generic JavaScript functions used for validations.\nDesigned and developed UI capabilities and J2EE server based services.\nUsing GIT for Source Control and Version Management.\nFocused on Test Driven Development (TDD) thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality.\nUsed JavaScript testing frameworks, Jasmine, Karma.\nCommunicated updates in daily scrum meetings using Rally software.\nUsed AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly.\nExtensively used Ajax calls to send parameters and fetch data based on the user-triggered events.\nManipulated data to both send and fetch data from the server through GET, DELETE and POST requests.\nRegularly worked with the MEAN stacks and used GIT daily on a Mac OS.\nUsed SOCOCO for the daily standups, power programming, and team communication.\nHandled response data from Restful WebServices using XML, JSON and JQuery to update UI Interacted with java controllers (JQuery, Ajax, and JSON to write/read data from back end systems).\nInvolved in writing test plans, Test Cases and Test Scripts using selenium\nDesigned and developed Test Scenario/Test Cases/Test steps for various Business Services/methods covering both positive and negative testing. \nUsed SOAPUI for testing Web Services, inspection of WSDL files, generation of SOA envelopes, and acceleration of many other common XML tasks encountered during development of Web-Service enabled applications. \nConfigured Selenium WebDriver, TestNG, and Maven created Selenium automation scripts in java using JUnit. \nEnvironment: Java jdk, JEE, Java 8, JSP, Python, WebLogic Application Server 11g/10.3, IBM RAD, HTML5, CSS3, Angular 4, polymer JS,  AJAX, JSON, Node JS, React JS, Microservices, Multithreading, Servlets, JMS, JVM, XML, Restful WebServices, JQuery UI, Maven, Selenium, Apache CXF, Spring MVC, JavaScript, GIT, SOAP, Mongo DB, J2EE, AWS, JSP, Oracle 11g, Eclipse 3.5, JUnit 4.4, Agile methodology, AWS, Git, JSP, Apache Tomcat, Jasmine, Karma.\nJAVA FULL STACK DEVELOPER \t\t\t\t\t\t\t\t          August 2014 to May 2016\nCerner corporation-Kansas city, MO   \t\t                       \t\t                  \nRoles & Responsibilities:\nInvolved in Requirements and Analysis Understanding the requirements of the client and the flow of the application as well as the application Framework.\nDeveloped Front End pages of the application using HTML5, CSS3 (using LESS), Angular 2.0.\nUsed Less.js pre-processor to create importable and reusable style sheets, processed on server-side.\nCreated controllers and view pages along with Bootstrap and HTML5 for dynamic web application.\nDesigned and developed the original prototype for a highly-complex, interactive, graphical, web user-interface using standards-compliant JavaScript (ECMA SCRIPT 6)\nUsed\u00a0AWS\u00a0SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application\nDocument Object Model (DOM) manipulation performed using JavaScript and Angular Js.\nInvolved in developing the Angular JS MVC framework for the Single Page Application development.\nWeb application development for backend system using Angular 2.0 with cutting edge HTML5 and CSS3 techniques.\nUsed features in Angular 2.0 such as data binding, ng-route for routing, custom filters, and custom directives to meet business requirements.\nUsed Bootstrap components of Angular-UI like carousel, collapse, dropdown, and tabs to develop dynamic responsive Web Application.\nUsed spring boot properties like actuators and health checkers to enhance micro service implementations.\nDeployed Spring Boot based microservices Dockers container using Amazon EC2 container services and using AWS admin console.\nDeveloped Restful service interface using Spring Boot to the underlying Agent Services API and Implemented Restful web services.\nUsed JSON response modulation in rest services using JAX-RS to make it more generic for our team to consume the services.\nDesigning and developed Microservices using (MEAN Stack) Node.js, Mongo DB, Angular JS Elastic search on Private Cloud Open Stack Platform using Express.js.\nBuild prototype for various required services such as Scheduling, Logging and Notification Service using third party Node JS based JavaScript library.\nUsed Express JS which is fast, assertive, essential and moderate web framework of Node JS that helps manage a server and routes.\nUsed Ajax Express for automatically AJAX requests handling middleware for Express framework.\nConfiguration file and Node JS is used at back end to interact with Mongo DB using Mongoose connector.\nUsed Socket.IO for the Node server to auto-reconnection and disconnection support.\nImplemented MySQL Database as the storage system for the Restful Webservices.\nUsed Hibernate mappings, relationships between tables and entity classes to access and update information in the database.\nHibernate Query Language (HQL) was used to perform various queries in the database.\nUsed Hibernate Core Interfaces configuration, transactional, session and criteria.\nDeveloped data models using Hibernate POJO's and configuring Hibernate persistence layer.\nWorked with NoSQL database Mongo DB and developed custom Mongo DB applications specific to client needs.\nUsed AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly.\nUsed Jenkins for continuous deployment and integration of the build and release process\nDealt with Gulp to perform magnification, compilation and Bower to maintain package dependencies.\nPerforms UNIT testing with JASMINE and KARMA, and develops web services using RESTful API.\nWorked on creation of custom Docker container images, tagging and pushing the images.\nInvolved in running Selenium automation scripts and updating the scripts according to enhanced requirements using Selenium WebDriver.\nDone unit testing using JUnit.\nDesigned and implemented scalable, secure cloud architecture based on Amazon Web Services (AWS)\nConfigured AWS EC2 instances, S3 Buckets and Cloud Formation Services based on the business requirements for different applications.\nInvolved in behavior driven development using SCRUM framework under Agile Methodology.\nUsed MAVEN tool for building the project and managing the dependencies in it.\nDeveloped and maintained automated regression test cases in Selenium using Java programming language.  \nImplemented test automation for web applications from front to backend using Selenium. \nResponsible for creating requests and building test scenarios for the web services project. \nTested WebServices /XML /SOAP and RestFul services using SoapUI 2.5.\nEnvironment: Java 1.7/J2EE, Spring MVC, HTML5, XML, CSS3, LESS, JSON, JavaScript, Angular 2.0, Oracle 11g, Tomcat 5x/6x, Bootstrap, Maven, Hibernate, MySQL, Multithreading, Eclipse, AWS SDK, RESTful, Backbone JS, DB2, Cassandra, AJAX, JSON, Node JS, Express JS, AWS, Microservices, Restful API, JAX-RS, React JS, Node Js, Gulp, NPM, AWS, Apache Kafka, GitHub, NoSQL, Mongo DB, Jasmine, karma, Selenium, Soap UI 2.5.\nSr. Java/J2EE Developer                                                                                                                 \t                         October 2012 to July 2014                                      \nFedEx Corporation-Memphis, TN\t\t      \nRoles & Responsibilities:\nImplemented SOA architecture using Enterprise Service Bus (ESB).\nConfigured business applications in XML bean definition files using SPRING.\nWorked on Hibernate ORM. Created Hibernate XML files and Java class files to map the object relation Mappings. Used Hibernate query language.\nProvided data persistence by object/relational mapping solution via Hibernate for application save, update, delete operations.\nImplement single sign on and LDAP for login authentication.\nDeveloped the application using Spring MVC framework and IOC for dependency injection\nUsed Hibernate ORM framework with spring framework for data persistence and transaction management.\nWorked on presentation layers using Angular JS, AJAX, Backbone JS, HTML, JSP, java script and XML.\nCreated UI mock up screens and developed screens with JSP, CSS and custom tag libraries\nCreated custom components using JQuery and JavaScript which can be used by all the maintenance applications in MSS\nUsed REST Controllers to replace the existing operations layer which acts as bridge between business layer and the UI.\nDeveloped Web API using NodeJS and hosted on multiple load balanced API instances.\nDeveloped a framework to consume REST Webservices using Spring Rest libraries\nUsed JUnit framework to write test cases for unit testing, Used Power mock & Mockito libraries to create mock objects to verify the service logic\nDeveloped Copy Tool - a standalone application using javaFx to copy data from one environment to another environment.\nUsed Spring core annotations for Dependency injection and Spring MVC for REST API s and Spring Boot for micro services.\nUsed Apache Camel and CXF in the JBoss Fuse ESB as the integration platform for SOA Services.\nUsed Angular JS for data-binding, and Node JS for back-end support with APIs.\nWorked on JPA for persisting the objects into the system.\nInvolved in finding the Memory Leaks and adjusting the JVM Heap Sizes and GC Parameters using JProfiler 5.1.\nWorked on Axis implementation and used SOAPUI to test the SOAP.\nWorked on XML, XSD and XSLT to parse the request and create the new one based on the specification.\nDeveloped generic Java packages to produce and consume JMS messages through topics and queues in asynchronous message processing with guaranteed delivery.\nUsed IBM MQ Series as the JMS provider.\nUtilized Core J2EE design patterns such as Singleton and Data Access Object (DAO) in the implementation of the services.\nResponsible for writing SQL Queries and Procedures using DB2.\nInvolved in writing test plans, Test Cases and Test Scripts using quality center. \nResponsible for writing JUnit test cases and Peer level testing.\nImproved database performance by recognizing and rewriting slow queries.\nBuild & Deployment in Websphere Application Server.\nSolid deployment experience on the UNIX platform.\nCreated UML diagrams such as Class Diagrams and Sequence Diagrams using IBM Rational Rose.\nEnvironment: Java1.7, J2EE, JavaFx, JSP, Servlets, Spring 1.2, WebSphere Application Server 7.0, Oracle 9x, SOA, JMS, JMX, IBM MQ Series 5.3, SOAPUI, Hibernate, XML, XSD,  Spring, JUnit, Backbone JS, MS SQL Server 2008, JPA, JTA, JDBC 2.0, Maven, PL/SQL Developer,DB2, UNIX, Log4J, UML and Agile, Web Logic 9.0, Angular JS. \nJAVA/J2EE DEVELOPER \t\t\t\t\t\t\t\t          October 2010 to September 2012\nBank of New York Mellon Jersey City, NJ\t\t                                                  \nResponsibilities: \nDesigned and developed UML Diagrams, Use cases, Class, Sequence and activity Diagrams. \nWorked in Agile methodology environment and participated in Scrum sessions in designing, developing, implementing and testing the distributed applications. \nDeveloped detailed design documents for all the functional modules of the application to be used by the testing team to setup test cases. \nMigration of Web Sphere application server to Tomcat application and used Eclipse IDE and deployed the application on TOMCAT server. \nDeveloped dynamic and interactive we based applications using HTML, CSS and JavaScript languages. \nImplemented Persistence layer using Hibernate to interact with the MySQL database and performed CRUD operations. \nUsed web logic as the app server for deploying the applications and Used JDBC as the data access layer connecting to Oracle DB. \nDesigned and Developed Web Services using technologies UDDI, WSDL, SOAP to communicate to the other modules. \nUsed Maven automated build scripts to compile and package the application and implemented Log4j for the project. \nConfigured the XML file for spring security injection to ensure the back-end security by discriminating the role of users as well as access authority for the URIs and server-side assets. \nImplemented Spring MVC, which includes writing Controller classes for handling requests, processing form submissions and performed validations using Commons validator. \nInvolved in developing interface for web pages like user registration, login, and registered access control for users depending on logins using HTML and JavaScript. \nIntegrated Spring DAO for data access using Hibernate, used HQL and SQL for querying databases. \nInvolved in Group presentations, Poster presentations and involved in bugs fixing and used Log4j for writing int application and error logs. \nUsed JDBC API to connect to the database and performed create, Read, Update and Delete operations to insert, retrieve drop and delete the data as per the requirement. \nInvolved in project migration from Swing application to web integration using Struts web framework based on MVC architecture. \nDebugging for Stored Procedures in the application and using SQL queries to access Oracle, DB2 and SQL Server 2008 R2. \nWritten test cases using JUnit as a testing framework and responsible for preparing test scripts for system. \nDeveloped the code for asynchronous update to web page using JavaScript and Ajax. \nCreated and consumed SOAP based Web services and used SOAPUI to send and receive XML data and Worked with JMS Queues for sending messages in point-to-point mode. \nEnvironment: Java 1.6, C, C++, servlets, JSP, JMS, Struts, HTML5, CSS, JavaScript, Oracle 10g, JUnit 3.x, SOAP, XML, weblogic Server 9x/10x, SQL, Tomcat 6x, Hibernate, Angular JS, Node JS, Spring, GIT, DB2, SOAP, JUnit, PL/SQL, MS SQL Server2008, Structs, Spring, DA0, XML, Log4j, Websphere Application  Server 7.0, SQL.\nJAVA/J2EE DEVELOPER \t\t\t\t\t\t\t\t\tMarch 2009 to August 2010\nProd apt Solutions \t\t                                                       \nResponsibilities:\nInvolved in creating Use cases, Class Diagrams and Interaction Diagrams.\nDesigned the UML diagrams based on the OOAD principles.\nDeveloped EJB's and deployed them on IBM WebSphere Application server.\nDeveloped the Action classes, Action forms and Action Servlet for web tier.\nDeveloped the Business logic on the web tier using EJB Stateless Session beans.\nDeveloped business layer components using enterprise java beans (EJB)\nDeveloped the modules using Servlets, Java2EE and JDBC for connecting with DB2 Database\nImplemented Multithreading feature for processing the multiple requests to achieve high performance.\nImplemented Web Services to integrate between different applications using REST services using JAX-WS.\nImplemented Singleton Design Pattern for database connectivity.\nImplemented c3po connection properties for maintaining database connections.\nHands-on writing Stored Procedures, functions, triggers, DDL, DML SQL queries.\nCreated custom PL/SQL procedures to read data from flat files to dump to DB2 database using SQL loader.\nCreated tables, views, Types, triggers, complex join queries, stored procedures, and functions and modifications to existing database structure as required for addition of new features.\nInvolved in Designing the Database Schema and writing the complex SQL queries.\nAccessed stored procedures and functions using JDBC Callable statements.\nWorked on IBM MQ to simplify integration and accelerate application deployment.\nWorked on web-based reporting system with HTML, JavaScript and JSP.\nDeployed the project in Linux environment.\nUsed ANT build tool for compilation and generation of war file.\nEnvironment: Java, J2EE, HTML, PL/SQL, Webservices, Multithreading, Hibernate, spring, JSPs, Eclipse, IBM WebSphere 6.1, AXIS,\u00a0Java\u00a0Script, Subversion, IBM DB2, Clarity, Maven, Rational Rose, Windows XP.",
  "size_bytes": 50045,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:38.951112",
  "clean_text": "email contact summary year experience analysis design development implementation execution test case software application java technology experience java application development object oriented concepts object oriented design ood object oriented analysis ooa object oriented programming oop implementation experience develop rich user interface application javascript jquery angular node js react js backbone js twitter bootstrap jquery mobile xml json follow web standards browser compatible experience work sdlc methodology like agile scrum rup waterfall model experience develop end application html xml xhtml dhtml css bootstrap saas javascript dom jquery ajax json jsp expertise implement persistence logic jdbc jpa spring jdbc hibernate ibatis good understanding document object model dom dom functions design implement web base content management utilize xml jaxb dom xslt xpath javascript datum generation presentation jsf strong experience javascript mvc design pattern angular js backbone js ember js experience server scripting node js express js good knowledge javascript library build reusable ui component like react js work responsive design develop single isomorphic responsive website serve desktop tablets mobile user strong experience work javascript environment like mean mongo express angular node strong knowledge oop concept core java multithreading exception handling collection framework strong programming skill develop implement complete n tier web base application system java jdbc jsp servlets enterprise java beans strut jsf spring soa implementation jax rs jax ws jndi xml jaxb json wsdl considerable knowledge develop unix shell script pearl script strong knowledge implement ioc dependency injection feature aspect spring framework good knowledge spring modules like spring ioc spring mvc spring dao spring batch spring web flow spring security spring boot have handful experience oauth microservice security have knowledge jms mq like apache kafka rabbit mq ibm mq active mq experience web application server tomcat web logic jboss good knowledge restful framework like jax rs framework soap web service jax ws apache cxf jersey good knowledge amazon web services amazon amazon simple db amazon rds amazon elastic load balancing amazon sqs aws identity pivotal cloud ibm web sphere define aws security groups act virtual firewall control traffic allow reach aws instance knowledge docker component like docker engine hub machine compose dockers registry extensively work beginner patch docker engine experience drools rule engine define business rule validation experience different version control tracking system git cvs subversion rational clear case experience work multiple database like oracle g sql server nosql mongo db cassandra postgresql mysql experience jira issue bug tracking tool experience j unit jasmine mockito develop test case test drive development tdd approach log expertise nosql database like mongo db apache cassandra distribute database management system write query cql experience perform unit testing junit mockito integration deployment application tool ant jenkins maven debug experience backing database mongo db backup facility ops manager experience build automation depth knowledge pl sql experience construct trigger table function user define datum type procedure etc good knowledge javascript task runner like gulp grunt magnification compilation unit testing strong knowledge javascript unit testing jasmine karma protractor mocha chai excellent verbal write communication presentation skill problem solve conflict resolution skill technical skills work experience sr java fullstack developer june present pg e corporation dinuba roles responsibility involve complete sdlc software development life cycle application requirement analysis testing involve analysis design code java environment implement spring framework project build release management build application logic python responsible create custom general use module component extend element module core angular polymer js create maintain web page javascript jquery java responsible designing web page include ajax control xml create manage microservice microservice strategy gradually replace core monolithic application add business feature apply advanced javascript deliver cutting edge user interface material design component polymer js functionality implement spring io spring boot microservices hibernate orm create inject spring services spring controller dao achieve dependency injection wire object business class follow agile methodology develop application create continuous integration build jenkins deploy app server extensively spring framework apache cxf produce soap rest web service project development spring mvc framework ioc inversion control design pattern relationship application component application open source github develop eclipse gwt gae cloud base backend datum program event handle dojo widget accept user input validate responsible validate user action client provide responsive feedback polymer js angular predix component implement webservices json develop generic javascript function validation design develop ui capability server base service git source control version management focus test driven development tdd create detailed junit test single piece functionality actually write functionality javascript testing framework jasmine karma communicate update daily scrum meeting rally software ajax json asynchronous call project server fetch datum fly extensively ajax call send parameter fetch datum base user trigger event manipulated datum send fetch datum server delete post request regularly work mean stack git daily mac os sococo daily standup power programming team communication handle response datum restful webservices xml json jquery update ui interacted java controller jquery ajax json write read datum end system involve write test plan test case test scripts selenium design develop test scenario test cases test step business services method cover positive negative testing soapui test web services inspection wsdl file generation soa envelope acceleration common xml task encounter development web service enable application configure selenium webdriver testng maven create selenium automation script java junit environment java jdk jee java jsp python weblogic application server ibm rad angular polymer js ajax json node js react js microservices multithreading servlets jms jvm xml restful webservices jquery ui maven selenium apache cxf spring mvc javascript git soap mongo db aws jsp oracle g eclipse junit agile methodology aws git jsp apache tomcat jasmine karma java stack developer august cerner corporation kansas city mo roles responsibility involve requirements analysis understand requirement client flow application application framework develop end page application angular pre processor create importable reusable style sheet process server create controller view page bootstrap dynamic web application design develop original prototype highly complex interactive graphical web user interface standard compliant javascript ecma script aws sdk connection amazon bucket object storage service store retrieve medium file relate application document object model dom manipulation perform javascript angular js involve develop angular js mvc framework single page application development web application development backend system angular cut edge technique feature angular datum bind ng route routing custom filter custom directive meet business requirement bootstrap component angular ui like carousel collapse dropdown tab develop dynamic responsive web application spring boot property like actuator health checker enhance micro service implementation deploy spring boot base microservice dockers container amazon container service aws admin console develop restful service interface spring boot underlie agent services api implement restful web service json response modulation rest service jax rs generic team consume service designing develop microservice mean stack mongo db angular js elastic search private cloud open stack platform build prototype require service scheduling logging notification service party node js base javascript library express js fast assertive essential moderate web framework node js help manage server route ajax express automatically ajax request handle middleware express framework configuration file node js end interact mongo db mongoose connector socket io node server auto reconnection disconnection support implement mysql database storage system restful webservices hibernate mapping relationship table entity class access update information database hibernate query language hql perform query database hibernate core interfaces configuration transactional session criterion develop data model hibernate pojo configure hibernate persistence layer work nosql database mongo db develop custom mongo db application specific client need ajax json asynchronous call project server fetch datum fly jenkins continuous deployment integration build release process deal gulp perform magnification compilation bower maintain package dependency perform unit testing jasmine karma develop web service restful api work creation custom docker container image tag push image involve run selenium automation script update script accord enhance requirement selenium webdriver unit testing junit design implement scalable secure cloud architecture base amazon web services aws configure aws instance buckets cloud formation services base business requirement different application involve behavior drive development scrum framework agile methodology maven tool build project manage dependency develop maintain automate regression test case selenium java programming language implement test automation web application backend selenium responsible create request building test scenario web service project test webservices restful service soapui environment java spring mvc xml json javascript angular oracle g tomcat bootstrap maven hibernate mysql multithreading eclipse aws sdk restful backbone js cassandra ajax json node js express js aws microservices restful api jax rs react js node js gulp npm aws apache kafka github nosql mongo db jasmine karma selenium soap ui sr java developer october july fedex corporation memphis tn roles responsibility implement soa architecture enterprise service bus esb configure business application xml bean definition file spring work hibernate orm create hibernate xml file java class file map object relation mappings hibernate query language provide data persistence object relational mapping solution hibernate application save update delete operation implement single sign ldap login authentication develop application spring mvc framework ioc dependency injection hibernate orm framework spring framework datum persistence transaction management work presentation layer angular js ajax backbone js html jsp java script xml create ui mock screen develop screen jsp css custom tag library create custom component jquery javascript maintenance application mss rest controller replace exist operation layer act bridge business layer ui develop web api nodejs host multiple load balanced api instance develop framework consume rest webservices spring rest library junit framework write test case unit testing power mock mockito library create mock object verify service logic develop copy tool standalone application javafx copy datum environment environment spring core annotation dependency injection spring mvc rest api s spring boot micro service apache camel cxf jboss fuse esb integration platform soa services angular js data bind node js end support api work jpa persist object system involve find memory leaks adjust jvm heap sizes gc parameters jprofiler work axis implementation soapui test soap work xml xsd xslt parse request create new base specification develop generic java package produce consume jms message topic queue asynchronous message processing guarantee delivery ibm mq series jms provider utilize core design pattern singleton data access object dao implementation service responsible write sql query procedures involve write test plan test case test scripts quality center responsible write junit test case peer level testing improved database performance recognize rewrite slow query build deployment websphere application server solid deployment experience unix platform create uml diagram class diagrams sequence diagrams ibm rational rose environment javafx jsp servlets spring websphere application server oracle soa jms jmx ibm mq series soapui hibernate xml xsd spring junit backbone js ms sql server jpa jta jdbc maven pl sql developer unix uml agile web logic angular js java developer october september bank new york mellon jersey city nj responsibility design develop uml diagrams use case class sequence activity diagrams work agile methodology environment participate scrum session designing develop implement test distribute application develop detailed design document functional module application testing team setup test case migration web sphere application server tomcat application eclipse ide deploy application tomcat server develop dynamic interactive base application html css javascript language implement persistence layer hibernate interact mysql database perform crud operation web logic app server deploy application jdbc datum access layer connect oracle db design developed web services technology uddi wsdl soap communicate module maven automate build script compile package application implement project configure xml file spring security injection ensure end security discriminate role user access authority uris server asset implement spring mvc include write controller class handle request process form submission perform validation commons validator involve develop interface web page like user registration login register access control user depend login html javascript integrated spring dao datum access hibernate hql sql query database involve group presentation poster presentation involve bug fix write int application error log jdbc api connect database perform create read update delete operation insert retrieve drop delete datum requirement involve project migration swing application web integration struts web framework base mvc architecture debug stored procedures application sql query access oracle sql server write test case junit testing framework responsible prepare test script system develop code asynchronous update web page javascript ajax create consume soap base web service soapui send receive xml datum worked jms queues send message point point mode environment java c servlet jsp jms struts css javascript oracle g junit soap xml weblogic server sql tomcat hibernate angular js node js spring git soap junit pl sql ms sql structs spring xml websphere application server sql java developer march august prod apt solutions responsibility involve create use case class diagrams interaction diagrams design uml diagram base ooad principle develop ejb deploy ibm websphere application server develop action class action form action servlet web tier develop business logic web tier ejb stateless session bean develop business layer component enterprise java bean ejb develop module servlets jdbc connect database implement multithreading feature process multiple request achieve high performance implement web services integrate different application rest service jax ws implement singleton design pattern database connectivity implement connection property maintain database connection hand write stored procedures function trigger ddl dml sql query create custom pl sql procedure read datum flat file dump database sql loader create table view type trigger complex join query store procedure function modification exist database structure require addition new feature involve design database schema write complex sql query access store procedure function jdbc callable statement work ibm mq simplify integration accelerate application deployment work web base reporting system html javascript jsp deploy project linux environment ant build tool compilation generation war file environment java html pl sql webservices multithreading hibernate spring jsp eclipse ibm websphere axis java script subversion ibm clarity maven rational rose windows xp"
}