{
  "filename": "Candidate_02.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate_02.docx",
  "text": "Candidate02\n540-999-8048\nCandidate02@gmail.com\nOBJECTIVE:\nAround 8 years of strong software experience in design, development, analysis and deployment of web-based and Client-Server business applications using Object Oriented Analysis and Design (OOAD, OOPS) and Java/JEE/J2EE technologies in Financial, Insurance, and Health Sector Domain with Software Development Life Cycle (SDLC).\nPROFESSIONAL SUMMARY:\nActively involved in each phase of Software Development Life cycle (SDLC).\nExpertise in client scripting language and server scripting languages like HTML5, CSS3, JavaScript, JQuery, Ajax, AngularJS, NodeJS, JSON, Bootstrap.\nUtilized Java 1.8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application\nHands on experience with Amazon web services (AWS) and Amazon cloud technologies such as Amazon EC2 (virtual servers) and Amazon Cloud Watch (monitoring).\nManaged Amazon Web Services like EC2, S3 bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud (VPC) through AWS Console and API Integration.\nExtensive experience working in Spring framework, Struts framework, ORM Mapping Hibernate framework and web services.\nExperience using Spring MVC, Spring Boot, Spring Cloud, Spring DAO, Spring Data, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring Security.\nExperience in developing applications using Micro Services architecture.\nExpertise in developing reliable and scalable enterprise applications using Servlets, JSPs, Struts, JSTL, JDBC, AJAX, EJB and Web Services.\nStrong work experience in application integration and communicating using SOA, Web Services such as Simple Object Access Protocol(SOAP), Representational State Transfer (REST/ Restful), JAX-RPC, JAX-RS, JAX-WS, WSDL, UDDI, Apache CXF, JAXB, XSD, Axis2.\nExcellent knowledge and experience in writing SQL queries, Stored Procedures, Triggers and views using various databases such as MS SQL Server, MySQL, IBM DB2, Oracle databases and NoSQL database systems like Mongo DB.\nExpertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XSL-FO and parsers like SAX, DOM.\nExperienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache Active MQ and Apache Camel as JMS provider.\nExperience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server.    \u00a0                    \nExperience in developing logging and standard mechanism based on Log4j and SLF4j.\u00a0\nWorked on implementing full life cycle of software development process (SDLC) in using version control tools like Git, Rational Clear Case, Tortoise SVN, CVS (Concurrent Version System).\nHands-on experience working with Continuous Integration (CI) build-automation tools such as Jenkins along with Build Plugins like Maven, Gradle and Apache Ant.\nExperienced in the formation and mentoring of project teams working on Agile methodologies to deliver business critical software applications using tools like Jira.\nExperience in web development tools like Eclipse, RAD, Spring Tool Suite, and IntelliJ.\nHands on experience with Windows, UNIX and Linux Environments.\nExperience in designing, developing, and deploying J2EE applications on IBM Web sphere, Web logic, Apache Tomcat, Glassfish and JBOSS Servers.\nTECHNICAL SKILLS\nPROFESSIONAL EXPERIENCE\nClient: Capital One\t\t\t\t\t\t\t\t\t\t            Mar 17 \u2013 Till date             \nLocation: Mclean, VA\nRole:  Full Stack Java Developer\nDescription: Capital One is the one of largest banking sector, it has over 480,000 members and is among the top 20 credit unions in the U.S.A. Capital One Home Loans servicing is a diversified bank that offers a variety of checking, savings, mortgage and lending accounts and services to individuals, small businesses and commercial clients.\nResponsibilities:\nInvolved in the complete SDLC (software development life cycle) of the application from requirement analysis to testing. \nFollowed Agile Methodology in analyze, define, and document the application, which will support functional and business requirements. Coordinate these efforts with Functional Architects. \nExtensively worked on Responsive Web Design (RWD) page development using HTML5, CSS3, JQuery, JavaScript, AngularJS, and JSON.\nUtilized Java 1.8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.\nUsed Java 1.8\u00a0features in developing the code like Lambda expressions, creating resource classes, fetching documents from database.\u00a0\nDeployed and Monitored Micro Services\u00a0Using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry.\nDesigned, Configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the Amazon cloud formation.\nExperienced in setting up Amazon EC2 instances, virtual private cloud (VPCs), and security groups. Setting up databases in AWS using RDS, storage using S3 bucket and configuring instance backups to S3 bucket.\nImplemented the application using Spring IOC, Spring MVC Framework, Spring Batch, Spring Boot and handled the security using Spring Security.\nDeveloped RESTful API for assessment indicators module and token based authentication for RESTful services\u00a0using Spring Security.\nInvolved in building database Model, APIs and Views utilizing Python, to build an interactive web based solution.\u00a0\nUsed Jersey to implement Restful Web Service and used XML form to transfer the data. \nDeveloped the application using J2EE Design Patterns like Business Delegate, Factory, Singleton, Session Facade, Service Locator and DAO. \nWorked and involved in deployment of core platform technologies, techniques, and web app frameworks such as spring, JBOSS, Tomcat, JSON, XML, HTML5, and Web Services.\nUsed Spring MVC module to develop MVC Architecture. \nWorked on Apache Camel, RabbitMQ for sending messages over queue.\u00a0\nDeployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka.\nUsed Spring Security and OAuth2.0 for Authentication and Authorization of the application.\nImplemented Spring AOP for declarative transaction management.\nDeveloped a AWS Lambda function to send a request for internal service end points through API Gateway\u00a0using apache HTTP Client.\u00a0\nManaged code versioning with GitHub and deployment to staging and production servers\nUsed Rest Controllers to replace the existing operations layer, which acts as bridge between business layer and the UI. \nUsed Jenkins as build management tool for continuous integration process.\nConfigured pom.xml to deploy the project using Maven.\nProvided Technical support for production environments resolving the issues, analyzing the defects, providing and implementing the solution defects. \nEnvironment: Agile Methodology, Java1.8, Lambda, J2EE,\u00a0HTML5, CSS3, JavaScript, JQuery, AJAX, AngularJS, Bootstrap, JSON, JSP, AWS, Micro Services, Oracle, RabbitMQ, Spring AOP, Hibernate, Spring Cloud, Spring MVC, Spring JDBC, JDBC, Web-Services, SOA (Service-oriented) Architecture, Redis, REST, JAX-RS, Jersey, JUnit, JAX-B, WebSphere, JIRA, Maven, GIT, RAD, Jenkins, MongoDB,  Cassandra,.\nClient: State Farm\t\t\t\t\t\t\t\t\t\t                 Jan 16 \u2013 Feb 17 \nLocation: Dallas, TX\nRole: JAVA Full Stack Developer\nDescription: Auto Quote Purchase (AQP) application is one of the many applications that are part of SF Auto Systems. Property and Causality being the main forte of State Farm's business the maintenance of all the applications coming under the Auto Systems umbrella is crucial. Auto Quote Purchase (AQP) is one of the many applications that are part of SF Auto Systems. P&C Application support involves production support, defect fixes and minor enhancements based on the SF's requirement. AQP is a web application which is used to gather customer information, generate quote and provides options to purchase the Auto policies.\u00a0\nResponsibilities:\nInvolved in SDLC requirements gathering, analysis, design, development and testing of application developed using AGILE methodology.\nCreated user-friendly GUI interface using HTML5, CSS3, JavaScript, JQuery, AngularJS.\nImplemented persistence framework using Hibernate& Handled Transaction Management using the provided data source.\nResponsible for designing Hibernate mapping files based on business logic and Object relationships.\nDeveloped restful web service APIs using Spring Framework such as Spring Core, Spring MVC, Spring\u00a0\nAOP and Java\u00a0Persistence API with a backend PostgreSQL and Cassandra\u00a0database.\nInvolved in developing Web Services to send XML request and reading the response SOAP UI from Java platform.\nConsumed Web Services to interact with other external interfaces to exchange the data in the form of XML and by using SOAP.\nCreated Restful Web services using Jersey API (JAX-RS) while data exchange was carried out between application and services\u00a0using JSON.\u00a0\n Spring MVC, Ajax and Dependency Injection for handling presentation and business logic.\nTo maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP.\nIntegrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring.\nExtensively used HQL and SQL for querying databases. \nDeveloped Message Driven Bean for asynchronous sending Messages using JMS.\nUsed Apache Camel Framework to transform, extract and load the data.\nUsed Spring Core Annotations for Dependency Injection and used Apache\u00a0Camel\u00a0to integrate spring framework.\u00a0\nImplemented request and response objects using SOAP web services and created routes using Apache\u00a0Camel.\u00a0\nUsed Rest methodology for the service layer interface and used JSON for the data transformation.\nDeveloped various AJAX and JSON calls for the communication between the server and the UI.\nDeveloped web services for produce and consumed the services by making Web Service Calls to remote services in different applications.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners \nEstablished Database Connectivity using Hibernate O/R mapping with Spring ORM for MySQL Server. \nDeveloped the Mapping Resource Files for the database entities.\nPackaged and deployed the application in IBM Web sphere.\nUsed\u00a0IntelliJ\u00a0as IDE to develop the application and followed the standard features for debugging and running.\nUsed log4J for application logging and notification tracing mechanisms.\nAnalysis and Bug fixing of the production problems and defects along with enhancements\nUsed Rational Clear Case for the version control\nUsed Maven as the build tool.\nUsed J-Unit Testing and Ant Scripts.\nUsed JIRA for tracking the Project Stories in AGILE Methodology.\nEnvironment: Agile, Java, JDK, J2EE, HTML5, CSS3, Java Script, JQuery, Ajax, AngularJS, Mongo DB, XML, Spring, Apache Camel, MVC design patterns, Spring MVC, Hibernate, Ant, Maven, Netflix, Rational Clear Case, Web sphere Server, IBM Web Sphere, Apache Camel, SOAP UI, JNDI, Log4J, PostgreSQL, MySQL Server, Google cloud platform, JIRA, RMI, IntelliJ, IDE, LINUX. \nClient: Cigna Healthcare\t\t\t\t\t\t\t\t\t              Nov 13\u2013 Dec 15 Location: Windsor, CT\nRole: Java Developer\nDescription: One view is a web based application helping Customer Services people to view Benefit Plan information for Customers, health care providers. The application helps to resolve; track customer queries online by reducing overall time. The current project is reengineering the old application by replacing outdated Cordiant service layer with Restful Services and Spring Integration frame work improving performance and scalability.\nResponsibilities:\nDesigned and developed the REST based Micro Services using the Spring Boot.\nWriting end-to-end flow i.e. controllers classes, service classes, DAOs classes as per the Spring MVC design and writing business logics using core java API and data structures\nDesign, develop & deliver the REST\u00a0APIs that are necessary to support new feature development and enhancements in an agile environment.\u00a0\nUsed Spring JMS related MDB to receive the messages from other team with IBMMQ for queuing\nDeveloped presentation layer code, using JSP, HTML, AJAX and JQuery\nDeveloped the Business layer using spring (IOC, AOP), DTO, and JTA\nDeveloped the Persistence layer DAO using HIBERNATE\nWorked with Open symphony\u00a0workflows and delivered work flow module to the client.\u00a0\nDeveloped the project using industry standard design patterns like Singleton, Business Delegate Factory Pattern for better maintenance of code and re-usability\nDeveloping application module coded on Spring Batch and Apache Camel.\u00a0\nWritten Jenkins pipeline template script in Groovy\u00a0programming language for the automation of build and deployment process.\nCreated groovy\u00a0scripts to extract transaction volume information and email to management on daily basis.\u00a0\nDeveloped unit test cases using Junit framework for testing accuracy of code and logging with SLF4j + Log4j\nWorked with defect tracking system Clear Quest\nWorked with IDE as Spring STS and deployed into spring tomcat server, WebSphere 6 & used Maven as build tool\nResponsible for code sanity in integration stream used Clear Case as version control tool.\nEnvironment: Java, J2EE, HTML, CSS, AJAX, JQuery, MongoDB, Apache Camel, symphony, JavaScript, JSP, Spring, Spring Batch, Spring web services, XML, UML, JUNIT, IBM WebSphere, Maven, Clear Case, SoapUI, Oracle 11g, Spring JMS, IBM MQ.\nClient: Liberty Mutual\t\t                                                           \t\t\t                                 Jan 12 - July 13  \nLocation: Seattle, WA\nRole: Java Developer\nDescription: Liberty Mutual Insurance is an American diversified global insurer, and the second-largest property and casualty insurer in the United States. Ecommerce application provides services such as Auto Insurance and home insurance. The application is used for accessibility into the appropriate Agent Center applications and generating quotes and policies, payments and reports.\nResponsibilities:\nInvolved in all phases of the Software development life cycle (SDLC).\nDesigned project related documents which includes Use case, Class and Sequence diagrams.\nInvolved in design, development, testing and implementation of the process systems, working on iterative life cycles business requirements, and creating Detail Design Document.\nUsing\u00a0Agile\u00a0methodologies to plan work for every iteration and used continuous integration tool to make the build passes before deploying the code to other environments.\nExtensive experience in developing PL/SQL\u00a0Stored Procedures, Functions, Packages, Cursors, Collections (Nested tables and arrays), Records, Object types and Database Triggers.\u00a0\nCreated\u00a0HTML\u00a0Wireframes based in the Detailed System Specification Document Developed the presentation layer of the application using\u00a0MVC\u00a0architecture of\u00a0spring framework.\u00a0\nCreated\u00a0DAO\u00a0classes to interact with\u00a0DB2\u00a0database.\nUsed Spring\u00a0ORM\u00a0module to integrate with\u00a0Hibernate.\nUsed JMS API for sending and receiving the messages on the queue.\nUsed the\u00a0spring validation\u00a0and\u00a0Tiles Framework\u00a0in the presentation layer.\nDeveloped user interface using\u00a0JSP,\u00a0Spring Tag Libraries\u00a0to simplify the complexities of the application.\nDeveloped user interface with\u00a0Java Server Pages, Ajax\u00a0support to speed up the application form filling.\nUsed\u00a0Apache Axis\u00a0as the Web Service framework for creating and consuming\u00a0Web Service\u00a0clients using\u00a0SOAP and WSDL.\nUsed Rally for tracking purpose.\nDesigned various tables required for the project using\u00a0DB2\u00a0database. Used\u00a0JBOSS\u00a0server for deploying the application.\nUsed Ant for build, create JAR, WAR, EAR files and deploy the EAR files automatically.\u00a0\nUsed Junit to test the application classes.\nUsed\u00a0Log4J\u00a0to capture the logging information.\nEnvironment: Java, J2EE, JavaScript, JSP, AJAX, XML, Agile, Spring, Eclipse IDE, DB2, Rational Rose, Log4j, Junit, Ant, JBOSS, Rally, Apache Axis, Web Service, SOAP, WSDL.\nClient: Soft Pro Systems Ltd.                                                                                                                                             Sep 10 - Dec 11\nLocation: Hyderabad, India\t\t\t\t\t\t\t\nRole:  Java Developer  \nDescription: This project is mainly an Intranet application meant for employees in the organization. They are Intranet mailing System, Chatting, File Transfer and Remote Login. This project is based on the client server methodology.\nResponsibilities:\u00a0\nInvolved in the design and development of an entire Module \u2013 Guided Set Up. Developed user interface through JSP and Servlets.\u00a0\nDeveloped Action classes and Action Forms using the struts framework.\u00a0\nDeveloped Customs tags to display dynamic contents and to avoid large amounts of java code in JSP pages\nConnected to database through JDBC.\u00a0\nExtensive experience working with XML (DOM and SAX).\nUsed SQL-server to store the items in the database.\nUsed Session beans for navigation of steps.\nUsed Entity beans for storing the database in to database. Developed Session Beans as the clients of Entity Beans to maintain the Client state.\nDeveloped Ant Scripts to build and deploy EAR files on to Tomcat Server. Analyzed the EJB performance in terms of scalability by various Loads, Stress tests using Bean- test tool.\nExtensively used Eclipse while writing code as IDE. Written complex SQL queries, stored procedures, functions and triggers in PL/SQL.\u00a0\nDeveloped test cases and used Junit for Unit Testing.\u00a0\nUsed CVS for version controlling.\nEnvironment: Java, J2EE, Servlets, XML (DOM and SAX), JSP, EJB, JavaScript, CSS, JDBC, Struts, Ant, Web Logic Application Server, WSAD, Eclipse IDE, SQL-Server, Apache Tomcat, Oracle, PL/SQL, CVS, PVCS, Junit, Windows.\nClient: \tLogin IT Technologies\t\t\t                                                                                                      May 09 - Aug 10 Location: USA\nRole: Java Developer\nDescription:  PRS or Price reporting system is responsible to publish the rates to the customers and as to maintain the\nusers across the FedEx locations and its subsidiaries. It interacts with the customer fusion and existing legacy systems to\naccess the customer information and legacy data.\nResponsibilities:\nDeveloped web application using Struts 2.X, JSP, Servlets, Java beans that uses MVC design pattern\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP\nWrote JavaScript for client-side validation.\nUsed Eclipse as IDE tool for creating Servlets, JSP, and XML.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nMonitored the logs using Log4J and fixed the problem\nThe application was deployed on the Tomcat.\nInvolved in build and deploying the application using ANT  \nUsed CVS as version control system \nWorked on bug fixing and Production Support\nEnvironment: Java, JDBC, Struts, JavaScript, HTML, CSS, JSP, Servlets, Tomcat, Oracle, Eclipse IDE, CVS, ANT, Log4J.",
  "size_bytes": 45438,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:55.769279",
  "clean_text": "objective year strong software experience design development analysis deployment web base client server business application object oriented analysis design ooad oops java jee technology financial insurance health sector domain software development life cycle sdlc professional summary actively involve phase software development life cycle sdlc expertise client scripting language server scripting language like javascript jquery ajax angularj nodejs json bootstrap utilize java feature like lambda expression stream api bulk datum operation collection increase performance application hands experience amazon web service aws amazon cloud technology amazon virtual server amazon cloud watch monitoring managed amazon web services like bucket elb auto scaling sns sqs ami iam dynamo db elastic search virtual private cloud vpc aws console api integration extensive experience work spring framework strut framework orm mapping hibernate framework web service experience spring mvc spring boot spring cloud spring dao spring data spring ioc spring annotations spring aop spring transactions spring security experience develop application micro services architecture expertise develop reliable scalable enterprise application servlets jsp strut jstl jdbc ajax ejb web services strong work experience application integration communicating soa web services simple object access representational state transfer restful jax rpc jax rs jax ws wsdl uddi apache cxf jaxb xsd excellent knowledge experience write sql query stored procedures triggers view database ms sql server mysql ibm oracle database nosql database system like mongo db expertise xml technology xsl xslt xml schemas xpath xsl fo parser like sax dom experience jms message exchange information reliable asynchronous way enterprise application apache active mq apache camel jms provider experience creating configure continuous delivery pipeline deploy micro service lambda function jenkins ci server experience develop logging standard mechanism base work implement life cycle software development process sdlc version control tool like git rational clear case tortoise svn cvs concurrent version system hand experience work continuous integration ci build automation tool jenkins build plugins like maven gradle apache ant experience formation mentoring project team work agile methodology deliver business critical software application tool like jira experience web development tool like eclipse rad spring tool suite hand experience windows unix linux environments experience designing develop deploy application ibm web sphere web logic apache tomcat glassfish jboss server technical skills professional experience client capital mar till date location mclean va role stack java developer description capital large banking sector member credit union capital home loans servicing diversified bank offer variety checking saving mortgage lending account service individual small business commercial client responsibility involve complete sdlc software development life cycle application requirement analysis testing follow agile methodology analyze define document application support functional business requirement coordinate effort functional architects extensively work responsive web design rwd page development jquery javascript angularjs json utilize java feature like lambda expression stream api bulk datum operation collection increase performance application java feature develop code like lambda expression create resource class fetch document database deploy monitored micro services pivotal cloud foundry managed domains routes cloud foundry design configure deploy amazon web services aws multitude application utilize amazon cloud formation experience set amazon instance virtual private cloud vpcs security group set database aw rds storage bucket configure instance backup bucket implement application spring ioc spring mvc framework spring batch spring boot handle security spring security develop restful api assessment indicator module token base authentication restful service spring security involve building database model api view utilize python build interactive web base solution jersey implement restful web service xml form transfer datum develop application design patterns like business delegate factory singleton session facade service locator dao worked involve deployment core platform technology technique web app framework spring jboss tomcat json xml web services spring mvc module develop mvc architecture work apache camel rabbitmq send message queue deploy application docker container easily accessible runtime cloud foundry cloud service like aws netflix eureka spring security authentication authorization application implement spring aop declarative transaction management develop aws lambda function send request internal service end point api gateway apache http client manage code versione github deployment staging production server rest controller replace exist operation layer act bridge business layer ui jenkins build management tool continuous integration process configure deploy project maven provide technical support production environment resolve issue analyze defect provide implement solution defect environment agile methodology lambda javascript jquery ajax angularjs bootstrap json jsp aws micro services oracle rabbitmq spring aop hibernate spring cloud spring mvc spring jdbc jdbc web services soa service orient architecture redis rest jax rs jersey junit jax b websphere jira maven git rad jenkins mongodb cassandra client state farm jan feb location dallas tx role java stack developer description auto quote purchase aqp application application sf auto systems property causality main forte state farm business maintenance application come auto systems umbrella crucial auto quote purchase aqp application sf auto systems application support involve production support defect fix minor enhancement base sf requirement aqp web application gather customer information generate quote provide option purchase auto policy responsibility involve sdlc requirement gathering analysis design development testing application develop agile methodology create user friendly gui interface javascript jquery angularjs implement persistence framework hibernate handled transaction management provide datum source responsible design hibernate mapping file base business logic object relationship develop restful web service api spring framework spring core spring mvc spring aop java persistence api backend postgresql cassandra database involve develop web services send xml request read response soap ui java platform consumed web services interact external interface exchange datum form xml soap create restful web service jersey api jax rs datum exchange carry application service json spring mvc ajax dependency injection handle presentation business logic maintain loose coupling layer publish business layer service inject necessary dependent component spring ioc publish cross cut concern like logging user interface exception transactions spring aop integrated spring hibernate work develop backend component service hibernate spring extensively hql sql query database develop message driven bean asynchronous send message jms apache camel framework transform extract load datum spring core annotations dependency injection apache camel integrate spring framework implement request response object soap web service create route apache camel rest methodology service layer interface json data transformation develop ajax json call communication server ui develop web service produce consume service make web service call remote service different application spring jms module lookup queue mdb listener established database connectivity hibernate o r mapping spring orm mysql server develop mapping resource files database entity package deploy application ibm web sphere intellij ide develop application follow standard feature debug run application logging notification trace mechanism analysis bug fixing production problem defect enhancement rational clear case version control maven build tool j unit testing ant scripts jira track project stories agile methodology environment agile java jdk java script jquery ajax angularj mongo db xml spring apache camel mvc design pattern spring mvc hibernate ant maven netflix rational clear case web sphere server ibm web sphere apache camel soap ui jndi postgresql mysql server google cloud platform jira rmi intellij ide linux client cigna healthcare nov dec location windsor ct role java developer description view web base application help customer services people view benefit plan information customers health care provider application help resolve track customer query online reduce overall time current project reengineere old application replace outdated cordiant service layer restful services spring integration frame work improve performance scalability responsibility design develop rest base micro services spring boot write end end flow controller class service class daos class spring mvc design write business logic core java api datum structure design develop deliver rest api necessary support new feature development enhancement agile environment spring jms relate mdb receive message team ibmmq queue developed presentation layer code jsp html ajax jquery develop business layer spring ioc aop dto jta develop persistence layer dao hibernate work open symphony workflow deliver work flow module client develop project industry standard design pattern like singleton business delegate factory pattern well maintenance code usability develop application module code spring batch apache camel write jenkins pipeline template script groovy programming language automation build deployment process create groovy script extract transaction volume information email management daily basis develop unit test case junit framework test accuracy code log work defect tracking system clear quest worked ide spring sts deploy spring tomcat server websphere maven build tool responsible code sanity integration stream clear case version control tool environment java html css ajax jquery mongodb apache camel symphony javascript jsp spring spring batch spring web service xml uml junit ibm websphere maven clear case soapui oracle g spring jms ibm mq client liberty mutual jan july location seattle wa role java developer description liberty mutual insurance american diversified global insurer second large property casualty insurer united states ecommerce application provide service auto insurance home insurance application accessibility appropriate agent center application generate quote policy payment report responsibility involve phase software development life cycle sdlc design project relate document include use case class sequence diagram involve design development testing implementation process system work iterative life cycle business requirement create detail design document agile methodology plan work iteration continuous integration tool build pass deploy code environment extensive experience develop pl sql stored procedures functions packages cursors collection nest table array records object type database triggers create html wireframes base detailed system specification document develop presentation layer application mvc architecture spring framework create dao class interact database spring orm module integrate hibernate jms api send receive message queue spring validation tiles framework presentation layer develop user interface jsp spring tag libraries simplify complexity application develop user interface java server pages ajax support speed application form filling apache axis web service framework create consume web service client soap wsdl rally track purpose design table require project database jboss server deploy application ant build create jar war ear file deploy ear file automatically junit test application class capture log information environment java javascript jsp ajax xml agile spring eclipse ide rational rose junit ant jboss rally apache axis web service soap wsdl client soft pro systems sep dec location hyderabad india role java developer description project mainly intranet application mean employee organization intranet mailing system chatting file transfer remote login project base client server methodology responsibility involve design development entire module guided set develop user interface jsp servlets develop action class action forms strut framework develop customs tag display dynamic content avoid large amount java code jsp page connect database jdbc extensive experience work xml dom sax sql server store item database session bean navigation step entity bean store database database develop session beans client entity beans maintain client state develop ant scripts build deploy ear file tomcat server analyze ejb performance term scalability loads stress test test tool extensively eclipse write code ide write complex sql query store procedure function trigger pl sql develop test case junit unit testing cvs version control environment java servlets xml dom sax jsp ejb javascript css jdbc struts ant web logic application server wsad eclipse ide sql server apache tomcat oracle pl sql cvs pvcs junit windows client login technologies aug location usa role java developer description prs price reporting system responsible publish rate customer maintain user fedex location subsidiary interact customer fusion exist legacy system access customer information legacy datum responsibility develop web application struts jsp servlets java bean use mvc design pattern create user friendly gui interface web page html css jsp wrote javascript client validation eclipse ide tool create servlets jsp xml write sql jdbc prepare statement retrieve datum database monitor log fix problem application deploy tomcat involve build deploy application ant cvs version control system work bug fixing production support environment java jdbc struts javascript html css jsp servlets tomcat oracle eclipse ide cvs ant"
}