{
  "filename": "Candidate_41.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate_41.docx",
  "text": "                                                                                        Candidate 41\n                                                                     Sr. Java Full Stack Developer\nEmail:  candidate41javafullstack@gmail.com                                                                                   Phone: +1 732-630-7623\nSummary: Well-organized and result-oriented Java software developer with a strong technical background of 8 years, working in Agile-Scrum/Waterfall Environment, Strong knowledge and hands on experience in Writing and developing Algorithms, Data Structures; Requirements Gathering, Designing, Testing and Production Maintenance of Enterprise Integration applications using SOA and Microservices technologies.\nProfessional Summary:\n8+ years of professional experience in all phases of software development life cycle (SDLC) including system design, development, production support and maintenance of various Web Applications using Java/J2EE Technologies.\nGood knowledge in Analysis and Design using Unified Modeling Language (UML) and strong experience on agile methodology.\nExpertise in developing Web based distributed and Front-end applications in a three-tier architecture using Java, J2EE, HTML5, CSS3, JavaScript, Ajax, JSP, jQuery and Angular JS, Node JS.\nExtensive experience in developing Enterprise applications using Core Java and various J2EE technologies including Multithreading, Collections, exceptions, JSP, Servlets, JSP Custom Tags Libraries, JavaBeans, EJB, JDBC, Networking, Threads, IO, JNDI and JMS\nProficient in working on various spring modules (Spring Core, Spring IOC, Spring MVC, Spring DAO, Spring Boot and AOP) along with Hibernate and JPA.\nWorked with advanced version of Eclipse IDE from spring, Spring IO / Spring Boot, which is Spring Tool Suite (STS) to make application development easy.\nImplemented Client side code to call REST endpoints using JAXRS API with HTTP and Jersey clients.\nDeveloped end-to-end composite RESTFUL Web Services by using SOA with CXF framework used with different clients including Web & Mobile.\nExperienced in AWS Cloud platform and its features which includes Amazon AWS Cloud Administration which includes services like: EC2, S3, RDS, IAM, SNS, ELASTIC BEANSTALK, Route 53, Auto scaling, Lambda, Cloud Watch, and Cloud Formation.\nExperience working with different databases, such as Oracle, SQL Server, MySQL, DB2, Sybase, Cassandra.\nGood experience in writing SQL Queries, Stored Procedures, functions, packages, tables, views, triggers, data connectivity and data integration of Oracle.\nHave experience in Design, Development and Deployment of Web-Applications/ J2EE applications on servers like BEA-WebLogic, and Apache Tomcat, JBoss\nIntegration and deployment of applications done using tools like ANT and Maven and debugging through log4j.\nHands on knowledge with UNIX shell scripting, Python and Ruby.\nExperience in using Version Control Systems like CVS, SVN, Harvest and GIT\nGood interpersonal skills, excellent verbal, written and presentation skills and can work both independently and in a team.\nAn enthusiastic and project-oriented team player with solid communication and interpersonal skills with ability to develop creative solutions for challenging client needs.\nTechnical Skills:\nProfessional Experience:\nClient: MoneyGram International, Frisco, TX                                                                                 Jan 2017 - Till date\nRole: Sr. Java Full Stack Developer \nDescription: This project is mainly about setting the Credit Limits for the MoneyGram agents across the world. It also processes the transactions of the agents (money received and sent) from and to the Customers. It also has image proof system which verifies the amount processed by the agent to the amount received by the MoneyGram representative.                                                   \nResponsibilities:\nInvolved in Requirement Analysis, Design, Development and Testing of the application.\nInvolved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development, Testing, Implementation and Maintenance Support.\nDesigned Frontend with in object oriented JavaScript framework like Angular.JS, Node.js. Used building rich internet applications, backbone JS Require JS to optimize in-browser use and to load the module and to improve the Speed.\nBuilt Web pages that are more user-interactive using AJAX, JavaScript, and ReactJS.\nParticipated in development of a well responsive single page application using ReactJS framework and JavaScript in conjunction with HTML5, CSS3 standards, with front end UI team.\nUsed Agile Scrum methodology for iterative incremental software development\nApplied J2EE design patterns like Singleton, Data Transfer Object DTO, Data and Business Object VO during the development of components.\nDesign roles and groups for users and resources using AWS Identity Access Management (IAM).\nUsed Visio to prepare Flow Diagram, Class Diagram and Sequence Diagram.\nUsed WebLogic Application Server to deploy the build.\nDeveloped front-end screens using Spring MVC, JSP, HTML, AJAX, JQuery, backbone, marionette, JavaScript and CSS.\nImplemented AWS solutions using EC2, S3, RDS, EBS, Elastic Load Balancer, Auto scaling groups, optimized\nDeveloped POJO based programming model using spring framework.\nUsed J2EE for the development of business layer services.\nUsed Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for micro-services.\nSetup and support automated Continuous Integration utilizing tools like Jenkins, Shell Scripts, and AWS CLI/API.\nResponsive web design (RWD) is developed using frameworks like Angular JS 2.0, typescript and MVC frameworks and Bootstrap.\nPlanned, constructed and iterated upon a contacts management single-page application and custom REST API using AngularJS, MongoDB, Node.js, and Express.js.\nDesigned developed the application using JSF, Face lets, Ext JS 4.1.\nDeveloped and published Java Web Services PoS Services so that other systems can use the service using Web Services.\nUsed Web services to extract client related data from databases using WSDL, XML and SOAP.\nBuilding RESTful Web Services with JAX-RS and Jersey.\nWriting the front-end look and appearance for the screens using JavaScript, AJAX, and AngularJS, jQuery, Rails experience and automation test cases.\nWorked on Prototyping and Implementation using Java, Node.JS, and AWS with Slacker platform.\nCreated advance SQL scripts in PL/SQL Developer to facilitate the data in/out flow in Oracle\nCreated Stored Procedures in Oracle using PL/SQL, TOAD\nUsed Eclipse for the Development, Testing and Debugging of the application.\nLog4j framework has been used for logging debug, info error data.\nWorked on creating Micro services, API, and created Docker Files for different Micro-services.\nUsed Secure CRT to transfer file from local system to UNIX system.\nPerformed Test Driven Development TDD using JUnit and Mockito.\nUsed Quality Center QC for defect logging and issue tracking.\nEnvironment: Windows XP, Java6.0, Design Patterns, AWS, WebLogic10.2, Java, J2EE Servlet, HTML, AJAX, JavaScript, Backbone, JQuery, CSS, Struts, Spring, Spring boot 1.1.5, Hibernate, Restful API, Web Services, SOAP, WSDL, JAX-RS, Jersey, JSON, XML, Angular.JS, ReactJS, EXT JS, Express JS 4.x, NodeJS, Typescript, ES7, SQL, PL/SQL, TOAD, Oracle 10g, DB2, Docker, Maven, Jenkins, Log4J, JUnit, Mockito\nClient: State Street Corporation, New York, NY                                                                           Oct 2015 - Dec 2016\nRole: Sr. Java Full Stack Developer\nDescription: State Street Corporation serves as the custodian for an investment company. It also provides the basic portfolio recordkeeping required by the investment company for regulatory and financial reporting purposes. State Street Bank and Trust Company serves mutual funds and other collective investment funds, corporate and public retirement plans, insurance companies, foundations, endowments and other investment pools, and investment managers worldwide.\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, analysis, design, development and testing Followed Agile methodology.\nImplemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS and UI router.\nUsed Bootstrap for creating rich, Responsive UI Screens for varying screen sizes and devices.\nImplemented core features of AngularJS framework such as dependency Injection, Data-binding, Filters, Directives, Templates, Services and Deep Linking.\nWorked with HTML5, CSS3, and JavaScript for developing user interface.\nBuilt data visualizations to monitor file server load, web server speeds, data processing and more using D3 JS, Backbone JS.\nImplemented RESTful services and data services on Node JS and Express.\nDeveloped the application based on main modules of Spring MVC framework such as Core Container, Data Access/Integration and Web.\nImplemented different REST APIs such as user and transactional using frameworks CXF & Spring REST and implemented Web Service security using OAuth protocol.\nImplemented Dependency Injection (IOC) feature of spring framework to inject beans into User Interface and AOP for Logging and transaction management.\nDeveloped Micro Services to provide Restful API's utilizing Spring MVC.\nFocused on Test Driven Development thereby creating detailed JUnit tests and mocked services using Mockito.\nImplemented microservices using Spring boot, spring based microservices\nMigrated Spring based application to cloud based Microservices\nUsed Amazon SQS queuing service for reliable communication among distributed software components and micro services and used Amazon SNS push notification service for sending individual messages to mobile device users, email recipients and to distributed users.\nResponsible for maintaining and expanding our AWS infrastructure using AWS (EC2/EBS).\nUsed Jenkins to load JAR files required for running the application.\nUsed Maven building tool for creating WAR file to be deployed in application servers.\nIt is also used for dependency management of code in application Configured and deployed the application on WebLogic application Server.\nDesigned Database schema and created complex SQL queries, Procedures for creating, reading, updating and deleting data in Oracle 11g.\nMapped business objects to database using Hibernate.\nExperience with RDBMS systems including MySQL and PostgreSQL.\nDeveloped server-side scripts in shell to customize GIT and integrate it with tools JIRA and Jenkins.\nInvolved in production support, monitoring server and error logs and Foreseeing the Potential Issues, and escalating to the higher levels.\nEnvironment: JDK 1.6, JDK1.7, Java, Spring 3.0, XML, MVC, J2EE, JUnit, Maven, JAX-WS, Log4j, Jenkins, Spring MVC framework, Spring AOP, Spring security, Spring Boot, AJAX, JavaScript, AngularJS, Node JS, Typescript, GIT, JAR, STS (spring tool suite), Eclipse 3.0, AWS, WebLogic Application Server, AWS (SNS, SQS, EC2, Cloud Watch), Oracle 11g, SQL Server.\nClient: Bailey Trading, Los Angeles, CA                                                                                        May 2014 - Sep 2015\nRole: Sr. Java Full Stack Developer\nDescription: Bailey Trading Company, LLC in Los Angeles, CA is a USA American international export trading company, import/export trade consultant for American manufacturers, foreign buyers, distributors and agents. Bailey trading organizes the client\u2019s data (transactions, history, benefits and rewards) through this web based portal named Revolver (Cash flow). They issue cards (similar to credit cards) to clients (Large fleet/ Small fleet) and organize their data through this portal. Data representation is carried out in a rich graphical interpretation using latest UI technologies.  \nResponsibilities:\nInvolved in the requirement analysis and designing the system to incorporate those requirements and coming up with the design to utilize existing systems and services.\nCommunicating with external services' representatives for understanding, reporting problems and taking into account the changes and updates.\nDesigned POCs for proving the third party service's credibility and functionality.\nInvolved in developing Web Service components using SOAP service.\nImplemented the REST web service for utilizing these services and exposing some of the newly implemented functionalities for others through JAX-RS and Spring Rest Controller.\nImplemented the Project structure based on Spring MVC pattern using spring boot.\nAll the functionality is implemented using Spring IO / Spring Boot, Thymeleaf and Hibernate ORM. Implemented Java EE components using Spring MVC, Spring IOC, spring transactions and spring security\nDeveloped spring boot application for writing web services.\nImplemented a Continuous Delivery pipeline with, Jenkins and GitHub and AWSAMI\u2019s. Converted our staging and Production environment from a handful AMI\u2019s to a single bare metal host running Docker.\nUsed Spring Boot which is radically faster in building cloud Microservices and develop spring based application with very less configuration.\nWorked on AWS, High Availability Practices and deploying backup/restore infrastructure\nImplemented the data layer for using the Cassandra database minimizing the dependency and redundancy.\nDivided the code in layers and services so that external service classes can be injected through Spring DI.\nTook in all events required for the app through JMS running on ActiveMQ queue.\nUsed Callable objects for implementing multithreading for parallel execution of independent events.\nWrote JUnit test cases for these classes following a test driven methodology.\nImplemented content reading and html reading in classes through Apache POI and JSOUP respectively.\nCoordinated with the testing team for bug reports and fixes and tracking these tickets through JIRA.\nInvolved in the front end design using HTML5, CSS, JavaScript and JQuery.\nCreated forms to collect and validate data from the user in HTML5 and ReactJS.\nMaintained existing UI Applications and upgraded them using CSS3, JQuery, AJAX, JavaScript, React JS, Backbone. Js, JSON and HTML5.\nUsed AngularJS as the development framework to build a single-page application.\nInvolved in the implementation of front end services through AngularJS and connecting them to the backend services.\nIncorporated error handling through exception handling in different layers and generating custom exceptions and codes.\nImplemented different levels of logging throughout the system using Slf4j logger.\nParticipated in daily stand ups and Sprint planning and review meetings.\nEnvironment: Java 1.8, Spring 4.0.6, Spring boot 1.1.5, Spring IO, Spring MVC, AWS, AngularJs, ReactJS, Spring Rest, JUnit 4.11, Apache poi 3.9, JSoup 1.8.1, Tomcat 7.0.54, Slf4j 1.7.7, Log4j 1.2.17, ActiveMQ broker/client 5.9.1, 4.3.4, JAX-RS 2.0, Maven 2.5.1, Cassandra, SOAP, Rest, WSDL, Windows 7, Eclipse Luna.\nClient: ASD Health Care, Frisco, TX                                                                                              Nov 2012 - April 2014\nRole: Java Developer\nDescription: This project is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital. This package is used to computerize the activities of a servicing system. This package contains four modules. They are Administration, Patient Care System, Health Services and Auxiliary Services. Each module is having sub modules within this sub module will maintains storing, registering, details of joining patient details, and overall day activities maintains one particular database.\nResponsibilities:\nParticipated in the complete life cycle of the project (Analyzing the client requirements, designing, developing and testing).\nMajor involvement in writing & reviewing Design Approach Documents and have designed architecture for the web module using Spring MVC framework and implemented the design of UI using Ajax Framework.\nBuilt software using Groovy and Grails on backend, JavaScript (AngularJS) on frontend\nDesigned REST-full XML Web Service for handling AJAX requests.\nApplied MVC pattern of Ajax framework which involves creating Controllers for implementing Classic JavaScript event handlers and implemented flexible event model for managing multiple event call backs.\nImplemented Spring MVC framework which includes writing Controller classes for handling requests, processing form submissions and also performed validations using Commons validator.\nDesigned and developed Java Swing interfaces for Contact, Event and Mail information editing.\nResponsible for integrating Ajax with Spring Service layer using DWR (Direct Web Routing)\nInvolved in all layers of applications like Controller Servlets, Service controller, Screening manager and Rule Engine.\nArchitecture JMS with spring which involves setting up Active MQ message Broker, declared Active MQ message destinations and also implemented Spring\u2019s JMS Gateway Support class as a base class for JMS gateway classes.\nWrote AngularJS controllers, views, and services for new website features.\nDeveloped XML, XML schema and parser using SAX and DOM and implemented System Oriented Architecture Methodology.\nDesigned and developed Business Services using Spring Framework (Dependency Injection), Business Delegate & DAO Design Patterns.\nImplemented JNDI Object Factory Bean for injecting JNDI Objects in spring configuration setup for fetching a database connection and also configured a mail sender (Java Mail Sender Impl) for sending email.\nEfficiently implemented multithreading using Java Concurrency utilities for performance improvements.\nImplemented JTA service to handle transactions and created a conversation interceptor for handling each event.\nImplemented Hibernates Polymorphic many-to-one associations for referring instances of subclasses and participated in design of data base and created tables in ORACLE.\nConducted code reviews against coding standards and made sure the best practices are maintained in development process.\nUsed Maven build tool for building the application\nDeveloping test requirements by decomposing the functional requirements and interacting with End-users, business analysts and developers.\nParticipated in meetings of internal developer groups for the purpose of development standards.\nEnvironment: Java, J2EE, spring, Servlets, JSP, EJB, Ajax, XML, AngularJS, Restful, Maven, CSS, JavaScript, Ant, RAD, SQL, Oracle, Hibernate, Toad, Log4j, CVS, WebSphere, Windows, UNIX.\nClient: NCC Finance, Hyderabad                                                                                             April 2011 - Aug 2012\nRole: Java Developer\nDescription: NCC Finance provides customized financial solutions to business, government and professional customers. Bank offer traditional lending and depository products, as well as a wide-range of international and global cash management, foreign exchange and international trade finance, derivatives and capital markets services, asset-based lending, real estate finance, public finance, commercial leasing and syndicated finance.\nResponsibilities:\nResponsible for transforming design mock-ups to W3C standards compliant HTML pages using XHTML, CSS.\nResponsible for creating JavaScript code, for different modules.\nInvolved in designing the User Interface mainly focusing on easing access to registration, plans and Features available on the website using XHTML, CSS, JavaScript and jQuery.\nExtensively used Core Spring Framework for Dependency Injections of components.\nDeveloped configuration files, mapping files and Annotations to map the POJOs to DB tables managing associations and classes specific to the spring and Hibernate.\nInvolved in creating the new entities using DAO's and DTO's for mapping to the database tables.\nInvolved in designing Application based on fa\u00e7ade, DAO, Singleton.\nCreating a High-Level Design Documents for the enhancements and change control activity.\nDesigned and developed applications using Eclipse and deploying the code on DEV servers.\nUnmarshalling the response from the Web service call into Java Objects.\nTested WSDL based SOAP 1.2 services using SOAP UI.\nUsed SQL Developer for developing SQL queries and stored procedures for Oracle Database 11g connectivity.\nApache subversion SVN repository is used to get the input code and updated changes.\nFocused on improving readability, utility, and overall UX.\nPreparation of effort estimation and schedule for every phase of enhancements & work allocation.\nEnvironment: Java, JDBC, Oracle Database, JUnit, SVN repository, jQuery, SQL Developer, JBoss application Server, XHTML, HTML, CSS, JSP.\nClient: Barclays Bank, USA                                                                                              Feb 2010 - Mar-2011\nRole: Junior Java Developer\nDescription: Barclays Bank is one of the largest among the private-sector banks in US. In the retail banking category, the bank offers services such as lending to individuals/small businesses subject to the orientation, product and granularity criterion, along with liability products, card services, Internet banking, (ATM) services, depository, and financial advisory services.\nResponsibilities:\nInvolved in Design, Development, Testing and Integration of the application.\nImplementing business logic and data base connectivity.\nClient-side installation and configuration of project.\nDeveloped using simple Struts Validation for validation of user input as per the business logic and initial data loading.\nCo-coordinated Application testing with the help of testing team.\nWriting database queries on Oracle.\nWriting stored procedures, Packages, Views, Cursors, Functions and triggers using SQL in the back end.\nUsed Hibernate for Object Relational Mapping (ORM) and data persistence.\nWrote SQL commands and Stored Procedures to retrieve data from Oracle database.\nDeveloped web services using SOAP, WSDL, and XML.\nDeveloped the application using Singleton, Business Delegate and Data Transfer Object design patterns in the project.\nCreated and implemented Oracle Stored Procedures, Functions, Triggers and complex queries using SQL.\nWorked with Java Messaging Services (JMS) for reliable and Asynchronous Communication.\nUsed log4j for logging and SVN for version control.\nAbility to quickly adjust priorities and take on projects with limited specifications. Effective team player with excellent logical and analytical abilities.\nExcellent written and verbal communication skills, inter-personal skills and self-learning attitude.\nEnvironment: Java, JSP, Spring, SOAP Web services, SOA, JavaScript, CSS, XML, JAXB XHTML, XSLT, JMS, Ajax, Hibernate, Log4j, Oracle, Web Sphere, Ant, Eclipse, UNIX, MS Office.\nEducation: Bachelor\u2019s in Computers, 2010, ",
  "size_bytes": 31869,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:16:00.114969",
  "clean_text": "candidate sr java stack developer email phone summary organize result orient java software developer strong technical background year work agile scrum waterfall environment strong knowledge hand experience writing develop algorithms data structures requirements gathering designing testing production maintenance enterprise integration application soa microservices technology professional summary year professional experience phase software development life cycle sdlc include system design development production support maintenance web applications java technologies good knowledge analysis design unified modeling language uml strong experience agile methodology expertise develop web base distribute end application tier architecture java javascript ajax jsp jquery angular js node js extensive experience develop enterprise application core java technology include multithreading collection exception jsp servlets jsp custom tags libraries javabeans ejb jdbc networking threads io jndi jms proficient work spring module spring core spring ioc spring mvc spring dao spring boot aop hibernate jpa work advanced version eclipse ide spring spring io spring boot spring tool suite sts application development easy implement client code rest endpoint jaxrs api http jersey client develop end end composite restful web services soa cxf framework different client include web mobile experience aws cloud platform feature include amazon aws cloud administration include service like rds iam sns elastic beanstalk route auto scaling lambda cloud watch cloud formation experience work different database oracle sql server mysql sybase cassandra good experience write sql queries stored procedures function package table view trigger datum connectivity datum integration oracle experience design development deployment web application server like bea weblogic apache tomcat jboss integration deployment application tool like ant maven debug hand knowledge unix shell scripting python ruby experience version control systems like cvs svn harvest git good interpersonal skill excellent verbal write presentation skill work independently team enthusiastic project orient team player solid communication interpersonal skill ability develop creative solution challenge client need technical skills professional experience client moneygram international frisco tx jan till date role sr java stack developer description project mainly set credit limits moneygram agent world process transaction agent money receive send customers image proof system verify process agent receive moneygram representative responsibility involve requirement analysis design development testing application involve implementation design vital phase software development life cycle sdlc include development testing implementation maintenance support design frontend object orient javascript framework like angular js build rich internet application backbone js require js optimize browser use load module improve speed build web page user interactive ajax javascript reactjs participate development responsive single page application reactjs framework javascript conjunction standard end ui team agile scrum methodology iterative incremental software development applied design pattern like singleton data transfer object dto data business object vo development component design role group user resource aws identity access management iam visio prepare flow diagram class diagram sequence diagram weblogic application server deploy build develop end screen spring mvc jsp html ajax jquery backbone marionette javascript css implement aws solution rds ebs elastic load balancer auto scaling group optimize developed pojo base programming model spring framework development business layer service spring core annotations dependency injection spring di spring mvc rest api s spring boot micro service setup support automate continuous integration utilize tool like jenkins shell scripts aws cli api responsive web design rwd develop framework like angular js typescript mvc framework bootstrap plan construct iterate contact management single page application custom rest api angularjs mongodb design develop application jsf face let ext js develop publish java web services pos service system use service web services web service extract client relate datum database wsdl xml soap build restful web services jax rs jersey write end look appearance screen javascript ajax angularjs jquery rail experience automation test case work prototyping implementation java node js aws slacker platform create advance sql script pl sql developer facilitate datum flow oracle create stored procedures oracle pl sql toad eclipse development testing debugging application framework log debug info error datum work create micro service api create docker files different micro service secure crt transfer file local system unix system performed test driven development tdd junit mockito quality center qc defect logging issue tracking environment windows xp design patterns aws java servlet html ajax javascript backbone jquery css struts spring spring boot hibernate restful api web services soap wsdl jax rs jersey json xml angular js reactjs ext js express js nodejs typescript sql pl sql toad oracle g docker maven jenkins junit mockito client state street corporation new york ny oct dec role sr java stack developer description state street corporation serve custodian investment company provide basic portfolio recordkeeping require investment company regulatory financial reporting purpose state street bank trust company serve mutual fund collective investment fund corporate public retirement plan insurance company foundation endowment investment pool investment manager worldwide responsibility involve phase software development life cycle sdlc requirement gathering analysis design development testing follow agile methodology implement route logic navigation screen screen implement login functionality client angularjs ui router bootstrap create rich responsive ui screens vary screen size device implement core feature angularjs framework dependency injection data bind filters directives templates services deep linking work javascript develop user interface build datum visualization monitor file server load web server speed datum processing js backbone js implement restful service datum service node js express develop application base main module spring mvc framework core container data access integration web implement different rest api user transactional framework cxf spring rest implement web service security oauth protocol implement dependency injection ioc feature spring framework inject bean user interface aop logging transaction management developed micro services provide restful api utilize spring mvc focus test driven development create detailed junit test mock service mockito implement microservice spring boot spring base microservice migrate spring base application cloud base microservices amazon sqs queue service reliable communication distribute software component micro service amazon sns push notification service send individual message mobile device user email recipient distribute user responsible maintain expand aws infrastructure aws ebs jenkins load jar file require run application maven building tool create war file deploy application server dependency management code application configured deploy application weblogic application server design database schema create complex sql query procedure create reading update delete datum oracle map business object database hibernate experience rdbms system include mysql postgresql develop server script shell customize git integrate tool jira jenkins involve production support monitor server error log foresee potential issues escalate high level environment jdk java spring xml mvc junit maven jax ws jenkins spring mvc framework spring aop spring security spring boot ajax javascript angularjs node js typescript git jar sts spring tool suite eclipse aws weblogic application server aws sns sqs cloud watch oracle g sql server client bailey trading los angeles sep role sr java stack developer description bailey trading company llc los angeles usa american international export trading company import export trade consultant american manufacturer foreign buyer distributor agent bailey trading organize client datum transaction history benefit reward web base portal name revolver cash flow issue card similar credit card client large small fleet organize datum portal datum representation carry rich graphical interpretation late ui technology responsibility involve requirement analysis design system incorporate requirement come design utilize exist system service communicate external service representative understanding report problem take account change update design poc prove party service credibility functionality involve develop web service component soap service implement rest web service utilize service expose newly implement functionality jax rs spring rest controller implement project structure base spring mvc pattern spring boot functionality implement spring io spring boot thymeleaf hibernate orm implement java ee component spring mvc spring ioc spring transaction spring security develop spring boot application write web service implement continuous delivery pipeline jenkins github awsami convert staging production environment handful ami single bare metal host run docker spring boot radically fast build cloud microservices develop spring base application configuration work aws high availability practices deploy backup restore infrastructure implement data layer cassandra database minimize dependency redundancy divide code layer service external service class inject spring di take event require app jms run activemq queue callable object implement multithreading parallel execution independent event wrote junit test case class follow test drive methodology implement content reading html read class apache poi jsoup respectively coordinate testing team bug report fix track ticket jira involve end design css javascript jquery create form collect validate datum user reactj maintain exist ui applications upgrade jquery ajax javascript react js backbone js json angularjs development framework build single page application involve implementation end service angularjs connect backend service incorporated error handle exception handling different layer generate custom exception code implement different level log system logger participate daily stand up sprint planning review meeting environment java spring spring boot spring io spring mvc aws angularjs reactjs spring rest junit apache poi jsoup tomcat activemq broker client jax rs maven cassandra soap rest wsdl windows eclipse luna client asd health care frisco tx nov april role java developer description project comprehensive integrated hospital management system super specialty hospital package computerize activity servicing system package contain module administration patient care system health services auxiliary services module have sub module sub module maintain store registering detail join patient detail overall day activity maintain particular database responsibility participate complete life cycle project analyze client requirement designing developing testing major involvement writing review design approach documents design architecture web module spring mvc framework implement design ui ajax framework build software groovy grails backend javascript angularjs frontend design rest xml web service handle ajax request apply mvc pattern ajax framework involve create controller implement classic javascript event handler implement flexible event model manage multiple event back implement spring mvc framework include write controller class handle request process form submission perform validation commons validator design develop java swing interface contact event mail information edit responsible integrate ajax spring service layer dwr direct web routing involve layer application like controller servlets service controller screening manager rule engine architecture jms spring involve set active mq message broker declare active mq message destination implement spring jms gateway support class base class jms gateway class wrote angularjs controller view service new website feature develop xml xml schema parser sax dom implement system oriented architecture methodology design develop business services spring framework dependency injection business delegate dao design patterns implement jndi object factory bean inject jndi object spring configuration setup fetch database connection configure mail sender java mail sender impl send email efficiently implement multithreading java concurrency utility performance improvement implement jta service handle transaction create conversation interceptor handle event implement hibernates polymorphic association refer instance subclass participate design datum base create table oracle conduct code review code standard sure good practice maintain development process maven build tool build application develop test requirement decompose functional requirement interact end user business analyst developer participate meeting internal developer group purpose development standard environment java spring servlets jsp ejb ajax xml angularjs restful maven css javascript ant rad sql oracle hibernate toad cvs websphere windows unix client ncc finance hyderabad april aug role java developer description ncc finance provide customize financial solution business government professional customer bank offer traditional lending depository product wide range international global cash management foreign exchange international trade finance derivative capital market service asset base lending real estate finance public finance commercial leasing syndicate finance responsibility responsible transform design mock up standard compliant html page xhtml css responsible create javascript code different module involve design user interface mainly focus ease access registration plan feature available website xhtml css javascript jquery extensively core spring framework dependency injections component develop configuration file mapping file annotations map pojo db table managing association class specific spring hibernate involve create new entity dao dto mapping database table involve design application base fa\u00e7ade dao singleton create high level design documents enhancement change control activity design develop application eclipse deploy code dev server unmarshalle response web service java objects test wsdl base soap service soap ui sql developer develop sql query store procedure oracle database g connectivity apache subversion svn repository input code update change focus improve readability utility overall ux preparation effort estimation schedule phase enhancement work allocation environment java jdbc oracle database junit svn repository jquery sql developer jboss application server xhtml html css jsp client barclays bank usa feb role junior java developer description barclays bank large private sector bank retail banking category bank offer service lend individual small business subject orientation product granularity criterion liability product card service internet banking atm service depository financial advisory service responsibility involve design development testing integration application implement business logic datum base connectivity client installation configuration project develop simple struts validation validation user input business logic initial datum loading co coordinated application testing help testing team write database query oracle write store procedure packages view cursors functions trigger sql end hibernate object relational mapping orm data persistence wrote sql command store procedures retrieve datum oracle database develop web service soap wsdl xml develop application singleton business delegate data transfer object design pattern project create implement oracle stored procedures functions triggers complex query sql work java messaging services jms reliable asynchronous communication logging svn version control ability quickly adjust priority project limited specification effective team player excellent logical analytical ability excellent write verbal communication skill inter personal skill self learn attitude environment java jsp spring soap web service soa javascript css xml jaxb xhtml xslt jms ajax hibernate oracle web sphere ant eclipse unix ms office education bachelor computer"
}