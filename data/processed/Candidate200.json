{
  "filename": "Candidate200.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate200.docx",
  "text": "Professional Summary\n8+ years of IT experience in Software Development Life Cycle (SDLC), Web Application Design, Development, Programming, Testing, Support Maintenance and End-User support.\nHands on exposure to different SDLC models like Waterfall, Agile and undergone the training in software Development Processes like SDLC, Test Driven Development (TDD) and Iterative Methodologies.\nWorked extensively on Spring MVC, Hibernate, Web Services, XML, MQ series, JMS and Message Driven Beans.\nExtensive work experience in Object Oriented Analysis and Design, Java/J2EE technologies including Servlets, JSP, JSON, JSF, JDBC, JPA, JSTL, HTML, HTML, HTML5, JavaScript, CSS, CSS3, Twitter Bootstrap, XML, JSON, XSL/XSLT, Angular JS, Node JS, React JS, Ext JS, AJAX, JQuery for developing server side applications and user interfaces in Windows and Unix Environments.\nExpertise in building web enterprise applications using Servlets/JSP\u2019s, Struts 2.x, Hibernate, JSF and Spring Framework features like Spring IOC, Spring MVC, Spring AOP, Spring DAO, Spring JDBC, Spring ORM, Spring Boot, Spring Batch, Spring Cloud, Spring Integrations and Spring Security.\nExperience with Service Oriented Architecture (SOA), development and deployment of Web Services using SOAP, WSDL and Restful Web services, Spring-RS.\nExperience in using DOM4J, JAXB, JAXP parsing and XML Bean to process, validate, parse and extract data from XML files.\nFamiliar in working with application servers and web servers like Web Sphere, Web Logic, Jboss and Apache Tomcat.\nWorked with different IDE\u2019s like Eclipse, Net Beans, JDeveloper, Data studio, Spring Tool Suite, IntelliJ and RAD.\nExtensive experience in working with different databases of RDBMS such as Oracle 9i/10g/11g, IBM DB2, SQL Server, MySQL, PL/SQL and NoSQL such as Cassandra, MongoDB. Writing Stored Procedures, Functions and Triggers for different Data Models.\nExperience with Core Java fundamentals such as Multithreading, Collections, Generics and Annotations.\nExtensive in-depth knowledge in OOAD concepts of Use Cases, Activity Diagrams, Sequence Diagrams and Class Diagrams using UML.\nExpertise in working with Windows, LINUX and UNIX, Shell Scripting and version control tools like CVS, SVN, GitHub.\nGood Experience in developing test cases with Junit, Groovy, Mockito and logging with Log4j. Used JIRA for bug tracking and issue tracking.\nHighly motivated team player with strong communication, analytical, documentation and organizational skills.\nMajor strengths are familiarity with multiple software systems, ability to learn quickly new technologies, adapt to new environments.\nTECHNICAL SKILLS\nEDUCATIONAL DETAILS:\nBachelor of Technology in Computer Science and Engineering\nPROFESSIONAL EXPERIENCE:\nClient: Anixter Inc, Glenview, IL\t\t\t\t\t\t     Jan 2017 \u2013 Present\nRole: Sr. Java/UI Developer\nDescription: My role in Information Services (IS Dept) is to analyze & resolve requirements for Order Entry (OE), Order Management (OM) and Store Front System. OE, OM & Store Front application is to help & guide sales team to serve Anixter clients for cable parts & shipping. The application in production since August 2017, and is being implemented in phases to sales locations across United States and Canada.\u00a0\nResponsibilities:\u00a0\nInvolved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and followed Agile methodology (SCRUM) with daily standup meetings to keep track of project status and used JIRA/Confluence to communicate status and estimates.  \nDesigned dynamic and multi-browser compatible pages using HTML5, JavaScript, Angular 2, and responsive interfaces using Bootstrap, styling using CSS 3 for better user interface experience.\nUsed JSF for bean management in OE application and Icefaces framework extensively for implementing rich interfaces.\nImplemented data grid/tables using\u00a0Angular 2, jQuery and Used for front end form validation. Bootstrap for front-end client facing single page applications(SPA).\nUsed Spring Framework (MVC, IOC, AOP) to manage project classes. Modified Spring config.xml for bean dependency injection & auto wiring.\nImplemented various Spring beans & Impl classes to meet business requirements. Implemented validation using JSR 303 specifications.\nUsed Spring Boot for building Microservices\u00a0and developed Spring based application radically faster with very less configuration.\nUsed Spring WS to implement RESTful web services.\nSecured REST API\u2019s by implementing Oauth 2.0 token based authentication/authorization scheme using Spring security.\nUsed JAX-WS to develop Soap web services.\nDeveloped Application to asses JSON and XML from RESTful web service from consumer side using JavaScript, AJAX, Angular\u00a02 and tested different front-end forms using them.\nCreated Spring Batches for running batch jobs and documented the use of Spring Batch.\nIntegrated\u00a0RabbitMQ\u00a0and Spring JMS API to send and receive messages from RESTful APIs.\nDeveloped RESTful web services using JAX-RS and Jersey as the implementation for fetching the data from Database.\nDeveloped session EJB and message driven bean (MDB) to process JMS XML messages.\nUtilized Hibernate reverse engineering to create an automated process that generated hundreds of Java POJO entities from database.\nExtensively used Hibernate mapping, HQL, EH Cache, Query, Criteria, Transactions and Locking.\u00a0\nWorked on MongoDB\u00a0database concepts such as locking, transactions, indexes, Sharding, replication, schema design, etc.\nWritten and executed several stored procedures, triggers, packages, views and functions using DB2 Data Studio.\nPerformed Unit Testing using Junit, Mockito frameworks for all the migrated modules to ensure complete code coverage and perform Smoke test after each build.\nPreviously used Tortoise SVN and migrated to GitHub for source code maintenance.\u00a0\nUsing Maven build tool to build and deploy the application.\nWorked on\u00a0Swagger\u00a0API and auto-generated documentation for all REST calls.\u00a0\nUsed HP ALM for application lifecycle management & requirements and shifted to JIRA.\nENVIRONMENT:  Java, Eclipse 4.x, HTML5, CSS3, Bootstrap, JSF 2.x, Icefaces 3.x, JavaScript, Angular JS, jQuery, Ajax, JSON, XML, JAXB, IBM WAS 8.5.5, Soap, RESTful Web Services, JDBC, JSP, JMS, Jersey, Spring Boot(Microservices), Spring (MVC, AOP, Security), OAuth 2.0, DB2 Data Studio, MongoDB, Hibernate, Log4J, JUnit, Swagger,  Mockito, Maven 3.x, VMWare, HP Application Life cycle (QC), Tortoise SVN, JIRA, GIT and JBoss.\nClient: Johnson Controls, Milwaukee, WI\t\t\t\t              Aug 2015 \u2013 Dec 2016\nRole: Sr. Java/UI Developer\nDescription: Johnson\u00a0Controls\u00a0is a global technology and industrial leader serving customers in more than 150 countries and specialize in the following areas:\u00a0Building efficiency, Batteries and energy storage. Supplier Invoice Router (SIR) is a custom application build to route Supplier Invoices to different JCI ERP System. The SIR Service component reads Invoices from Message Queue (MQ), applies routing rules and routes Invoices to the appropriate ERP System. The SIR UI component is a web based form which is used by the users to correct Invoices that are in exception state in the system.\u00a0\nResponsibilities:\nDeveloped and Implemented Web Services and used Spring Framework.\u00a0\nDatabase design and implementation of backend logic in DAO classes & iBatis SQL mapping.\u00a0\nExtensive experience using framework APIs like Struts, Spring, iBatis and Hibernate.\u00a0\nConfigured Struts, Hibernate framework with Spring MVC.\u00a0\nDeveloped user interfaces using JSP, JSF frame work with AJAX,\u00a0Java\u00a0Script, HTML, DHTML, CSS, Bootstrap and java scripts frame work like Angular JS, Node JS, Backbone JS, Ext JS and JQuery. \nInvolved in creation of web services, WSDL and web methods with Annotation in hibernate, Used the spring container for data source and to load the Hibernate specific classes.\u00a0\nInvolved in developing the UI panels using JSF, XHTML, CSS, JSON, DOJO and JQuery.\u00a0\nCreated applications, connection pools, deployment of JSPs, Servlets and EJBs in WebSphere.\u00a0\nDeveloped the Presentation and Controller layers using JSP, HTML,\u00a0Java\u00a0Script, Business layer using\u00a0Spring (MVC, IOC, AOP, Batch), DTO and Persistent layer DAO, Hibernate for all modules.\u00a0\nSingle sign-on\u00a0(SSO) and multi-factor\u00a0authentication with this property a user\u00a0logs in\u00a0with a single ID and password to gain access to a connected system or systems without using different usernames or passwords, or in some configurations seamlessly sign on at each system.\nIntegrated Spring Security, SAML\u00a02.0 and OAuth for single sign on for a different audience.\u00a0\nDesigned and developed\u00a0Microservices\u00a0business components using Spring Boot.\u00a0 Consumed REST based\u00a0Microservices\u00a0with Rest template based on RESTful APIs.\u00a0\nWritten and executed stored-procedures DB2.\u00a0\u00a0\nAutomate test cases using the built in framework in Selenium Web Driver using Netbeans RCP IDE.\u00a0\nInvolved in creating unit testing of various layers using JUnit and created automated test scripts for integration testing using selenium.\u00a0\nUsage of version\u00a0control\u00a0repository SVN, JIRA/ Quality Center for ticketing and Jenkins for nightly build.\nDesigned the front end using\u00a0Java\u00a0Applets and Swing, as well as JSP.\u00a0\nDeveloped the different components of application such as JSPs, Servlets.\nCreated SQL queries, PL/SQL Stored Procedures, Functions for the Database layer by studying the required business objects and validating them with Stored Procedures using SQL Server.\nWritten and executed stored-procedures on SQL SERVER back-end through JDBC API.\nUsed TOAD for database query testing, in the process of optimizing the queries.\u00a0\nUsed Visual Source Safe (VSS) for source code maintenance.\u00a0\nExpertise in employing Water Fall Model and best practices for software development.\u00a0\nAuto-Generation of client side code using APACHE AXIS2 with JAXB-RI binding.\nUsed Ant for developing build scripts and deploying the application onto WebLogic.\u00a0\nDeployed and tested the application on Weblogic7.0 in windows and Unix environment.\u00a0\nENVIRONMENT:  Java\u00a0(JDK 1.7), Spring, iBatis, Struts, Hibernate, JSF, EJB, APACHE AXIS2, WSDL, JQuery, JSP, SERVLET, Microservices, MYSQL, Toad, SQL Server, SSO, SAML, OAuth, UML, Netbeans, Selenium, ANT, Xml, JIRA, SWING, SVN, VSS, Jenkins, Weblogic, Water fall model.\nClient: ADP, Phoenix, AZ\t\t\t\t                            \t    Sep 2014 \u2013 Jul 2015\nRole: Sr. Java Developer\nDescription: This project is about user to approve or reject his own message. Users can assign tasks to other groups or other person based upon his authorization to particular resource. The system allows user to create events in their calendar. Users get their messages from integrated apps and will be visible to them. They can take action to their message.\u00a0\nResponsibilities:\nDesigned and coded application components in an Agile environment utilizing a test driven development and SDET approach and pair-programming. \nDeveloped the application using Spring framework (MVC, IOC, AOP, Batch), DTO that leverages model view layer architecture, also configured Dependency Injection. \nUsed SOAP based web services from scratch to develop interfaces to integrate between front end systems and back end systems. \nDesigned and developed the XSD for WSDL. \nUsed Spring Security to provide authentication, authorization, and access-control features for this application. \nDeveloped user interface using JSP, JSP Tag libraries JSTL, HTML5, CSS3, JavaScript, Angular JS, Node JS, JSON to simplify the complexities of the application \nUsed Spring MVC framework for developing web application \nUsed OAuth for service layer security.\nUsed\u00a0SAML\u00a0to implement authentication and authorization scenarios.\nImplemented the debugging functionality in an application by using Apache LOG4J framework. \nUsed JMS for the asynchronous exchange of critical business data and events among J2EE components and legacy system. \nDesigned and developed the application using Java Server Faces (JSF) framework. \nDeveloped User Interface in JSP, JavaScript and HTML with Backbone JS Framework. \nDesigned and developed RESTful style Web Service layer using\u00a0Spring\u00a0boot,\u00a0and WSDL. \nRefactored\u00a0Microservice\u00a0to make it RESTful, thread-safe, and more configurable.\u00a0\nImplemented a generic interface to Hibernate criteria API for UI search functionality. \nDeveloped SQL, PL/SQL, stored procedures along with database application scripts. \nDeployment of web, enterprise java components, messaging components and multi-threading. \nWorked on automating data loading, extraction, reports generation using UNIX\u00a0Shell\u00a0scripting.\nDeveloped XML Schemas - XSD, DTD for the validation of XML documents, also used Subversion. \nXML (SAX and DOM API, JDOM), XSLT was used for informative view. \nUsed XML web services using SOAP to transfer the amount to transfer application. \nUsed SWING for GUI based coding.\nWritten unit test cases using JUnit and Groovy framework. \nEnvironment: Java\u00a0(JDK 1.7), J2EE, JSP, PL/SQL, Spring, EJB, MAVEN, JMS, JNDI, Oracle, XML, DOM, SOAP, Spring Framework security using LDAP, JUnit, Mockito, OAuth, SAML, Apache Camel, JSF, Angular JS, JSON WebSphere, Hibernate, Microservices, JDBC, Shell\u00a0scripting, RESTful APIs, WebLogic, Jboss, SOA, Tomcat.\nClient: T-Mobile, Bothell, WA\t\t\t\t\t\t Dec 2012 \u2013 Aug 2014    \nRole: Sr. Java Developer\nDescription: Voice Online Manager Application (VOM) is a product designed to allow the customers to easily monitor their entire telephone account through a single point of online access. Customers will be able to access their home telephone call logs, manage telephone settings, manage voicemail settings and check new voice messages from one source.\u00a0\n\nResponsibilities:\u00a0\nActively participated in all phases of SDLC, Requirements gathering, design & Analysis, development, testing, deployment and bug fixing of an application.\nImplemented the frontend and developed UI screens using Spring MVC framework, Hibernate ORM Module, TDD, Spring Core Module, XML, JSP and XSLT.\u00a0\nWorked on the Spring framework like Spring IOC and Spring DAO.\u00a0\nImplemented Spring MVC, dependency Injection (DI) and aspect oriented programming (AOP) features along with Hibernate.\u00a0\nUsed Core Spring framework for dependency injection and Spring Context to add support for message sources and i18n internationalization.\u00a0\nUsed ORM to integrate with the Hibernate and used the hibernate template to implement the business logic.\u00a0\nCreated Database Tables, Sequences and wrote hibernate mapping files and POJO class.\u00a0\nUsed Hibernate tools to interact with the database.\u00a0\nImplement the presentation layer (GUI), based on open source framework, using Angular JS, HTML, HTML 5, JSP, JSTL, CSS, CSS 3, HTML, JavaScript and Beans.\u00a0\nJQuery library, Backbone JS and Angular JS has been used for creation of powerful dynamic Web Pages and web applications by using its advanced and cross browser functionality.\u00a0\nDeveloped flow using AJAX partial page refresh, validation and dynamic drop down list.\u00a0\nReviewed the XML logical data model and developed XML schema (XSD) to validate the model and used Jax-B for Xml-Java\u00a0Mapping and Xml-Xslt conversion.\u00a0\nDeveloped client side code to consume Web Service provided by third party vendors to receive employee information using Axis, XML, WSDL, SOAP.\u00a0\nSingle Sign-Off\u00a0and multi-factor\u00a0authentication is used whereby a single action of signing out terminates access to multiple software systems.\nWorked on SOAP and JAX-RS for Restful Web Services.\u00a0\nImplemented UNIX\u00a0shell\u00a0script for document storage validation & deletion.\u00a0\nUsed best practices and design patterns Singleton, Template, Strategy, etc.\u00a0\nImplemented\u00a0Java\u00a0Message Services (JMS) using JMS API.\u00a0\nImplemented Maven build tools to build jar and war files and deployed war files to target servers.\u00a0\nDeveloped AJAX functionalities using frameworks like JSON, DOJO and JQuery.\u00a0\nUsed Tortoise SVN for version control and Eclipse RCP for application development.\u00a0\nUsed log4j to audit, assign, track, and report the issues in the application.\u00a0\nDeployed the application on Web Sphere Application Server.\u00a0\nDeveloped JUnit test cases using Mockito.\nInvolved in functional testing and integration testing.\u00a0\nScrum methodology is used in developing the product. Attended regular scrum meetings for feedbacks and design changes.\u00a0\nEnvironment:\u00a0Java\u00a0(JDK 1.6), J2EE, Eclipse RCP, Spring, Hibernate, SSO, Web Services (REST APIs & SOAP), WebSphere, Tortoise SVN, Maven, HTML, CSS3, Servlets, Angular JS, Backbone JS, AJAX, JQuery, Java\u00a0Script, JMS, Shell\u00a0script, Oracle 10g, Agile, Bootstrap and Windows 7.\nClient: Silicon SA Insurance\t\t\t                            Oct 2011 \u2013 Nov 2012                  \nJava Developer\nDescription: Silicon SA Insurance is one of the largest mutual life insurance companies. Silicon SA sells a variety of products including Personal insurance, Family insurance, House insurance and Motor insurance. The project involves developing online management tool in order to get 24/7 access to their policies, to check the status of it, reviewing and updating the information and also to find the most up-to-date information available from the database.\nResponsibilities:\nImplemented front end (UI) of the application using HTML5, CSS, Angular JS and Node Js.\nDesigned and developed very complex and large web pages using AngularJS library with AJAX and JSON. \nDesigned JSP pages for Initial applications, Submissions and Maintenance Involved in implementing Message Driven Beans using for JMS systems.\nDeveloped session EJB and message driven bean (MDB) to process JMS XML messages.\nJSPs, Servlets, XML descriptors, using WebSphere Application Server.\nStreamlined the time bound nightly batches for concurrent processing on various nodes within a cluster using Spring Batch.\nUsed struts validation framework to perform Server side validations.\nUsed\u00a0SAML\u00a0to implement authentication and authorization scenarios.\nDeveloped Spring service classes for Initial applications and Maintenance module to implement business logic requirements.\nExternal customer portal is developed in annotation based Spring MVC and Hibernate.\nDesigned and Developed End to End customer self service module using annotation based Spring MVC, Hibernate, JSP and JQuery.\nInvolved in integrating applications with other application using IBM WebSphere.\nInvolved in generating Hibernate Configurations files, Hibernate mapping files and Hibernate data Objects to communicate data in persistence layer.\nWorked on Database Stored Procedures and Functions, views and Synonyms.\nImplemented Java & J2EE design patterns.\nResponsible to prepare Unit test scripts using JUnit.\nEnvironment: Java 1.6, JSP, Spring4.x, Spring MVC, Spring Batch, Hibernate, IBM WebSphere, WebLogic application server8.1, JMS, MySQL, SAML, Eclipse RCP, CVS, Angular JS, Node JS, HTML, CSS, JSON, JUnit, AJAX, Maven.\nClient: Barclays Bank\t\t\t      \t                             Jun 2009 \u2013 Sep 2011                  \nJava Developer\nDescription: Barclays Bank provides banking services. It provides Business services like checking accounts, saving accounts and loan services to the clients. The Mortgage calculator provides accurate monthly mortgage payment estimations instantly after users provide basic information like loan amount, down payment, interest rate, loan term, start and end date and property tax rate. Users can also set duration of the fixed interest rate and extra payment to be added each month to get a more flexible payment plan. Graphics including Tables and charts are provided by the project to help clients better understand the payment plan.\nResponsibilities: \nUsed Test-Driven Development with SCRUM Agile methodology and involved in all the business meetings and status update meetings as a part of SCRUM.\nInvolved in the full software development life cycle of the project from analysis and design to testing and deployment. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality, such as portfolio summary and user information. \nPainted UML including Use case diagram, Class diagram, Sequence diagram and Data flow diagram. \nDesign E-R graphs and relationship among different database tables, Created tables with low coupling. \nWritten Form beans for the UI form validation and Action classes for the application flow.\nInvolved in writing the code for server side validations using Struts Validator Framework.\nImplemented asynchronous calls from UI using AJAX.\nWrote PL/SQL Queries, stored procedures, triggers and prepared statements. \nImplemented Spring Security to provide authentication, authorization, and access-control for this application. \nConfigured Spring Cache to cache the results of methods that were frequently called by users or systems. \nDeveloped graphical user interface by using JSP, JSON, HTML5, CSS3, JavaScript/jQuery, and AJAX calls. \nImplemented user input validations using JavaScript and jQuery. \nUsing Angular.js to implement data binding, Module loading. \nImplemented web page responsive design using Bootstrap. \nInspected and debugged front-end code with FireBug.\nAble to create complex\u00a0JIRA\u00a0workflows including project workflows, screen schemes, permission scheme and notification schemes in\u00a0JIRA.\nUsed JIRA and Log4J for project management, tracking and monitoring errors. \nDeveloped test cases and performed unit test using JUnit Framework. \nUsed GitHub for code repository and version control and worked with Stash. \nBuild code using Eclipse and deploy it using JBoss fuse.\nUsing MySQL to develop database.\nEnvironment:\u00a0Spring, Hibernate, JavaScript, CSS/CSS3, AJAX, HTML/HTML5, JSON, PL/SQL, JDBC, Web Services, Eclipse, Struts, JUnit, iBatis, Scrum, JSP, IBM Websphere, MySQL, Jira, JBoss, Stash, GitHub.",
  "size_bytes": 46484,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:40.323147",
  "clean_text": "professional summary year experience software development life cycle sdlc web application design development programming testing support maintenance end user support hand exposure different sdlc model like waterfall agile undergo training software development processes like sdlc test driven development tdd iterative methodologies work extensively spring mvc hibernate web services xml mq series jms message driven beans extensive work experience object oriented analysis design java technology include servlets jsp json jsf jdbc jpa jstl html html javascript css twitter bootstrap xml json xsl xslt angular js node js react js ext js ajax jquery develop server application user interface windows unix environments expertise building web enterprise application servlets jsp struts hibernate jsf spring framework feature like spring ioc spring mvc spring aop spring dao spring jdbc spring orm spring boot spring batch spring cloud spring integrations spring security experience service oriented architecture soa development deployment web services soap wsdl restful web service spring rs experience jaxb jaxp parsing xml bean process validate parse extract datum xml file familiar work application server web server like web sphere web logic jboss apache tomcat work different ide like eclipse net beans jdeveloper data studio spring tool suite intellij rad extensive experience work different database rdbms oracle g ibm sql server mysql pl sql nosql cassandra mongodb write stored procedures functions triggers different data model experience core java fundamental multithreading collections generics annotations extensive depth knowledge ooad concept use cases activity diagrams sequence diagrams class diagrams uml expertise work windows linux unix shell scripting version control tool like cvs svn github good experience develop test case junit groovy mockito log jira bug tracking issue tracking highly motivated team player strong communication analytical documentation organizational skill major strength familiarity multiple software system ability learn quickly new technology adapt new environment technical skills educational details bachelor technology computer science engineering professional experience client anixter inc glenview il jan present role sr java ui developer description role information services dept analyze resolve requirement order entry oe order management om store system oe om store application help guide sale team serve anixter client cable part shipping application production august implement phase sale location united states canada responsibility involve analysis specification design implementation testing phase software development life cycle sdlc follow agile methodology scrum daily standup meeting track project status jira confluence communicate status estimate design dynamic multi browser compatible page javascript angular responsive interface bootstrap styling css well user interface experience jsf bean management oe application iceface framework extensively implement rich interface implement data grid table angular jquery end form validation bootstrap end client face single page spring framework mvc ioc aop manage project class modify spring bean dependency injection auto wiring implement spring bean impl class meet business requirement implement validation jsr specification spring boot build microservice develop spring base application radically fast configuration spring ws implement restful web service secured rest api implement oauth token base authentication authorization scheme spring security jax ws develop soap web service develop application asses json xml restful web service consumer javascript ajax angular test different end form create spring batches run batch job document use spring batch integrated rabbitmq spring jms api send receive message restful api develop restful web service jax rs jersey implementation fetch datum database develop session ejb message drive bean mdb process jms xml message utilize hibernate reverse engineering create automate process generate hundred java pojo entity database extensively hibernate mapping hql eh cache query criteria transactions locking work mongodb database concept locking transaction index sharding replication schema design etc write execute store procedure trigger package view function data studio performed unit testing junit mockito framework migrate module ensure complete code coverage perform smoke test build previously tortoise svn migrate github source code maintenance maven build tool build deploy application work swagger api auto generate documentation rest call hp alm application lifecycle management requirement shift jira environment java eclipse bootstrap jsf iceface javascript angular js jquery ajax json xml jaxb ibm soap restful web services jdbc jsp jms jersey spring spring mvc aop security oauth data studio mongodb hibernate junit swagger mockito maven vmware hp application life cycle qc tortoise svn jira git jboss client johnson controls milwaukee wi aug dec role sr java ui developer description johnson controls global technology industrial leader serve customer country specialize following area build efficiency batteries energy storage supplier invoice router sir custom application build route supplier invoices different jci erp system sir service component read invoices message queue mq apply route rule route invoice appropriate erp system sir ui component web base form user correct invoices exception state system responsibility develop implement web services spring framework database design implementation backend logic dao class ibatis sql mapping extensive experience framework api like struts spring ibatis hibernate configured strut hibernate framework spring mvc develop user interface jsp jsf frame work ajax java script html dhtml css bootstrap java script frame work like angular js node js backbone js ext js jquery involve creation web service wsdl web method annotation hibernate spring container datum source load hibernate specific class involve develop ui panel jsf xhtml css json dojo jquery create application connection pool deployment jsp servlets ejbs websphere develop presentation controller layer jsp html java script business layer spring mvc ioc aop batch dto persistent layer dao hibernate module single sign sso multi factor authentication property user log single id password gain access connected system system different username password configuration seamlessly sign system integrated spring security saml oauth single sign different audience design develop microservices business component spring boot consume rest base microservices rest template base restful api write execute store procedure automate test case build framework selenium web driver netbeans rcp ide involve create unit testing layer junit create automated test script integration testing selenium usage version control repository svn quality center ticketing jenkins nightly build design end java applets swing jsp develop different component application jsp servlets create sql query pl sql stored procedures functions database layer study require business object validate store procedure sql server write execute store procedure sql server end jdbc api toad database query testing process optimize query visual source safe vss source code maintenance expertise employ water fall model good practice software development auto generation client code apache jaxb ri binding ant develop build script deploy application weblogic deploy test application window unix environment environment java jdk spring ibatis strut hibernate jsf ejb apache wsdl jquery jsp servlet microservices mysql toad sql server sso saml oauth uml netbeans selenium ant xml jira swing svn vss jenkins weblogic water fall model client adp phoenix az sep jul role sr java developer description project user approve reject message user assign task group person base authorization particular resource system allow user create event calendar user message integrated app visible action message responsibility design code application component agile environment utilize test drive development sdet approach pair programming develop application spring framework mvc ioc aop batch dto leverage model view layer architecture configure dependency injection soap base web service scratch develop interface integrate end system end system design develop xsd wsdl spring security provide authentication authorization access control feature application develop user interface jsp jsp tag library jstl javascript angular js node js json simplify complexity application spring mvc framework develop web application oauth service layer security saml implement authentication authorization scenario implement debug functionality application apache framework jms asynchronous exchange critical business datum event component legacy system design develop application java server faces jsf framework develop user interface jsp javascript html backbone js framework design develop restful style web service layer spring boot wsdl refactored microservice restful thread safe configurable implement generic interface hibernate criterion api ui search functionality develop sql pl sql store procedure database application script deployment web enterprise java component message component multi threading work automate datum loading extraction report generation unix shell scripting develop xml schemas xsd dtd validation xml document subversion xml sax dom api jdom xslt informative view xml web service soap transfer transfer application swing gui base coding write unit test case junit groovy framework environment java jdk jsp pl sql spring ejb maven jms jndi oracle xml dom soap spring framework security ldap junit mockito oauth saml apache camel jsf angular js json websphere hibernate microservices jdbc shell scripting restful api weblogic jboss soa tomcat client t mobile bothell wa dec aug role sr java developer description voice online manager application vom product design allow customer easily monitor entire telephone account single point online access customer able access home telephone log manage telephone setting manage voicemail setting check new voice message source responsibility actively participate phase sdlc requirements gathering design analysis development testing deployment bug fixing application implement frontend develop ui screen spring mvc framework hibernate orm module tdd spring core module xml jsp xslt work spring framework like spring ioc spring dao implement spring mvc dependency injection di aspect orient programming aop feature hibernate core spring framework dependency injection spring context add support message source internationalization orm integrate hibernate hibernate template implement business logic create database tables sequences write hibernate mapping file pojo class hibernate tool interact database implement presentation layer gui base open source framework angular js html html jsp jstl css css html javascript beans jquery library backbone js angular js creation powerful dynamic web pages web application advanced cross browser functionality develop flow ajax partial page refresh validation dynamic drop list review xml logical data model develop xml schema xsd validate model jax b xml java mapping xml xslt conversion develop client code consume web service provide party vendor receive employee information axis xml wsdl soap single sign multi factor authentication single action sign terminate access multiple software system work soap jax rs restful web services implement unix shell script document storage validation deletion good practice design pattern singleton template strategy etc implement java message services jms jms api implement maven build tool build jar war file deploy war file target server develop ajax functionality framework like json dojo jquery tortoise svn version control eclipse rcp application development audit assign track report issue application deploy application web sphere application server develop junit test case mockito involve functional testing integration testing scrum methodology develop product attend regular scrum meeting feedback design change environment java jdk eclipse rcp spring hibernate sso web services rest api soap websphere tortoise svn maven html servlets angular js backbone js ajax jquery java script jms shell script oracle g agile bootstrap windows client silicon sa insurance oct nov java developer description silicon sa insurance large mutual life insurance company silicon sa sell variety product include personal insurance family insurance house insurance motor insurance project involve develop online management tool order access policy check status review update information find date information available database responsibility implement end ui application css angular js node js design develop complex large web page angularjs library ajax json design jsp page initial application submissions maintenance involve implement message driven beans jms system develop session ejb message drive bean mdb process jms xml message jsp servlets xml descriptor websphere application server streamline time bind nightly batch concurrent processing node cluster spring batch strut validation framework perform server validation saml implement authentication authorization scenario develop spring service class initial application maintenance module implement business logic requirement external customer portal develop annotation base spring mvc hibernate design develop end end customer self service module annotation base spring mvc hibernate jsp jquery involve integrate application application ibm websphere involve generate hibernate configurations file hibernate mapping file hibernate datum object communicate datum persistence layer work database store procedures functions view synonyms implement java design pattern responsible prepare unit test script junit environment java jsp spring mvc spring batch hibernate ibm websphere weblogic application jms mysql saml eclipse rcp cvs angular js node js html css json junit ajax maven client barclays bank jun sep java developer description barclays bank provide banking service provide business service like check account save account loan service client mortgage calculator provide accurate monthly mortgage payment estimation instantly user provide basic information like loan payment interest rate loan term start end date property tax rate user set duration fix interest rate extra payment add month flexible payment plan graphic include tables chart provide project help client well understand payment plan responsibility test driven development scrum agile methodology involve business meeting status update meeting scrum involve software development life cycle project analysis design testing deployment extensive use core java collections generics exception handling design patterns functionality portfolio summary user information paint uml include use case diagram class diagram sequence diagram data flow diagram design e r graph relationship different database table create table low coupling write form bean ui form validation action class application flow involve write code server validation struts validator framework implement asynchronous call ui ajax wrote pl sql queries store procedure trigger prepared statement implement spring security provide authentication authorization access control application configured spring cache cache result method frequently call user system develop graphical user interface jsp json javascript jquery ajax call implement user input validation javascript jquery implement datum bind module loading implement web page responsive design bootstrap inspect debug end code firebug able create complex jira workflow include project workflow screen scheme permission scheme notification scheme jira jira project management tracking monitor error develop test case perform unit test junit framework github code repository version control work stash build code eclipse deploy jboss fuse mysql develop database environment spring hibernate javascript css ajax html json pl sql jdbc web services eclipse struts junit ibatis scrum jsp ibm websphere mysql jira jboss stash github"
}