{
  "filename": "Candidate82.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate82.docx",
  "text": "                                                                 Candidate82                                   \n    Email: candidate82.java3@gmail.com                                                                     Phone: 513-601-8654\nFull stack developer with over 8 years of IT experience including user interaction, requirement analysis, design, development, testing, configuration, client interaction, and support.\n Professional Summary:\nSkilled in Object Oriented Analysis and Design (OOAD) and extensively worked with open source technologies \u2013 Struts, Spring, Hibernate frameworks, Log4j, Junit.\nProficiency in various components in Spring \u2013 IOC, AOP, JDBC, OXM, RestTemplate, MVC. \nGood experience in implementing the design patterns like Singleton, Session Facade, Business Delegate, Service Locator, Front Controller and Data Access Objects (DAO), etc.\nProficiency in various web based technologies like HTML, DHTML, ReactJS, JavaScript, Ajax, Tiles.\nExperience in adding dynamic functionality to web pages using JavaScript, jQuery, NodeJS and AngularJS.\nExcellent experience in software development life cycle (SDLC).\nExperience on installing the Mongo DB in Windows environment with adding arbiter to replica sets as well with development.\nHands on experience with Apache Infinispan cache.\nExperience with and solid understanding of Micro Services and implemented client-server business applications using Micro Services.\nWell versed working with Relational Data Base Management Systems as Oracle 9i/10g, MS SQL server, DB2, MySQL, Mongo DB, NoSQL Cassandra and developed SQL scripts and PL/SQL (queries, functions, procedures and triggers, profiles and users) on oracle database.\nWorked extensively on various flavors of UNIX\u00a0operating system like Linux.\nExperience working with\u00a0IBM\u00a0MQ (Message queue) and JMS\u00a0for asynchronous mode of communications.\nExperience working with multiple Servers \u2013 IBM Web Sphere, Oracle WebLogic, JBoss, Apache Tomcat.\nGood Experience in using test driven JS tools like Jasmine.\nExcellent experience in developing Web Services with Python\u00a0programming language.\nSkilled at building applications based on SOA architecture in IBM Integration Designer.\nStrong exposure to Web 2.0 client technologies using JSP, JSTL, XHTML, DOM, CSS, JavaScript and Ajax.\nExperience in working with the Collections framework and Multi-threading.\u00a0\nExperience in Manual and Automated testing using Selenium.\nHaving experience with Cloud Computing environment like Amazon Web Services(AWS).\nPerformed Requirement elicitation by gathering functional and non-functional requirement.\nStrong application development in\u00a0WebSphere Portal,\u00a0JSR 168\u00a0Specification integrated with Spring Portlet\u00a0and\u00a0Hibernate.\nExperience in implementing RESTful and SOAP based Web Services using Top down Approach and Bottom up Approach.\nHands on experience in building and deploying tools like ANT and MAVEN as well as version control using GIT, SVN/Subversion, Rational Clear Case, CVS and VSS.\nWorking knowledge of XML related technologies \u2013 XML, XSL, XSDs, DTD, JAXP (SAX, DOM), JAXB.\nExperience using\u00a0JMS Integration Framework\u00a0which reduces complexity of\u00a0JMS\u00a0API using\u00a0Spring Integration\u00a0with\u00a0MQ.\nTechnical Skills:\nProfessional Experience:\nCenterPoint Energy, TX\t\t\t\t\t\t    \t\tJan 2016 - Present\nJAVA DEVELOPER\nProject Summary: The project focus on making it easier to collect energy consumption data from utility companies that is required to analyze energy usage and to deploy a new Market Transaction Management solution on top of Customer Care and Billing which maintains the request and response messages for, Enrollment requests and generating the Monthly and Historical Usages.\nResponsibilities:\nParticipated in and contributed to team demos, peer reviews, team retrospectives, and daily standups for the development of the application.\nCreated technical design documents using class and sequence diagrams for feature processing flows and data insertion.\nDesigned and developed new code for features based on Standard SF Design Patterns, SOC design principles, Single Responsibility and Reusability Principles.\nUsed Java\u00a0Message Service (JMS) for asynchronous exchange of information between systems.\nInvolved in implementing JUnit Test Cases.\nUsed AJAX for implementing part of the functionality for Customer Registration, View Customer information modules.\u00a0\nDeveloped API for using AWS\u00a0Lambda to manage the servers and run the code in the AWS\nApplication deployment, Migrating data and application to AWS\u00a0Platform.\nDesigned dynamic client-side JavaScript, codes to build web forms and simulate process for web application, page navigation and form validation.\nIntegrating Oracle\u00a0CC&B with various business critical systems such as Financial Ledgers System.\u00a0\nDeveloped UPK simulations for CC&B Overview and Navigation courses.\nDevised and established high level architecture for the release feature processing and data insertion into the calculation and workpaper tables. \nExperience in using distributed database NoSql Cassandra\u00a0to manage large amounts of structured data.\u00a0\nUsed React JS for templating for faster compilation and developing reusable components.\nBuilt RESTful Web services using MVC architecture style.\u00a0\nAssigned Roles and Policies to Users, Security Groups by using Identity and Access Management(IAM) and implemented Multi Factor Authentication(MFA)\u00a0to provide additional security to\u00a0account and its resources.\nCreated JMS\u00a0consumer to process RESTful over JMS\u00a0messages.\nConfigured AWS S3 versioning and lifecycle policies to and backup service requests and archive files.\nConfigured Elastic Load Balancers (ELB) with AWS EC2\u00a0Autoscaling groups.\u00a0\nCreated monitors, alarms and notifications for\u00a0AWS EC2\u00a0hosts using Cloud Watch.\nUsed second level cache\u00a0to enhance performance and proper memory management.\nUsed pureQuery interface to access relational databases using pureQuery Runtime and Java annotations and by using Merge(upsert) Statements and sequence objects.\nUsed a Micro Service architecture,\u00a0interacting through a combination of REST and MQ and leveraging AWS to build, test and deploy Identity Micro Services.\n Used EC2 as virtual servers to host GIT, Jenkins and configuration management tool like Chef\nMultithreading\u00a0was used to perform various tasks simultaneously like scraping the data and formatting the data at the same time as huge amount of data was processed at the same time it was getting scraped.\u00a0\nTuned and recorded performance of\u00a0NoSql Cassandra\u00a0clusters by altering the JVM parameters.\u00a0\nQueried and analyzed data from\u00a0NoSql Cassandra\u00a0for quick searching, sorting and grouping.\nDeveloped new and existing calculation setup, edit and review UI modules using JSP and JQuery for analysts to manage new and existing calculations.\nConfigured Spark streaming to receive real time data from the Kafka and store the stream data to NoSql Cassandra\u00a0using Spark, Java and Scala\u00a0\nImplemented AngularJS and Node JS\u00a0with Spring MVC as model component.\nConducted tests for applications developed in Angular JS using Jasmine and Protractor.\u00a0\nInvolved in BDD (Behavior Driven Development) using JBehave and Jasmine Framework.\nMonitored the performance of DAO calls and host components calls using Jamon and corrected performance when required for faster processing of usage records.\nImplementing Selenium\u00a0testing platform and using test scripts with Eclipse IDE.\nWorked to increase the quality of the source code to meet the GFS standards using tools and Frameworks like Pitest for checking mutations, CheckStyle for coding standards EMMA for class line and branch coverage, CodePro for Static code analysis and CSSLint and JSLint for CSS and JavaScript code quality.\nUsed Maven for building the application and implemented with Scala.\nInvolved in monitoring of Sonar dashboard for code metrics for every sprint cycle; fixed code based on dashboard statistics. \nUsed Maven for building the application as an enterprise artifact, using Maven commands to verify test cases and coding standards for the application before deploying the code.\nEnvironment: Java 6, Spring 4, Spring JDBC, Websphere 8.5, IBM RSA, Jquery, Jasmine, JBehave, Jenkins, Jamon, Maven, Pitest, Junit, RESTful, JSON, EMMA, JMS, Multithreading , Scala, Angular JS, Java cache, Node JS, CodePro, NoSql Cassandra, React JS, GIT,\u00a0Micro Services, Sonar, Spring Boot, Apigee, Selenium, AWS, Checkstyle, Splunk, EasyMock\nMorgan Stanley, NY\t                                                                                                                      Nov 2014 \u2013 Jan2016\t JAVA DEVELOPER\nProject Summary:\u00a0Worked with Human Resource Information Technology group on Workday Project. The project mainly involves designing, developing, and maintaining the HR data from Workday and then building the enterprise data warehouse used by different groups. The Java Process involved extracting the data from workday in the form of xml files and then load it into our database. It also involves migration of data from a legacy internal HR application to Workday. The final data is reported to users through Business Objects reports and some outgoing feeds.\nResponsibilities:\nDesigned XSDs and implement services in Eclipse IDE and IBM Integration Designer (IBM ID) based on the XSDs.\nImplemented all the services based in Spring Architecture Spring Core, Spring MVC, Spring OXM API.\nDeveloped simple and secure integrations using Workday\u00a0Enterprise Interface Builder (EIB).\nExtensively used Spring Rest Template to provide RESTful web services to call the underlying application, used Hibernate as an ORM tool.\nGood work experience on Mongo DB and MySQL, Creating SQL statements &Sub queries.\nWrote Python\u00a0scripts to parse XML documents and load the data in database.\u00a0\nDesigned business flow diagrams and processes, which included processes in Staffing, job benefits, compensation grades and packages.\nImplemented BackboneJS and ReactJS to create a dynamically changing website.\u00a0\nUsed PL/SQL\u00a0coding for Exception Handling and Duplicate Data maintaining.\nUpgrade underlying search\u00a0engine to Elastic search 1.6 enhancing performance and insights.\nConfigured Spring ORM that provides simplified templates for accessing databases through ORM technologies, such as Hibernate in our case to access the database.\nCleansing data generated from weblogs with automated scripts in Python.\nImplemented client application specific code modules and used Ant Build Tool to build, compile,\n and create jar files of each client application.\nResponsible for constant upgrading of services as per release changes and unit testing by utilizing Junit 4 API, and used SOAP UI for testing in various environments and used JMockit to mock SEAS calls for testing.\nImplemented all the SEBS Services in IBM Integration Designer (IBM ID) by creating Mediation Flow Modules, Inbound Import and Outbound Export for all those services deployed in various environments, created toolkits for consumption by IBM Process Designer (IBM PD).  Implemented test cases for these operations in IBM ID.\nWorked with No SQL\u00a0database to store JSON like dynamic connections data.\nCreated various Parser programs to extract data from Workday using Scala.\nUsed\u00a0Apache Tiles Framework for User Interface look and feel.\nUsed SVN to check-in and check-out and co-ordinate among team members for Version Controlling.\nUsed Spring JMS template for the asynchronous exchange of critical business data and events among J2EE components and legacy system.\nWorked on version control tool GIT\u00a0for branching, merging and reverting the code.\u00a0\nUsed Clover to constantly check the effectiveness and coverage of the test cases.\nTested required operation of ID by creating human services to test from IBM Process Designer.\nResponsible for constantly revising and reviewing the code using Fish Eye-Crucible.\nResponsible for biweekly on call primary support and secondary support, coordinating and validating Change Requests and Work Requests. Created CR\u2019s and WR\u2019s on a regular basis for code deployment and code changes.\nEnvironment:  JDK 6, J2EE, Spring 3.1.2, Hibernate 3, Oracle WebLogic 10.3.6, Eclipse, Scala, XML, JSON, Log4j, JUnit, Anthill Pro, Ant, Jmockit, PL/SQL, GIT, Elastic search, Infinispan cache, Python, Oracle SQL Developer, Apache Tiles, Mongo DB, JMS, ReactJS, IBM Integration Designer, IBM Process Designer, SOAP UI, No SQL, Clover, Crucible\nAXA Equitable Life Insurance Company, NJ                                                                              Oct 2013 - Oct 2014\nJAVA DEVELOPER\nProject Summary: Employer Sponsored alerts\u00a0\n Micro services designed to expose the data in Inforce alerts database and consume them from front end designed using Angular JS. Implementation of micro services using SpringBoot and eclipseLink data jpa (dynamic entity).\u00a0\n\nResponsibilities\n        \u2022 Data analysis and breakdown the project into multiple micro services.\u00a0        \n         \u2022 Designing dynamic entities and implementing service in spring boot.\n\u2022 Worked with Apache Wicket 1.6 for the presentation layer.\n\u2022 Performing analysis and developing POC on different ways to expose the micro services (Like     \n   Node JS Vs Spring Boot and Spring data JPA).\u00a0\n\u2022Writing SQL\u00a0Statements to extract Data, to verify the output Data by using SQL Query analyzer.\n\u2022 Developed HTML5 Mobile\u00a0application with HTML5, Java Script, JQuery, JSON and RESTful web service.\n\u2022 Worked on migrating the old java\u00a0stack to Type safe stack using Scala\u00a0for backend programming.\n         \u2022 Created various Parser programs to extract data from database using Scala. \n       \u2022 Mapped tables in database using Hibernate and Scala.\n\u2022 Used NodeJS\u00a0as a lightweight webserver and to resolve javascript dependencies.\n\u2022 Involved in development of the User Interface presentation screens using HTML5, CSS3, Node JS.\n\u2022 Developing front end single page application using groovy JS.\nEnvironment: Spring Boot, Spring Data JPA, My SQL, HTML5, CSS3, Node JS, Scala 1.7, Spring Tool suite (STS 3.2), Hibernate, Apache Wicket 1.6, Angular 1.4, Oracle 10g\nThomson Reuters, MN\t\t\t\t\t                                             Aug 2012- Sep 2013\nJAVA DEVELOPER\nProject Summary: TRAMS (Thomson Reuters Application Management Suite) is a standardized suite of capabilities that manage TR\u2019s application needs for deploying, logging, monitoring, and alerting on Java or Windows based applications and services. Worked on AutoScale cloud project which is a part of TRAMS to deploy, migrate, auto-provisioning and dynamic scaling of applications on TR\u2019s private cloud by leveraging existing TRAMS infrastructure.\nResponsibilities:\nInvolved in Design and Development of AutoScale Project in TRAMS to deploy, migrate and managing cloud based applications.\nDeveloped the application on Spring Framework used Hibernate ORM to perform backend CMDB calls to retrieve and commit application specific configuration data required to deploy the application.\nExpose various Rest endpoints to be consumed as services to clients to directly autoscale the application, getting the status of the application and configure the application in conjunction with OpenStack API. \nIntegrated Splunk Rest API to query Splunk via Splunk jobs about call stack and other transaction information Developed custom parsers to parse splunk JSON output.\nDeveloped user interface using JSP, Angular, DOJO, and JQuery. Extensively used Angular directives, validations, Angular forms and Angular http service.\nWorked on application written in Groovy/Grails. Developed RESTful web service in groovy and services. \nWorked on TRAMS Deploy Engine (mona), Java and Windows Node Agent to develop new capabilities according to client requirements.\nDeveloped Test Suites for various Rest end points in JUnit4 Framework. Used SOAP UI for testing in various environments.\nParticipate in Iteration planning meeting biweekly and attended scrum meetings.\nEnvironment:  Java, Spring, Hibernate, Tomcat 7, XML, JSON, Log4j, JUnit, Angular, Groovy, Anthill Pro, Ant, Oracle SQL, REST, OpenStack API, Jackson, Splunk, JavaScript, Dojo Toolkit\nOptum Health, MN            \t\t\t                                                               Oct 2011 - Jun 2012\t\nJAVA DEVELOPER\nProject Summary: \u00a0OptumRx\u00a0is a project in to manage customer prescription medications and other customer\u00a0health products which manages customer\u2019s order refills, tracking the order and displaying the status of the\u00a0orders.\nResponsibilities:\nDeveloped and introduced new enhanced features in\u00a0OptumRx customer portal in the customers\u2019 medication cabinet section.\nIntegrated code with\u00a0IBM Work Manger API\u00a0to handle customer request and leveraged the framework to schedule background worker threads.\nEnhanced web-tier components using\u00a0JSP,\u00a0Spring,\u00a0Apache Tiles 2.2, Tag\u00a0Libraries and\u00a0JavaScript.\nUsed Eclipse Rich Client Platform (RCP) for the development of the project.\nExtensively used Linux, Unix\u00a0system administration tools to create servers and deploy and run applications in development stage.\nDeveloped\u00a0Test\u00a0Suites for various Rest end points in\u00a0JUnit Framework, used\u00a0EasyMock\u00a0framework.\nEnvironment: \u00a0Java, Spring, Hibernate, WebSphere, Eclipse RCP, XML, JSON, Log4j, JQuery, Anthill Pro, Ant, Oracle SQL\u00a0Developer, REST, JavaScript, JUnit, Unix, Linux, Apache Tiles 2.2, IBM RAD, Rally\nColruyt Group India, Hyderabad                                                                                              May 2009 - Sep 2011\nJAVA DEVELOPER\nProject Summary:\nThe project involves creation of a single, integrated system which executes the calculation of sales and compensation for both External and Internal producers and suppliers. \nResponsibilities: \nUsed Hibernate ORM mapping for Oracle database. \nFront-end is designed by using HTML, DHTML, JavaScript, CSS, JSP, JSF, JSTL and Struts. \nDeveloped various Spring MVC forms and performed both client side and server side validation\nWorked on Web services using SOAP and AXIS.\nUsed Hibernate as ORM tool for accessing database.\nUsed Rational Clear Case to access files and directories in the organization.\nIntegrated and configured Spring Framework and Hibernate environment.\nEnvironment: Java JDK 1.4, Eclipse 3.2, log4j, Ant, Solaris 10, Web Sphere Portal Server 6.1, RUP, Java 1.4, J2EE, JSP 1.2, Servlets 2.3, JSF 1.1, Prime Faces, Spring 1.2.6/2.0, Hibernate 2.0, Web Sphere 6.0, AXIS, Oracle 8i / 9g/10g, J Unit, XML, HTML, JQuery, Java Script, AJAX, CSS, Rational Clear Case",
  "size_bytes": 57181,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:52.154044",
  "clean_text": "email phone stack developer year experience include user interaction requirement analysis design development testing configuration client interaction support professional summary skilled object oriented analysis design ooad extensively work open source technology strut spring hibernate framework junit proficiency component spring ioc aop jdbc oxm resttemplate mvc good experience implement design pattern like singleton session facade business delegate service locator controller data access objects dao etc proficiency web base technology like html dhtml reactjs javascript ajax tiles experience add dynamic functionality web page javascript jquery nodejs angularjs excellent experience software development life cycle sdlc experience instal mongo db windows environment add arbiter replica set development hand experience apache infinispan cache experience solid understanding micro services implement client server business application micro services verse work relational data base management systems oracle g ms sql server mysql mongo db nosql cassandra develop sql script pl sql query function procedure trigger profile user oracle database work extensively flavor unix operating system like linux experience work ibm mq message queue jms asynchronous mode communication experience work multiple servers ibm web sphere oracle weblogic jboss apache tomcat good experience test drive js tool like jasmine excellent experience develop web services python programming language skilled building application base soa architecture ibm integration designer strong exposure web client technology jsp jstl xhtml dom css javascript ajax experience work collection framework multi threading experience manual automated testing selenium have experience cloud computing environment like amazon web performed requirement elicitation gather functional non functional requirement strong application development websphere portal jsr specification integrate spring portlet hibernate experience implement restful soap base web services approach approach hand experience building deploy tool like ant maven version control git svn subversion rational clear case cvs vss work knowledge xml relate technology xml xsl xsds dtd jaxp sax dom jaxb experience jms integration framework reduce complexity jms api spring integration mq technical skills professional experience centerpoint energy tx jan present java developer project summary project focus make easy collect energy consumption datum utility company require analyze energy usage deploy new market transaction management solution customer care billing maintain request response message enrollment request generate monthly historical usages responsibility participate contribute team demos peer review team retrospective daily standup development application create technical design document class sequence diagram feature processing flow datum insertion design develop new code feature base standard sf design patterns soc design principle single responsibility reusability principles java message service jms asynchronous exchange information system involve implement junit test case ajax implement functionality customer registration view customer information module develop api aws lambda manage server run code aws application deployment migrating datum application aws platform design dynamic client javascript code build web form simulate process web application page navigation form validation integrate oracle business critical system financial ledgers system develop upk simulation overview navigation course devise establish high level architecture release feature processing data insertion calculation workpaper table experience distribute database nosql cassandra manage large amount structured datum react js template fast compilation develop reusable component build restful web service mvc architecture style assign roles policies users security groups identity access implement multi factor provide additional security account resource create jms consumer process restful jms message configure aws versione lifecycle policy backup service request archive file configure elastic load balancers elb aws autoscaling group create monitor alarm notification aws host cloud watch second level cache enhance performance proper memory management purequery interface access relational database purequery runtime java annotation statement sequence object micro service architecture interact combination rest mq leverage aw build test deploy identity micro services virtual server host git jenkins configuration management tool like chef multithreading perform task simultaneously like scrape datum format datum time huge datum process time getting scrape tune record performance nosql cassandra cluster alter jvm parameter query analyze datum nosql cassandra quick searching sort grouping develop new exist calculation setup edit review ui module jsp jquery analyst manage new exist calculation configure spark stream receive real time datum kafka store stream datum nosql cassandra spark java scala implement angularjs node js spring mvc model component conduct test application develop angular js jasmine protractor involve bdd behavior driven development jbehave jasmine framework monitor performance dao call host component call jamon correct performance require fast processing usage record implement selenium testing platform test script eclipse ide work increase quality source code meet gfs standard tool frameworks like pitest check mutation checkstyle code standard emma class line branch coverage codepro static code analysis csslint jslint css javascript code quality maven build application implement scala involve monitoring sonar dashboard code metric sprint cycle fix code base dashboard statistic maven build application enterprise artifact maven command verify test case code standard application deploy code environment java spring spring jdbc websphere ibm rsa jquery jasmine jbehave jenkins jamon maven pitest junit restful json emma jms multithreading scala angular js java cache node js codepro nosql cassandra react js git micro services sonar spring boot apigee selenium aws checkstyle splunk easymock morgan stanley ny nov java developer project summary work human resource information technology group workday project project mainly involve design develop maintain hr datum workday build enterprise datum warehouse different group java process involve extract datum workday form xml file load database involve migration datum legacy internal hr application workday final data report user business object report outgoing feed responsibility design xsd implement service eclipse ide ibm integration designer ibm id base xsd implement service base spring architecture spring core spring mvc spring oxm api develop simple secure integration workday enterprise interface builder eib extensively spring rest template provide restful web service underlying application hibernate orm tool good work experience mongo db mysql create sql statement sub query write python script parse xml document load datum database design business flow diagram process include process staffing job benefit compensation grade package implement backbonejs reactjs create dynamically change website pl sql code exception handling duplicate data maintain upgrade underlie search engine elastic search enhance performance insight configure spring orm provide simplified template access database orm technology hibernate case access database cleanse datum generate weblog automate script python implement client application specific code module ant build tool build compile create jar file client application responsible constant upgrading service release change unit testing utilize junit api soap ui testing environment jmockit mock sea call testing implement sebs services ibm integration designer ibm id create mediation flow modules inbound import outbound export service deploy environment create toolkit consumption ibm process designer ibm pd implement test case operation ibm id work sql database store json like dynamic connection datum create parser program extract datum workday scala apache tiles framework user interface look feel svn check check co ordinate team member version controlling spring jms template asynchronous exchange critical business datum event component legacy system work version control tool git branching merge revert code clover constantly check effectiveness coverage test case test require operation id create human service test ibm process designer responsible constantly revise review code fish eye crucible responsible biweekly primary support secondary support coordinate validate change requests work request create cr wr regular basis code deployment code change environment jdk spring hibernate oracle weblogic eclipse scala xml json junit anthill pro ant jmockit pl sql git elastic search infinispan cache python oracle sql developer apache tiles mongo db jms reactjs ibm integration designer ibm process designer soap ui sql clover crucible axa equitable life insurance company nj oct oct java developer project summary employer sponsored alert micro service design expose datum inforce alert database consume end design angular js implementation micro service springboot eclipselink data jpa dynamic entity responsibility datum analysis breakdown project multiple micro service design dynamic entity implement service spring boot work apache wicket presentation layer perform analysis develop poc different way expose micro service like node js vs spring boot spring datum jpa sql statement extract data verify output data sql query analyzer develop mobile application java script jquery json restful web service work migrate old java stack type safe stack scala backend programming create parser program extract datum database scala map table database hibernate scala nodejs lightweight webserver resolve javascript dependency involve development user interface presentation screen node js develop end single page application groovy js environment spring boot spring data jpa sql node js scala spring tool suite sts hibernate apache wicket angular oracle g thomson reuters mn aug sep java developer project summary trams thomson reuters application management suite standardized suite capability manage tr application need deploy logging monitoring alert java windows base application service work autoscale cloud project trams deploy migrate auto provisioning dynamic scaling application tr private cloud leverage exist trams infrastructure responsibility involve design development autoscale project trams deploy migrate managing cloud base application develop application spring framework hibernate orm perform backend cmdb call retrieve commit application specific configuration datum require deploy application expose rest endpoint consume service client directly autoscale application get status application configure application conjunction openstack api integrate splunk rest api query splunk splunk job stack transaction information develop custom parser parse splunk json output develop user interface jsp angular dojo jquery extensively angular directive validation angular form angular http service work application write groovy grail develop restful web service groovy service work trams deploy engine mona java windows node agent develop new capability accord client requirement develop test suites rest end point framework soap ui testing environment participate iteration planning meeting biweekly attend scrum meeting environment java spring hibernate tomcat xml json junit angular groovy anthill pro ant oracle sql rest openstack api jackson splunk javascript dojo toolkit optum health mn oct jun java developer project summary optumrx project manage customer prescription medication customer health product manage customer order refill track order display status order responsibility develop introduce new enhanced feature optumrx customer portal customer medication cabinet section integrated code ibm work manger api handle customer request leverage framework schedule background worker thread enhanced web tier component jsp spring apache tiles tag libraries javascript eclipse rich client platform rcp development project extensively linux unix system administration tool create server deploy run application development stage develop test suites rest end point junit framework easymock framework environment java spring hibernate websphere eclipse rcp xml json jquery anthill pro ant oracle sql developer rest javascript junit unix linux apache tiles ibm rad rally colruyt group india hyderabad sep java developer project summary project involve creation single integrated system execute calculation sale compensation external internal producer supplier responsibility hibernate orm mapping oracle database end design html dhtml javascript css jsp jsf jstl strut develop spring mvc form perform client server validation work web service soap axis hibernate orm tool access database rational clear case access file directory organization integrated configure spring framework hibernate environment environment java jdk eclipse ant solaris web sphere portal server rup java jsp servlets jsf prime faces spring hibernate web sphere axis oracle g j unit xml html jquery java script ajax css rational clear case"
}