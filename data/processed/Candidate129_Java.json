{
  "filename": "Candidate129_Java.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate129_Java.docx",
  "text": "Candidate129\ncandidate1277@gmail.com\n201-701-3757\nOBJECTIVE\nHad 8 years of IT experience in all phases of Software Development Life Cycle (SDLC) such as Planning, Analysis, Design, Implementation, Testing and Maintenance of Web Based, Client-Server, Dev-ops tools, Software Configuration and Build/Release Management and N-tier Architectures in domains like Insurance, Healthcare and Finance. I had a wide knowledge and proven experience in web development and maintenance. I am self-starter, quick learner and capable of working independently to achieve milestones and deadlines. I am adept at prioritizing, tracking and completing tasks to accomplish project goals.\nPROFESSIONAL SUMMARY\nExperience in providing technical solutions for business applications in development, designing, testing, building frameworks and implementing web-based Client-Server and Middleware multi-tier distributed environments using Java, J2EE.\nExperience in implementation of Web-based and Stand alone applications using concepts of Object Oriented Design (OOD), Object Oriented Analysis (OOA),Object Oriented Programming (OOP).\nHands on experience with various application design patterns like MVC, MVVC, MVP and GWT.\nDesigned and developed software applications using Java, Multithreading, Servlet, AngularJS, Bootstrap 3, JSP, JSTL, HTML, JavaScript, Ext JS, Groovy, Grails, EJB, JMS, XML, XSL, JSF, Ajax, JQuery, Adobe Flex 3, GWT, ADF etc.\nUsed Angular 2, TypeScript, Webpack, ES6 Features to develop the application. \nTurn mockups and design into pages complete with HTML/HTML5, CSS/CSS3, JavaScript and Angular2.\nExperience with Java 1.8 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise. \nWorked with Java 1.8 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment.\nHands on Experience in developing and designing the Micro Services using REST framework and Spring Boot. \nHands on Experience in designing and implementing AWS Solutions using EC2, S3, EBS, Elastic Load balancer (ELB), VPC, Lambda.\u00a0\nUtilized AWS EC2 instances for application installation and preferred S3 buckets for the storage.\nExpertise in developing the Web-Based application by implementation of frameworks like Struts (Struts, Tag Libraries and Struts custom validation rules, Tiles), Spring (Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, Spring Security, Spring Boot, Spring Data, Spring Batch), AJAX frameworks (Rich Faces, My Faces) and ORM frameworks like Hibernate and Mybatis.\nExpertise in implementing Web Services, related technologies & frame works: WSDL, SOAP, REST, JAX-WS, JAXB, JAX-RPC, AXIS and Jersey, SOAP UI and producing client utilizing Eclipse for Web Services consumption.\nDiverse experience utilizing tools in N-tier and Micro services architecture applications using Spring Boot, Spring Cloud config, Netflix OSS components(Eureka, Zuul, Hystrix), Pivotal Cloud Foundry, AWS, Rabbitmq, Kafka, Zookeeper, Cassandra, MySQL, Restful Web Services.\nHands on Experience in core java concepts like Collection Framework, Multi-threading, Generics, Annotations, Serialization, Thread pools, JavaBeans, Externalization\nExperienced in XML technologies like DTD, XSD, XSLT and parses like DOM, SAX and JAXB.\nHands on Experience at writing composite SQL queries, procedures, Triggers and stored procedures in various databases such as MySQL, Oracle and Cassandra.\nMade the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB (NoSQL) database. \nWorked on Node.js and MongoDB data store procedures to satisfy various business requirements of the application.\nExperienced in Middleware persistence framework like Hibernate/JPA for mapping Java classes with database and utilizing Hibernate Query Language (HQL).\nInstallation and configuration of Active MQ, Open MQ, IBM MQ Series and caching software like Oracle Coherence, Redis, Memcached and IBM ExtremeScale.\nExperienced in managing the security part of the application using technologies related to SSO.\nSingle sign-on (SSO) and multi-factor authentication with this property a user logs in with a single ID and password to gain access to a connected system or systems without using different usernames or passwords, or in some configurations seamlessly sign on at each system.\nInvolved in Authorization, Authentications & SSO using LDAP & AD.\nExperience in configuring and deploying the applications on application servers like WebSphere, Weblogic, JBoss and Glassfish.\nExpertise in performing the unit testing using JUnit, integration and deploying the applications using tools such as ANT and Maven, debugging through log4j.\nExperienced in developing Automation Scripts using Selenium Web-driver\nExperienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache Active MQ and Apache Camel providers.\nActively involved in the DevOps streamlining process through Jenkins CI and CD Release Automation.\nStrong working experience in Cloud technologies like Pivotal Cloud Foundry (PCF), spring boot, Spring Cloud Config Server (SCCS), Jersey in spring boot, Service Registry (Eureka) on new development project as well as migration to traditional project on Cloud.\nExperience in implementing security models OAUTH2 and\u00a0SAML\u00a0for authentication/authorization using Spring Security and IAM Cloud Security.\u00a0\nExperience in deploying the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka.\n Strong technical, administration, &mentoring knowledge in Apache Spark and Datastax Cassandra.\nExperienced in using streaming software like: Apache Storm, Kafka, Spark, RabbitMQ and integrating with APIs [Restful] with APIGEE and Layer7 \nExperienced in designing and developing asynchronous event based framework based on messaging infrastructure to process huge volume of messages using Solace queues, Apache Kafka, Storm and Zookeeper. Knowledge and experience in job work-flow scheduling and monitoring tools like Oozie and Zookeeper.\nKnowledge in testing web application vulnerabilities, OWASP is used as a guide in this review and testing process.\nExperienced in using JSON as the data exchange format and Swagger to provide the contracts between UI and middleware.\nExperience in writing shell scripting for deployment process and expertise in sharing files between Linux boxes and windows using the WinSCP, a secure FTP, SCP client for Microsoft Windows\nExperience in developing unit testing frameworks using JUnit, JMeter, DB Unit, Mockito and Groovy Spock based on test first or test driven methodology.\nExperienced in designing and implementing sw business rules using DROOLS framework. \nExperience in handling HP Fortify issues, Sonar, PMD.\nExtensive experience with Java complaint IDE\u2019s like IBM RAD , IBM WSAD, Eclipse, Spring  STS and Intellij IDEA.\nWorked on production 0 for the client and business user application. Also supported critical business applications as L2 production support engineer.\nTECHNICAL SKILLS\nPROFESSIONAL EXPERIENCE\nClient: Express Scripts\t\t\t\t\t\t\t\t                          Jan'17-Till date\nLocation: Franklin lakes, NJ\nRole: Full Stack Developer\nDescription: The Health Evaluation System is developed for the doctors who can use the system and give the details to the patients by the printout. This system will have all the information regarding the health related issues. Using this system doctor will get all the types of medicines for any type of health issues. The system will store all the information regarding health issues and their medications for different ages.\nRoles & Responsibilities:\nInvolved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and used agile methodology (SCRUM) for developing application.\nUpgraded existing UI with HTML5, CSS3, JavaScript, Ext Js and Bootstrap with Angular interaction.\nUsed Angular 2.0 for Router to build single page applications for navigation through the different status and multiple modals. \nUsed Angular 2.0 forms like Template Driven forms and Modern Driven (Reactive) forms to perform form validations both on server and client side.\nUsed JSP, JQuery, AJAX and JSON for implementing presentation layer as well as MAVEN and Node Js\u00a0server for deploying EAR files.\nUsed Java 1.8 features like stream API and Lambda expressions.\nMaintained Interface compatibility and concurrency in the project using Java 1.8 new features like default, static methods and Concurrency API.\nDeveloped various helper classes needed following Core Java multi-threaded programming and Collection classes.\nInvolved in migrating monolithic application in Microservice Architecture and Developed Micro-services using Pivotal Cloud Foundry platform build upon Spring Boot Services.\nDesigned and developed Micro Services business components using Spring Boot.\nWorked on the REST Web Services and used Spring Framework and developed the Spring Features like Spring Core, Spring IOC, Spring AOP, Spring Data Access, and spring web test, Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Security, and Spring Integration..\nDeveloped messaging module using Spring JMS,\u00a0Apache Camel and Kafka.\u00a0 \nUsed Spring AOP Module to implement logging in the application to know the application status.\nDeveloped an API to write XML documents from a database. Utilized XML and XSL Transformation for dynamic web-content and database connectivity. \nDesigned and developed third-party payment services, REST Web Services to offer users convenient payment methods using various APIs provided by various third-party payment processors based on OAuth 2.0 protocol.\nDeveloped the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management.\nInvolved in multi-tiered J2EE design utilizing Spring Inversion of Control (IOC) and Hibernate.\nInvolved in testing the applicable code using JUnit..\nResponsible for creation and execution of automation test scripts using Selenium, Webdriver.\nWritten SQL Queries and stored procedures to interact with OracleDB.\nConfiguring and maintaining the database PL/SQL. \nWorked with NoSQL Cassandra to store, retrieve, and update and manage all the details for Ethernet provisioning and customer order tracking.\nDeveloped custom Apache Spark batch job programs in Scala to create recommendations based on customer data.\nUsed JIRA to assign, track, report and audit the issues in the application. Configured and customized logs using Log4J. \nConfigured CICD pipeline by setting up Build, test, & deploy automation Jobs in Jenkins using Conditional Build steps pipeline by integrating Jenkins, Maven and Artifactory.\nInstalled, configured SonarQube and continuously integrated the issues.\nEmployed fail safe and circuit breaker patterns for the first time in Client's email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications. \nImplemented Single Sign On (SSO) to define the user roles and access\nDeployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka. \nResponsible for creating an instance on Amazon EC2 (AWS) and deployed the application on it and responsible for maintaining and expanding our AWS infrastructure using AWS (EC2/EBS).\nUtilized Amazon Web Services (AWS) EC2 to deploy\u00a0Docker containers.\nResponsible to maintain the networking from AWS cloud back to On-Primary connectivity and no direct internet access from AWS cloud VPC to the rest of the world (Internet). \nInstalling and configuring the applications like docker tool and kubernetes for the orchestration purpose. \n Using Chef deployed and configured Elastic search for log analytics, full text search, application monitoring in integration with AWS Lambda and CloudWatch. \nCreated dynamic routing/load balancing capability enabling large application scaling for high availability.\nEnvironment: Agile(SCRUM), HTML5, CSS3, Bootstrap, JavaScript, JQuery, Ajax, AngularJs, AWS, Micro Services, Spring MVC, Hibernate, Spring, Oracle, Spring Batch, Spring Boot, Spring Security, JSON, XML, GIT, JUnit, Maven, JMS, Apache Tomcat, WebSphere, Rest Restful, JAX-RS, Log4J, SOA, JIRA, Jenkins.\nClient: \tBCBS\t\t\t\t\t                                                                                  Sep\u201915 \u2013 Dec'16\nLocation: Dallas, TX\nRole: Full Stack Java Developer\nDescription: Blue Cross and Blue Shield is an insurance company owned by its policyholders. This application was created to help individuals and families easily shop for and buy health insurance. BCBS offers a variety of insurance plans, as well as tools to help to help you choose the plan that\u2019s right for you.\nRoles &Responsibilities:\nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint.\nExtensive experience on DevOps essential skills like continuous integration, continuous deployment, continuous delivery, supporting Build Pipelines Release management and cloud computing.\nInvolved in the front end using JSP, HTML5, CSS3, JavaScript, and AJAX.        \nUsed AngularJs to create views to hook up models to the DOM and synchronize data with server as a Single Page Application.\u00a0\nInvolved in development of Agent Verification System using Spring MVC framework.\u00a0\nUsed Spring AOP for logging, auditing and transaction management to distinguish business logic from the cross-cutting concerns.\u00a0\nImplemented the application using Spring IOC, Spring MVC Framework, spring Batch and handled the security using Spring Security.\nWorked on Single Sign On application using LDAP directory service for secure authentication and assigning roles based on the login id.\nImplemented Web-Services to integrate between different applications components using Restful Web Services by using Jersey.\nInvolved in identifying and implementation of different J2EE design patterns like Service Locator, Business Delegate, and DAO. \nImplemented business logic using Array list, Map and Sets of Collections API.\u00a0 \nDeveloped Web Services component using XML, WSDL, and SOAP with DOM parser to transfer and transform data between applications.\nUsed apache common digester to parse data from XML files and populate data into java beans.\u00a0\nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nInterfaced with the MySQL back-end database by integrating spring with Hibernate.\nExtensively used hibernate named queries, criteria queries, Hibernate Query Language (HQL) and Optimistic Locking and Caching to process the data from the database.\nDesign and Coding the core framework using J2EE, Spring Boot, Jersey, Cloud technologies (SCCS, Eureka, encryption, security groups) on Pivotal Cloud Foundry (PCF) and the services with the integration points using J2EE, spring and Informatica Web Services (JAX RPC/JAX WS)\nDeployed and Monitored Micro Services using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry.\nPerformed deployment of applications on IBM WebSphere Application Server. \nInvolved in implementing validations, exception handling. Worked with XML, XSLT for building up & transforming the xml files. \nUsed IBM MQ and IBM Broker for transferring the data across multiple applications.\nUsed IBM MQ as Queuing mechanism to send messages to clients and interact with other systems.\nInvolved in testing the applicable code using JUnit.\u00a0\nUsed ClearCase for version control and ClearQuest for bug tracking and Used Apache ANT script for building the application with the build.xml. \nUsed logging techniques provided by Log4j tool for efficient logging and debugging.\nDeveloped the application using Eclipse IDE and used its features for editing, debugging, compiling, formatting, and build automation. \nEnvironment:HTML5, CSS3, JavaScript, JQuery, AngularJs, DOJO, AJAX, JSP, Agile, Hibernate, Spring, Spring MVC, Servlets, REST, JAX-WS, Log4j, PL/SQL, Web Services, Weblogic Application Server, Oracle, JUnit, Log4j, JIRA, SVN.\nClient: Flag Star Bank\t\t\t\t\t\t\t\tOct'14 \u2013Aug\u201915\n      Location: Troy, Michigan\nRole: Java Developer\nDescription: Flagstar Bank is a Michigan based financial organization that offers services such as commercial and personal banking, online banking services, investment and loans. This application is developed to enhance online banking facility to the customer. Banking application has various modules for account maintenance, and email notification modules\nRoles &Responsibilities:\nInvolved in SDLC requirements gathering, analysis, design, development and testing of application developed using agile methodology.\nCreated user-friendly GUI interface and Web pages using HTML, Ajax and Java script.\nJVM tuning experience by changing to heap sizes according to the requirement.\n\u00a0Experience in presentation layer for front-end of the application by using NodeJS boot strap programming and HTML pages.\u00a0\nUsed Spring MVC and Dependency Injection for handling presentation and business logic.\nTo maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP. Integrated Spring DAO for data access using Hibernate.\nUsed Spring Security for Authentication and Authorization of the application.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nUsed Apache Axis Service Engine for creating and deploying Web Service clients using SOAP, WSDL.\nUsed Web Services for creating rate summary and used WSDL and SOAP\u00a0messages for getting useful plans from different module.\nImplemented persistence framework using Hibernate& handled Transaction Management using the provided data source.\nResponsible for designing Hibernate mapping files based on business logic and Object relationships.\nIntegrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring.\nExtensively used HQL and SQL for querying databases. \nDeveloped Message Driven Bean for asynchronous sending Messages using JMS.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners \nEstablished Database Connectivity using JDBC, Hibernate O/R mapping with Spring ORM for Oracle. \nPackaged and deployed the application in JBoss.\nUsed Gradle tools for building and deploying the Web applications.\nAnalysis and Bug fixing of the production problems and defects along with enhancements\nImplemented JUNIT test cases for unit testing and Suites for end to end testing.\nUsed JIRA for tracking the Project Stories in Agile Methodology.\nUsed\u00a0Tortoise SVN\u00a0to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nEnvironment: HTML, CSS, JavaScript, Bootstrap, AngularJs, JSON, XML, AJAX, JQuery, Struts, Hibernate, Spring MVC, SOAP,WSDL, HQL, SQL, JBoss, Oracle, JMS, JNDI, Maven, RMI, IntelliJ, UML, JIRA, JUNIT, Tortoise SVN, LINUX.\nClient: All Star                                                                                                 Nov'13 \u2013 Oct'14\nLocation: Chicago, IL\nRole: JAVA Developer\nDescription: All Star Insurance is a leading insurance company owned by its policyholders. An application is created to help individuals and families easily shop for, and buy health insurance which is used to handle insurance claims. ePAS is a secure, web-based insurance policy. Administration system allows authorized agents to quote and submit new policy applications, view policy statuses and submit policy endorsements. The system will guide the agent through the policy application and endorsement. Processes and automatically apply underwriting rules when submitting transactions.\t\nRoles &Responsibilities:\nInvolved in all phases of the Software development life cycle (SDLC) using Agile Methodology.\nDeveloped User Interface using JSP, JSTL, HTML, CSS, Java Script, jQuery.\nUsed various jQuery UI controls and corresponding Event handlers.\nTo maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP. Integrated Spring DAO for data access using Hibernate. Used Spring Security for Authentication and Authorization of the application.\nImplemented persistence framework using Hibernate and Handled Transaction Management using the provided data source. Responsible for designing Hibernate mapping files based on business logic and Object relationships.\nIntegrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring. Established Database Connectivity using JDBC, Hibernate O/R mapping with Spring ORM for DB2. \nWorked on Hibernate in Data Access Layer for mapping the\u00a0java\u00a0objects to relational database and SQL queries to fetch the data, insert and update the data from the database.\u00a0\nImplemented SOA architecture with Web Services using SOAP, WSDL and XML using Apache CXF framework and worked on parsing the XML files using DOM/SAX parsers.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nCreated Tables, Triggers, PL/SQL Stored Procedures, SQL queries, Joins and views for IBM DB2.\nImplemented SOAP based Web Services and used Soap UI for testing.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners.\nInvolved in Unit Testing of various modules by generating the Test Cases. Performed deployment of applications on WebSphere. Written LINUX shell scripts to identify user login information.\nInvolved in day to day handling of JIRA issues (production issues at time) that involved data inconsistencies that required to be solved in very less time.\nInvolved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase.\nEnvironment: Java, J2EE, HTML, CSS, JavaScript, JQuery, JSP, JSTL, Spring, Hibernate, XML, XSD, SOAP UI, SOAP, WSDL, Log4j, JUnit, IBM DB2, WebSphere, SVN, Eclipse IDE, JIRA, Agile Methodology, Linux, Rational Rose and UML\nClient: Soft Pro Systems Ltd\t\t                                                              June\u201911 \u2013 July\u201913\nRole: Java Developer\nProject: B2B solutions\nDescription: This project is mainly an Intranet application meant for employees in the organization. They are Intranet mailing System, Chatting, File Transfer and Remote Login. This project is based on the client server methodology\nRoles &Responsibilities:\nInvolved in Requirement Analysis, Design, Development and Testing of the risk workflow system.\nInvolved in the implementation of design using vital phases of the Software development life cycle (SDLC) that includes Development, Testing, Implementation and Maintenance Support in WATER FALL methodology.\nCreated user-friendly GUI interface and Web pages using JSP, HTML, CSS, AJAX, JavaScript and JQuery.\nInvolved in component development using J2EE principles and used design patterns such as Singleton, Factory and Data Access Object (DAO) in the implementation of the application.\nResponsible for designing, coding and developed the application in J2EE using Struts MVC.\nImplemented Struts framework (Action & Controller classes) for dispatching request to appropriate classes. \nUsed simple Struts Validation for validation of user input as per the business logic and initial data loading.\nAchieved synchronization of multiple threads through Multithreading and Exception Handling.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nDeveloped RESTful and SOAP based Web Services to consume and produce data in XML and JSON.\nAnd also was involved in several custom validations Integration if Mybatis has reduced to create a JDBC connection and has eased the way of writing code. \nWritten SQL queries, PL/SQL store procedures and Triggers to fetch and store data from the database.\nUsed Log4J for application logging and notification tracing mechanisms.\nDeveloped the ANT scripts for preparing WAR files used to deploy J2EE components and deployment of the application was on Jetty.\nPrepared\u00a0JUnit\u00a0test cases and executed the test cases using\u00a0JUnit.\u00a0\nInvolved in bug fixing during the System testing, Joint System testing and User acceptance testing.\nUsed GIT to check-in and check-out and co-ordinate among team members for Version Controlling. Environment: Java, HTML, CSS, AJAX, jQuery, JavaScript, Struts, Web Services, SOAP, RESTful, JSON, XML, JDBC, SQL, MySQL, ANT, Eclipse, JIRA, GIT, Jetty and UNIX.\nClient: Info Tech                                                                                                                        May'09 \u2013 June\u201911\nRole: Jr. JAVA Developer\nDescription: This is an Intranet application for shopping online within the community. The member of the community sitting at his home or office can shop different items belonging to different categories like Stationary, Electronic Goods, Apparel, Furniture, Vehicles, Home need appliances etc. in the store belonging to that community. The mode of payment is through their membership Card. An Updated record is delivered every month to the concerned member so those dues may be deducted from his membership account. Adequate security features were incorporated into the Project. Another record maintains stock update.\nRoles &Responsibilities:\nInvolved in understanding and analyzing the requirements of the project. Followed Waterfall Methodology to implement the project. Used Java JDK features to implement the functionalities.\nDesigned and developed the User Interface using HTML, JavaScript, AJAX and CSS.\nImplemented Struts MVC design pattern and front controller pattern and used for back-end.\nDeveloped Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file.\nCreated and handled Custom-Exceptions that are related to business operations. Created child Threads to improve the performance by running some independent tasks at background.\nDeveloped Server-Side components for the business services for creating Items, BOM, Sourcing Rules, and substitute.\nUsed Log4j for logging purposes during the development of the application. Used JDBC to interact with the underlying MySQL Database.\nExtensively worked on SQL for writing complex queries in the business logic layer. \nDeployed Applications on Apache Tomcat Server and used CVS as the version control manager. \nEnvironment: Java, JDBC, JDK, Servlets, Struts, JSP, Hibernate, Java Mail API, AJAX, HTML, XML, ANT, Log4J, CVS, RAD, Putty, MySQL, Mantis, Apache Tomcat, Eclipse IDE, Waterfall Methodology.",
  "size_bytes": 66136,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:24.675617",
  "clean_text": "objective year experience phase software development life cycle sdlc planning analysis design implementation testing maintenance web based client server dev op tool software configuration build release management n tier architectures domain like insurance healthcare finance wide knowledge prove experience web development maintenance self starter quick learner capable work independently achieve milestone deadline adept prioritize track complete task accomplish project goal professional summary experience provide technical solution business application development designing testing build framework implement web base client server middleware multi tier distribute environment java experience implementation web base stand application concept object oriented design ood object oriented analysis oriented programming oop hand experience application design pattern like mvc mvvc mvp gwt design develop software application java multithreading servlet angularj bootstrap jsp jstl html javascript ext js groovy grail ejb jms xml xsl jsf ajax jquery adobe flex gwt adf etc angular typescript webpack feature develop application turn mockup design page complete html css javascript experience java feature lambda expressions make anonymous inline function call functional interface make code readable concise work java streams api parallel streams api enable parallel processing collection distribute environment hand experience develop design micro services rest framework spring boot hand experience design implement aws solutions ebs elastic load balancer elb vpc lambda utilize aws instance application installation preferred bucket storage expertise develop web base application implementation framework like strut strut tag libraries struts custom validation rule tiles spring spring mvc spring web flow spring ioc spring aop spring security spring boot spring data spring batch ajax framework rich faces face orm framework like hibernate mybatis expertise implement web services relate technology frame work wsdl soap rest jax ws jaxb jax rpc axis jersey soap ui produce client utilize eclipse web services consumption diverse experience utilize tool n tier micro service architecture application spring boot spring cloud config netflix oss zuul hystrix pivotal cloud foundry aws rabbitmq kafka zookeeper cassandra mysql restful web services hand experience core java concept like collection framework multi threading generics annotations serialization thread pool javabeans externalization experience xml technology like dtd xsd xslt parse like dom sax jaxb hand experience write composite sql query procedure triggers store procedure database mysql oracle cassandra integration datum application favor json document dynamic schema mongodb nosql database work mongodb datum store procedure satisfy business requirement application experience middleware persistence framework like hibernate jpa mapping java class database utilize hibernate query language hql installation configuration active mq open mq ibm mq series cache software like oracle coherence redis memcached ibm extremescale experience manage security application technology relate sso single sign sso multi factor authentication property user log single id password gain access connected system system different username password configuration seamlessly sign system involve authorization authentications sso ldap ad experience configure deploy application application server like websphere weblogic jboss glassfish expertise perform unit testing junit integration deploy application tool ant maven debug experience develop automation script selenium web driver experience jms message exchange information reliable asynchronous way enterprise application apache active mq apache camel provider actively involve devops streamlining process jenkins ci cd release automation strong working experience cloud technology like pivotal cloud foundry pcf spring boot spring cloud config server sccs jersey spring boot service registry eureka new development project migration traditional project cloud experience implement security model saml authentication authorization spring security iam cloud security experience deploy application docker container easily accessible runtime cloud foundry cloud service like aws netflix eureka strong technical administration mentor knowledge apache spark datastax cassandra experience streaming software like apache storm kafka spark rabbitmq integrate api restful apigee experienced design develop asynchronous event base framework base message infrastructure process huge volume message solace queue apache kafka storm zookeeper knowledge experience job work flow scheduling monitoring tool like oozie zookeeper knowledge testing web application vulnerability owasp guide review testing process experience json datum exchange format swagger provide contract ui middleware experience write shell scripting deployment process expertise share file linux box window winscp secure ftp scp client microsoft windows experience develop unit testing framework junit jmeter db unit mockito groovy spock base test test drive methodology experience design implement sw business rule drools framework experience handle hp fortify issue sonar pmd extensive experience java complaint ide like ibm rad ibm wsad eclipse spring sts intellij idea work production client business user application support critical business application production support engineer technical skills professional experience client express scripts till date location franklin lake nj role stack developer description health evaluation system develop doctor use system detail patient printout system information health relate issue system doctor type medicine type health issue system store information health issue medication different age role responsibility involve analysis specification design implementation testing phase software development life cycle sdlc agile methodology scrum develop application upgrade exist ui javascript ext js bootstrap angular interaction angular router build single page application navigation different status multiple modal angular form like template driven form modern driven reactive form perform form validation server client jsp jquery ajax json implement presentation layer maven node js server deploy ear file java feature like stream api lambda expression maintain interface compatibility concurrency project java new feature like default static method concurrency api develop helper class need follow core java multi thread programming collection class involve migrate monolithic application microservice architecture developed micro service pivotal cloud foundry platform build spring boot services design develop micro services business component spring boot work rest web services spring framework develop spring features like spring core spring ioc spring aop spring data access spring web test spring mvc spring dao spring boot spring batch spring security spring integration develop messaging module spring jms apache camel kafka spring aop module implement logging application know application status develop api write xml document database utilize xml xsl transformation dynamic web content database connectivity design develop party payment service rest web services offer user convenient payment method api provide party payment processor base oauth protocol develop persistence layer hibernate framework create pojo object map hibernate annotation transaction management involve multi tiered design utilize spring inversion control ioc hibernate involve test applicable code junit responsible creation execution automation test script selenium webdriver write sql queries store procedure interact oracledb configure maintain database pl sql work nosql cassandra store retrieve update manage detail ethernet provisioning customer order tracking develop custom apache spark batch job program scala create recommendation base customer datum jira assign track report audit issue application configured customize log configured cicd pipeline set build test deploy automation job jenkins conditional build step pipeline integrate jenkins maven artifactory instal configure sonarqube continuously integrate issue employ fail safe circuit breaker pattern time client email application hystrix hystrix dashboard spring boot micro service applications implement single sign sso define user role access deploy application docker container easily accessible runtime cloud foundry cloud service like aws netflix eureka responsible create instance amazon aws deploy application responsible maintain expand aws infrastructure aws ebs utilize amazon web services aws deploy docker container responsible maintain networking aws cloud primary connectivity direct internet access aws cloud vpc rest world internet instal configure application like docker tool kubernete orchestration purpose chef deploy configure elastic search log analytic text search application monitoring integration aws lambda cloudwatch create dynamic routing load balancing capability enable large application scaling high availability environment bootstrap javascript jquery ajax angularjs aws micro services spring mvc hibernate spring oracle spring batch spring boot spring security json xml git junit maven jms apache tomcat websphere rest restful jax rs soa jira jenkins client bcbs location dallas tx role stack java developer description blue cross blue shield insurance company own policyholder application create help individual family easily shop buy health insurance bcb offer variety insurance plan tool help help choose plan right role responsibility involve daily scrum agile meeting sprint planning estimation task user story participate retrospective present demo end sprint extensive experience devops essential skill like continuous integration continuous deployment continuous delivery support build pipelines release management cloud computing involve end jsp javascript ajax angularjs create view hook model dom synchronize datum server single page application involve development agent verification system spring mvc framework spring aop log auditing transaction management distinguish business logic cross cutting concern implement application spring ioc spring mvc framework spring batch handle security spring security work single sign application ldap directory service secure authentication assign role base login implemented web services integrate different application component restful web services jersey involve identifying implementation different design pattern like service locator business delegate dao implement business logic array list map sets collections api develop web services component xml wsdl soap dom parser transfer transform datum application apache common digester parse datum xml file populate datum java bean create data model generate hibernate mapping domain object hibernate tool interface mysql end database integrate spring hibernate extensively hibernate name query criterion query hibernate query language hql optimistic locking caching process datum database design code core framework spring boot jersey cloud technology sccs eureka encryption security group pivotal cloud foundry pcf service integration point spring informatica web services jax rpc jax ws deploy monitored micro services pivotal cloud foundry managed domains routes cloud foundry performed deployment application ibm websphere application server involve implement validation exception handling work xml xslt build transform xml file ibm mq ibm broker transfer datum multiple application ibm mq queuing mechanism send message client interact system involve test applicable code junit clearcase version control clearquest bug tracking apache ant script build application log technique provide tool efficient logging debugging develop application eclipse ide feature editing debugging compiling formatting build automation environment javascript jquery angularjs dojo ajax jsp agile hibernate spring spring mvc servlets rest jax ws pl sql web services weblogic application server oracle junit jira svn client flag star bank location troy michigan role java developer description flagstar bank michigan base financial organization offer service commercial personal banking online banking service investment loan application develop enhance online banking facility customer banking application module account maintenance email notification module roles responsibility involve sdlc requirement gathering analysis design development testing application develop agile methodology create user friendly gui interface web page html ajax java script jvm tune experience change heap size accord requirement experience presentation layer end application nodejs boot strap programming html page spring mvc dependency injection handle presentation business logic maintain loose coupling layer publish business layer service inject necessary dependent component spring ioc publish cross cut concern like logging user interface exception transactions spring aop integrated spring dao datum access hibernate spring security authentication authorization application extensively json parse datum server satisfy business requirement apache axis service engine create deploy web service client soap wsdl web services create rate summary wsdl soap message get useful plan different module implement persistence framework hibernate handle transaction management provide datum source responsible design hibernate mapping file base business logic object relationship integrated spring hibernate work develop backend component service hibernate spring extensively hql sql query database develop message driven bean asynchronous send message jms spring jms module lookup queue mdb listener established database connectivity jdbc hibernate o r mapping spring orm oracle package deploy application jboss gradle tool build deploy web application analysis bug fixing production problem defect enhancement implement junit test case unit testing suites end end testing jira track project stories agile methodology tortoise svn maintain version file take responsibility code merge branch trunk create new branch new feature implementation start environment html css javascript bootstrap angularjs json xml ajax jquery strut hibernate spring mvc soap wsdl hql sql jboss oracle jms jndi maven rmi intellij uml jira junit tortoise svn linux client star location chicago il role java developer description star insurance lead insurance company own policyholder application create help individual family easily shop buy health insurance handle insurance claim epas secure web base insurance policy administration system allow authorize agent quote submit new policy application view policy status submit policy endorsement system guide agent policy application endorsement process automatically apply underwriting rule submit transaction role responsibility involve phase software development life cycle sdlc agile methodology develop user interface jsp jstl html css java script jquery jquery ui control correspond event handler maintain loose coupling layer publish business layer service inject necessary dependent component spring ioc publish cross cut concern like logging user interface exception transactions spring aop integrated spring dao datum access hibernate spring security authentication authorization application implement persistence framework hibernate handled transaction management provide datum source responsible design hibernate mapping file base business logic object relationship integrated spring hibernate work develop backend component service hibernate spring establish database connectivity jdbc hibernate o r mapping spring orm work hibernate data access layer map java object relational database sql query fetch datum insert update datum database implement soa architecture web services soap wsdl xml apache cxf framework work parse xml file dom sax parser extensively json parse datum server satisfy business requirement create tables triggers pl sql stored procedures sql query join view ibm implement soap base web services soap ui testing spring jms module lookup queue mdb listener involve unit testing module generate test case performed deployment application websphere write linux shell script identify user login information involve day day handling jira issue production issue time involve datum inconsistency require solve time involve bug fixing module raise testing team application integration testing phase environment java html css javascript jquery jsp jstl spring hibernate xml xsd soap ui soap wsdl junit ibm websphere svn eclipse ide jira agile methodology linux rational rose uml client soft pro systems ltd role java developer project solution description project mainly intranet application mean employee organization intranet mailing system chatting file transfer remote login project base client server methodology roles responsibility involve requirement analysis design development testing risk workflow system involve implementation design vital phase software development life cycle sdlc include development testing implementation maintenance support water fall methodology create user friendly gui interface web page jsp html css ajax javascript jquery involve component development principle design pattern singleton factory data access object dao implementation application responsible design code develop application struts mvc implement struts framework action controller class dispatch request appropriate class simple struts validation validation user input business logic initial datum loading achieve synchronization multiple thread multithreading exception handling extensively json parse datum server satisfy business requirement develop struts action forms action class perform action mapping strut develop restful soap base web services consume produce datum xml json involve custom validation integration mybatis reduce create jdbc connection ease way write code write sql query pl sql store procedure trigger fetch store datum database application logging notification trace mechanism develop ant script prepare war file deploy component deployment application jetty prepare junit test case execute test case junit involve bug fixing system testing joint system testing user acceptance testing git check check co ordinate team member version controlling environment java html css ajax jquery javascript struts web services soap restful json xml jdbc sql mysql ant eclipse jira git jetty unix client info tech role java developer description intranet application shop online community member community sit home office shop different item belong different category like stationary electronic goods apparel furniture vehicles home need appliance etc store belong community mode payment membership card updated record deliver month concerned member due deduct membership account adequate security feature incorporate project record maintain stock update role responsibility involve understanding analyze requirement project follow waterfall methodology implement project java jdk feature implement functionality design develop user interface html javascript ajax css implement struts mvc design pattern controller pattern end develop action class component perform business process execution involve configuration strut configuration specific xml file create handle custom exception relate business operation create child thread improve performance run independent task background develop server component business service create item bom sourcing rules substitute log purpose development application jdbc interact underlie mysql database extensively work sql write complex query business logic layer deploy applications apache tomcat server cvs version control manager environment java jdbc jdk servlets struts jsp hibernate java mail api ajax html xml ant cvs rad putty mysql mantis apache tomcat eclipse ide waterfall methodology"
}