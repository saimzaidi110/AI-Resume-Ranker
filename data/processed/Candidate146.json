{
  "filename": "Candidate146.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate146.docx",
  "text": "Candidate 146\nCandidate146java04@gmail.com\n315-221-3723\nOBJECTIVE:  \t\nTechnically skilled and qualified Java programmer looking for a position of a Full Stack Java Programmer to utilize my proficiency and skills in creating best interactive websites.\nProfessional Summary:\n8+ years of experience as a Full Stack Developer with solid understanding in all the phases of the Software Development Lifecycle (SDLC), this includes Analysis, Design, Development, Testing and Maintenance of Java UI applications for large Enterprise Customers.\nStrong programming skills in Java, J2EE, J2SE with extensive ability to develop scalable applications.\nExperienced in developing Web UI Applications using HTML5, CSS3, Boot Strap, Java Script, Type script, Ajax, JQuery, Angular.js, React.js, Express.js, Node JS, JQuery UI and Spring MVC.\u00a0\nExperience in XML related technologies like XSL, XSD, XPATH, DTD, and XML Schemas, XML Parsers like DOM & SAX.\u00a0\nWorked on Lambda Expressions, Functional interfaces Stream API's, Time API, and Improvements on Collection, Concurrency, and IO improvements by using Java 8.\u00a0\nHands on experience in Amazon Web Services (AWS) provisioning and good knowledge on AWS services like Elastic Compute Cloud (EC2), Simple Storage Service (S3), Glacier, Auto Scaling, IAM, Dynamo DB, Virtual Private Cloud (VPC), Route53, Cloud Watch,\u00a0AWS CLI, Cloud Formation, Cloud Front, Elastic Beanstalk, ELB (Elastic Load Balancers), RDS, SNS, SWF, SES, SQS, and EBS etc.\u00a0\nExperienced in AWS Dynamo DB to capture the any modification on DB. \nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nAdding permissions to AWS SQS to interact with the Queue and involved in writing custom policies.\nExperienced in using Eureka Servers while deploying in EC2. \nThorough knowledge of Micro service architecture and experience in implementing several design patterns\u00a0\n\u00a0Designed and developed\u00a0Micro service business components using Java /J2EE, Spring Boot and Implemented REST web services based on RESTful APIs.\u00a0\nExpertise in design and development of enterprise level spring based web applications using Spring REST, Hibernate, EJB, Struts, Servlets, JSP for User Interface Applications.\nExperienced on spring framework applications like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Batch, Spring JPA, Spring Security and Spring Boot and did integration to Micro\u00a0services\u00a0into existing system architecture.\nProficient in Spring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\n\u00a0Developed DAOs (Data Access Object) using Hibernate as ORM to interact with DBMS - like MySQL, PostgreSQL, SQL server 2012, PL-SQL Oracle10g and NoSQL databases like MongoDB.\nIntegrated Hibernate in context files and configured Hibernate session factory.\u00a0\nGood Experience in developing Web Services, Restful API using Jersey Framework, and SOAP using Spring-WS.\u00a0\u00a0\nExperienced with web services (SOAP/RESTful) and used to scale the applications for better BOA.\nWell versed in developing SOA services and consuming the services.\u00a0\nWorked on Service Oriented Architecture (SOA) such as Apache Axis web services which use SOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nBuild hypermedia-driven and implemented connectors between HATEOAS and Spring REST services.\n\u00a0Improved overall performance via Multithreading, collections, synchronization, and exception handling strategies.\u00a0\nUsed Apache for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nExtensive experience in using NPM, BOWER, Grunt and Gulp for build process.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD and AI.\nPerform API functional testing in POSTMAN and SWAGGER.\nExperience in message streaming by using Apache Kafka.\u00a0\nExperience with large-scale distributed systems using JMS, Message Queues and Spring JMS Integration.\u00a0\nHands-on experience in using message brokers such as\u00a0Active MQ\u00a0and\u00a0RabbitMQ.\nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nStrongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing.\nExperienced on tools like JIRA for bug tracking.\nExperienced with CICD - ANT/MAVEN/GRADLE/JENKINS/CVS/GIT/GITHUB.\nExperience with web/application servers Web Sphere, Web Logic, Jetty, JBoss, and Tomcat Server.\nExperience in performing Unit testing, Integration Testing and generation of test cases using JUnit.\u00a0\nExperience in working on version control tools like SVN, CVS and GIT.\u00a0\nGood exposure on using IDE'S like Eclipse, Sublime Text, IntelliJ and Net Beans.\u00a0\nManaged the platform over the years through Agile, Scrum and Waterfall practices\u00a0\nTECHNICAL SKILLS: \nProfessional Experience:\nResponsibilities: \nWorked in a highly dynamic AGILE environment and participated in scrum and sprint meetings.\nDevelop new fronted from the ground up using\u00a0HTML5, CSS3, JAVASCRIPT, JQuery, Bootstrap, AngularJS, and NodeJS as front end building Environment.\nConfigure and run gulp tasks in NodeJS runtime and handle injection, CSS pre-processing, minifying, test-running, and building-sync.\u00a0\nDeveloped custom directives, Factories and Services in AngularJS and implemented code per coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used\u00a0Core\u00a0Java\u00a0such as Exceptions, and Collections.\u00a0\nExpertise in consuming Restful web services using Node JS, AngularJS and jQuery along with JSON parsing to implement AJAX call and render the response data to User Interface.\u00a0\nExtensively used Java 8 features such as lambda expressions, Parallel operations on collections, multithreading and for effective sorting mechanisms.\nUsed Streams and Lambda expressions available as part of Java 8 to store and process the data.\u00a0\nDesigned and developed the framework to consume the web services hosted in Amazon EC2instances.\u00a0\nWorked with AWS cloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nExperienced with event-driven and scheduled AWS Lambda functions to trigger various AWS resources.\nUsed AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application and Amazon Cloud Watch is used to monitor the application and to store the logging information.\u00a0\nMYSQL was used as the database for the application which was hosted in the cloud using Amazon RDS service.\u00a0\nConfigured and managed AWS Glacier, to move old data to archives based on retention policy of databases/ applications.\u00a0\nInvolved in AWS SQS to interact with queue and giving roles to it and involved in writing Custom policies.\nParticipated in troubleshooting issues on AWS, Netflix Eureka and Cloud environments.\nAnalysing of SOA based application with Solar/web service/apache ignite cache based systems for optimal design/usage.\nExperienced in implementing Micro Services, SOA with xml base web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach.\nWorked with the SPRING framework hibernate integration to maximize the Classical model view controller layer (MVC) Architecture.\u00a0\nImplemented SPRING MVC application framework to create and configure of Java beans using SPRING IOC and used SPRING Hibernate support, transaction management.\u00a0\nExperience in creating\u00a0RESTful\u00a0web\u00a0services\u00a0using Jersey,\u00a0spring\u00a0framework and JAX-RS.\nImplemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth1/2.\u00a0\nCreating REST based Web Services by establishing links using HATEOAS from spring based Applications.\nInvolved in developing API\u2019s and Rest API proxy using APIGEE edge and for sending mobile notifications.\nDeveloped the Web Services Client using REST, RSDL for verifying the new customer history to a connection.\nDeveloped DAOs (Data Access Object) using Hibernate as ORM to interact with DBMS - MySQL and Mongo DB.\nOptimized the full text search function by connecting to Mongo DB.\u00a0\nWorked with Docker to deploy Micro-services in modern containers to increase Isolation.\nWorked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. \nInvolved in Designing Kafka messaging queues.\u00a0\n Used MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nPerformed daily Night Build & Weekly Build & Release for the product using Ant, Maven build scripts.\nUsing JUnit test in Eclipse, developed Unit test cases and test suite, Curl was also implemented to test.\nUsed Jenkins as the integration tool and improved scalability of applications on cross-platforms.\nDeployed the Application EAR and RESTful Services on JBoss Application Server.\nInvolved in Production Support and Maintenance of the application and troubleshooting of Issues on JBoss by checking logs, payments etc.\u00a0\nEnvironment: Java/JDK, J2SE/J2EE, HTML5, CSS3, JavaScript, JQuery, Spring, Spring Boot, Spring Batch, Spring MVC, AngularJS, NodeJS, Ec2, S3, SDK, MySQL, SOA, JDBC, Hystrix Dashboard, AWS, Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN, JUnit, Jenkins, JBoss, Linux OS, MongoDB, GIT, PL/SQL, Docker, ANT, JIERA, Kafka, JMS.\nResponsibilities: \nResponsible for all stages of design, development, and deployment of applications.\nActive role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Ajax, Angular JS, React JS for developing presentation layer.\nCreated the AngularJS app using\u00a0Yeoman, Grunt and Bower and used Angular UI for component model.\nActively involved in using MVC, HTML5 to enable client-side date to meet specific criteria by applying various validation variables and used the\u00a0CSS classes to provide visual feedback on validation.\u00a0 \nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nAnalyze business requirements and develop various business delegates to integrate with Middleware services like JAX-WS using SOAP and REST.\u00a0\nWorked on\u00a0Rest\u00a0Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation.\u00a0\nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security and Oauth-1.0.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services.\u00a0\nUsed the Spring IOC feature to get Hibernate session factory and resolve other bean dependencies also used Spring framework AOP features and JDBC module features to persist the data to the database for few applications.\nUtilized spring core, AOP and\u00a0security\u00a0to build robust business operations with transactional support.\u00a0\nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nDeveloped the data access classes using JDBC and SQLquerylog4j for logging and SVN for version control.\nSound knowledge in SQL within Oracle, MySQL, MS-SQL Server 2012.\nImplemented the function to send and receive\u00a0AMQP\u00a0messages on\u00a0RabbitMQ\u00a0synchronously and asynchronously, and send\u00a0JMS\u00a0message to\u00a0Apache Active MQ\u00a0on the edge device.\nDeveloped unit and integration tests for existing\u00a0micro services\u00a0using JUnit, Mockito and Docker environments.\nDeveloped and Implemented ANT and MAVEN Scripts to automation of build process on MAVEN build tools to test the application manually and run the JUNIT Test suites.\nDeveloped ANT scripts to build and deploy the application in the WebSphere Application Server.\u00a0\nUsed JIRA tool for Issue/bug tracking, monitoring of work assignment in the system\u00a0\nLog4J was used to monitor the error logs and used GIT as version control tool.\u00a0\nEnvironment: Java,\u00a0J2SE/J2EE, JDK, RCP, AWS\u00a0SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP/Rest, Web Services, JavaScript, UML, Bower, HTML5, CSS, SASS, Sonar, WAS 8 WSDL, JIRA, JAX-WS, JAX-RS, MYSQL, JMS, Oracle, Angular JS, WebSphere, Spring, Spring Boot, Spring Batch, AJAX, jQuery, JUnit, Maven, ACTIVE MQ, Rabbit MQ.\nResponsibilities:\nContributed greatly to increase the code quality and productivity through Test Driven Development (TDD) and Agile Estimation and Planning.\u00a0\nUsed AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA.\nWorked extensively on the front-end side using JSP, HTML, CSS3, JavaScript and JQuery.\u00a0\nDeveloped HTML and JavaScript. Developed Scripts for\u00a0UNIX\u00a0platform deployment.\nResponsible for JAVA, J2SE/J2EE, JBPM, EL and Java FX coding / development.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nDesigned and developed\u00a0Web Services (SOAP, WSDL).\u00a0Created and compiled\u00a0XML Schema\u00a0to generate\u00a0Java Bean\u00a0classes using\u00a0Apache Axis.\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in\u00a0Java Multithreading\u00a0to cascade multiple changes on multiple records in only one transaction\nUsing Struts Framework developed and implemented the web-based application following the\u00a0MVC.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate, WebLogic.\nUsed spring framework for middle tier and Spring-hibernate for data access.\nUsed\u00a0Spring\u00a0MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used\u00a0Hibernate\u00a0as ORM to map\u00a0Java\u00a0classes to data base tables.\nImplemented J2EE patterns,\u00a0Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nDeveloped and Deployed the Application on Eclipse IDE and WebLogic Web Servers.\u00a0\nDeveloped build script using MAVEN to build, package, test and deployed the application in WebLogic.\u00a0\nUse WebLogic fuse for remote console login, JMX management and web server console.\nUsed Ant & maven scripts for build and deployment of the application.\u00a0\nUsed Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking.\u00a0\nCode walk through, modules integration and unit testing using JUnit and Mockito.\u00a0\nUsed\u00a0Log4J, Splunk\u00a0for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysing Business Requirements and handling it as per Requirements. \nProject coordination with other Development teams, System managers and web master and developed good working environment.\nEnvironment:\u00a0Java, JSP, Servlets, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services (SOAP/WSDL and REST), Multithreading, WebLogic, Mockito, Junit, Maven, Log4J, SVN, Oracle, UNIX.\nResponsibilities:\nInvolved in the analysis, design, and development and testing phases of Software Development\u00a0Life Cycle.\nDeveloped N-tier client-server business application software using Model View Controller (MVC) Architecture. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality Involved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs). \nUsed Hibernate in persistence layer and developed POJO's, Data Access Object to handle database operations.\nWorked on System\u00a0security\u00a0with the use of SSL (Secure socket layer), encryption and used role-based\u00a0security.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExpertise in developing reusable and interoperable Web service modules based on\u00a0micro services, SOA architecture using SOAP and RESTful and Preparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nUsed the spring validation and Tiles Framework in the presentation layer.\u00a0\nDeveloped user interface using JSP, Spring Tag Libraries to simplify the complexities of the application.\u00a0\nDeveloped user interface with Java Server Pages, Ajax support to speed up the application form filling.\u00a0\nWSDL has been used to expose the Web Services. \nUsed Apache Axis as the Web Service framework for creating and consuming Web Service clients using SOAP and WSDL.\u00a0\nSOAP has been used as a protocol to Communicate in the form of XML messages.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nDesigned various tables required for the project using Oracle database\u00a0\nUsed Apache Tomcat server for deploying the application.\n Involved in writing the Maven build file to build and deploy the application.\u00a0\nInvolved in writing JUnit Test Cases and Ant Build Script. \nUsed Log4J to capture the logging information.\nEnvironment:\u00a0Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, Apache Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven.\nResponsibilities:\nInvolved in all phases of project from analysis and requirement phase to delivering the project.\nWorked in a Waterfall environment and participated throughout the SDLC process. \nImplemented Struts MVC Design pattern for the Application for the front-end appearance and log in Screens.\nDeveloped applications using\u00a0Application Lifecycle Management\u00a0to deliver reliable applications.\nDeveloped the view-controller components using Servlet/JSPs, JavaScript, CSS and HTML.\nWrote client side validation in Java Script.\nInvolved in creating JSP pages for presentation of the data to the end user.\nDeveloped JSP / Action servlet classes\u00a0\nApplied J2EE design patterns such as MVC, Singleton, and Data Access Objects in the architecture\u00a0\nUsed JDBC as DAO class to persist the data on to Oracle Database.\nWrote ANT scripts to deploy the components on Jetty Application Server.\nDid regular code reviews and fixed major bugs without side effects.\nStrict adherence to Java coding standards.\nImplementing Log4j for logging and debugging.\nPrepared\u00a0JUnit\u00a0test cases and executed the test cases using\u00a0JUnit.\nUsed Firebug to keep track of issues.\nDeveloped the whole project on Eclipse IDE.\nInvolved in bug fixing during the System testing, Joint System testing and User acceptance testing.\nEnvironment: \nJava, HTML, JSP, Servlet, EJB, Struts, JDBC, Oracle 8i, WebSphere Application Server, ANT, JUnit, Java Script, Rational Rose, Dream Weaver, CSS, Ant, Log4j, Firebug, Eclipse.\nResponsibilities:\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nInvolved in development, testing and implementation of the complete business solution. \nUsed Java Servlets extensively and using JDBC for database access. \nDesigned and developed user interfaces using JSP, JavaScript and XHTML. \nUsed various J2EE design patterns like Singleton, Command Pattern for the implementation of the application. \nDesigned, coded and configured server side J2EE components like JSP, Servlets, JavaBeans, JDBC, JNDI, JTS, Java Mail API, XML. \nInvolved in database design and developed SQL Queries on MySQL. \nConfigured the product for different application servers. \nInvolved in client side validations using JavaScript.\nUsed Swing Layout managers and Swing components for creating desktop application.\nEnvironment: Java, JDBC, Servlets, Struts, JSP, Hibernate, Java Mail API, AJAX, HTML, XML, ANT, Log4J, CVS, Eclipse, Putty, MySQL, Apache Tomcat Server.",
  "size_bytes": 51327,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:28.121363",
  "clean_text": "candidate objective technically skilled qualified java programmer look position stack java programmer utilize proficiency skill create good interactive website professional summary year experience stack developer solid understanding phase software development lifecycle sdlc include analysis design development testing maintenance java ui application large enterprise customer strong programming skill java extensive ability develop scalable application experience develop web ui applications boot strap java script type script ajax jquery node js jquery ui spring mvc experience xml relate technology like xsl xsd xpath dtd xml schemas xml parsers like dom sax work lambda expression functional interface stream api time api improvements collection concurrency io improvement java hand experience amazon web services aws provisioning good knowledge aws service like elastic compute cloud simple storage service glacier auto scaling iam dynamo db virtual private cloud vpc cloud watch aws cli cloud formation cloud elastic beanstalk elb elastic load balancers rds sns swf ses sqs ebs etc experience aws dynamo db capture modification db extensive work amazon web services like elastic beanstalk ami linux add permission aws sqs interact queue involve write custom policy experience eureka servers deploy thorough knowledge micro service architecture experience implement design pattern design develop micro service business component java spring boot implement rest web service base restful api expertise design development enterprise level spring base web application spring rest hibernate ejb struts servlets jsp user interface applications experience spring framework application like spring core spring aop spring ioc spring mvc spring batch spring jpa spring security spring boot integration micro service exist system architecture proficient spring aop security event handling spring mvc spring ioc container develop dao data access object hibernate orm interact dbms like mysql postgresql sql server pl sql g nosql database like mongodb integrated hibernate context file configure hibernate session factory good experience develop web services restful api jersey framework soap spring ws experience web service soap restful scale application well boa verse develop soa service consume service work service oriented architecture soa apache axis web service use soap rest wsdl exposure jaxb jax rpc jax rs jax ws build hypermedia drive implement connector hateoas spring rest service improve overall performance multithreading collection synchronization exception handling strategy apache integration data processing spring multi thread message consumption work zookeeper maintain service extensive experience npm bower grunt gulp build process experience docker image containers push pull spring boot jenkins cicd ai perform api functional testing postman swagger experience message stream apache kafka experience large scale distribute system jms message queues spring jms integration hand experience message broker active mq rabbitmq hand experience netflix cloud fall technology like eureka hystrix ribbon strongly associate usage selenium jenkins junit curl unit system testing experience tool like jira bug tracking experience cicd ant maven gradle jenkins cvs git github experience web application server web sphere web logic jetty jboss tomcat server experience perform unit testing integration testing generation test case junit experience work version control tool like svn cvs git good exposure ide like eclipse sublime text intellij net beans manage platform year agile scrum waterfall practice technical skill professional experience responsibility work highly dynamic agile environment participate scrum sprint meeting develop new front ground javascript jquery bootstrap angularjs nodejs end build environment configure run gulp task nodejs runtime handle injection css pre processing minifying test run building sync develop custom directive factories services angularjs implement code code standard create angularjs controller isolate scope perform operation extensively core java exception collection expertise consume restful web service node js angularjs jquery json parse implement ajax render response datum user interface extensively java feature lambda expression parallel operation collection multithreade effective sort mechanism streams lambda expression available java store process datum design develop framework consume web service host amazon work aws cloud service create instance provide role participate write custom policy deploy application elastic bean stalk experience event drive schedule aws lambda function trigger aws resource aws sdk connection amazon bucket object storage service store retrieve medium file relate application amazon cloud watch monitor application store log information mysql database application host cloud amazon rds service configure manage aws glacier old datum archive base retention policy application involve aws sqs interact queue give role involve write custom policy participate troubleshoot issue aws netflix eureka cloud environment analyse soa base application solar web service apache ignite cache base system optimal design usage experience implement micro services soa xml base web services soap uddi wsdl approach work spring framework hibernate integration maximize classical model view controller layer mvc architecture implement spring mvc application framework create configure java bean spring ioc spring hibernate support transaction management experience create restful web service jersey spring framework jax rs implement restful web service retrieve datum client rest api call angular js parse datum project client handle security authorization spring security create rest base web services establish link hateoas spring base applications involve develop api rest api proxy apigee edge send mobile notification develop web services client rest rsdl verify new customer history connection develop dao data access object hibernate orm interact dbms mysql mongo db optimize text search function connect mongo db work docker deploy micro service modern container increase isolation work thread handle maintain continuity execution extensively implement multithreading concept handle transaction management isolation propagation level involve designing kafka message queue maven build process generate documentation reporting add dependency perform daily night build weekly build release product ant maven build script junit test eclipse developed unit test case test suite curl implement test jenkins integration tool improve scalability application cross platform deploy application ear restful services jboss application server involve production support maintenance application troubleshooting issue jboss check log payment etc environment java jdk javascript jquery spring spring boot spring batch spring mvc angularjs nodejs sdk mysql soa jdbc hystrix dashboard aws netflix ribbon hibernate rest json restful eclipse maven junit jenkins jboss linux os mongodb git pl sql docker ant jiera kafka jms responsibility responsible stage design development deployment application active role test driven development term tdd apart agile software development define construct layer server object client interface base design pattern design analyze develop end end servlets bootstrap designing ajax angular js react js develop presentation layer create angularjs app yeoman grunt bower angular ui component model actively involve mvc enable client date meet specific criterion apply validation variable css class provide visual feedback validation develop soap base jax ws web service interface integrate multiple system code usability analyze business requirement develop business delegate integrate middleware service like jax ws soap rest work rest web service backend service oracle database service restful web service jersey jax rs implementation develop restful web service system interact system secure service spring security spring mvc component implement business layer spring boot micro service spring ioc feature hibernate session factory resolve bean dependency spring framework aop feature jdbc module feature persist datum database application utilize spring core aop security build robust business operation transactional support configure hibernate spring orm spring hibernate integration good result develop data access class jdbc log svn version control sound knowledge sql oracle mysql ms sql server implement function send receive amqp message rabbitmq synchronously asynchronously send jms message apache active mq edge device develop unit integration test exist micro service junit mockito docker environment develop implement ant maven scripts automation build process maven build tool test application manually run junit test suite develop ant script build deploy application websphere application server jira tool issue bug tracking monitoring work assignment system monitor error log git version control tool environment java jdk rcp aws sdk git swing jfc spring hibernate core java soap rest web services javascript uml bower css sass sonar wsdl jira jax ws jax rs mysql jms oracle angular js websphere spring spring boot spring batch ajax jquery junit maven active mq rabbit mq responsibility contribute greatly increase code quality productivity test driven development tdd agile estimation planning angularjs create view hook model dom synchronize datum server spa work extensively end jsp html javascript jquery develop html javascript develop script unix platform deployment responsible java jbpm el java fx coding development twitter bootstrap create responsive web page display properly different screen size implement soa develop rest base web service apache axis design develop web services soap wsdl create compile xml schema generate java bean class apache axis involve system analysis design methodology object oriented design development ooad methodology capture model business requirement involve java multithreading cascade multiple change multiple record transaction struts framework develop implement web base application follow mvc implement service layer spring transaction log interceptor fix bug develop new enhancement java spring hibernate weblogic spring framework middle tier spring hibernate datum access spring mvc web module involve design development new action class interact business logic hibernate orm map java class datum base table implement pattern data access object dao session facade business delegate value object develop deploy application eclipse ide weblogic web servers develop build script maven build package test deploy application weblogic use weblogic fuse remote console login jmx management web server console ant maven script build deployment application eclipse ide tool develop application jira bug issue tracking code walk module integration unit testing junit mockito splunk log trace message implement test scripts base user requirements specify business requirement document analyse business requirements handle requirements project coordination development team system manager web master develop good working environment environment java jsp servlets spring aop ioc spring mvc hibernate xml jbpm html jdbc web service web services soap wsdl rest multithreading weblogic mockito junit maven svn oracle unix responsibility involve analysis design development testing phase software development life cycle developed n tier client server business application software model view controller mvc architecture extensive use core java collections generics exception handling design patterns functionality involve write different design patterns like filter action business delegate service locater data transfer objects dto data access objects dao hibernate persistence layer develop pojo data access object handle database operation work system security use ssl secure socket layer encryption role base security json light nature chief source communication server application expertise develop reusable interoperable web service module base micro service soa architecture soap restful preparation java jsp code standard checklist involve development servlet struts action class business objects web services involve write jsp bean logic html iterate tags spring validation tiles framework presentation layer develop user interface jsp spring tag libraries simplify complexity application develop user interface java server pages ajax support speed application form filling wsdl expose web services apache axis web service framework create consume web service client soap wsdl soap protocol communicate form xml message implement expose micro service base restful api utilize spring boot spring mvc hibernate transaction management hibernate batch transactions hibernate cache concept develop struts action forms action class perform action mapping strut design table require project oracle database apache tomcat server deploy application involve write maven build file build deploy application involve write junit test case ant build script capture log information environment java jsp html css servlets xml soap wsdl oracle eclipse jax r jax ws pl sql apache server struts dao aop spring mvc spring hibernate junit maven responsibility involve phase project analysis requirement phase deliver project work waterfall environment participate sdlc process implement struts mvc design pattern application end appearance log screens develop application application lifecycle management deliver reliable application develop view controller component servlet jsp javascript css html write client validation java script involve create jsp page presentation datum end user develop jsp action servlet class applied design pattern mvc singleton data access objects architecture jdbc dao class persist datum oracle database write ant script deploy component jetty application server regular code review fix major bug effect strict adherence java code standard implement logging debugging prepare junit test case execute test case junit firebug track issue develop project eclipse ide involve bug fixing system testing joint system testing user acceptance testing environment java html jsp servlet ejb strut jdbc oracle websphere application server ant junit java script rational rose dream weaver css ant firebug eclipse responsibility create user friendly gui interface web page html css jsp involve development testing implementation complete business solution java servlets extensively jdbc database access design develop user interface jsp javascript xhtml design pattern like singleton command pattern implementation application design code configure server component like jsp servlets javabeans jdbc jndi jts java mail api xml involve database design develop sql queries mysql configure product different application server involve client validation javascript swing layout manager swing component create desktop application environment java jdbc servlets struts jsp hibernate java mail api ajax html xml ant cvs eclipse putty mysql apache tomcat server"
}