{
  "filename": "Yugesh_Resume.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Yugesh_Resume.docx",
  "text": "Yugesh\n+1(515)-650-2459\nyugeshm4@gmail.com\nPROFESSIONAL SUMMARY\nAround 8 years of experience in Object Oriented Programming, design and development of Multi-Tier distributed, Enterprise application using Java & J2EE technologies.\nWell versed with complete Software Development Life Cycle (SDLC) using various methodologies like\u00a0Agile Methodology (Scrum, XP) and Waterfall.\nExpertise in client-side design and validations using HTML5, CSS3, JavaScript, JQuery, Ajax, Angular JS, Bootstrap and Node JS.\nImplemented modules using Core Java APIs, Java collection, Java 1.8 Streams, multi-threading, and object-oriented design principles.\u00a0\nExperience in Java 1.8 Lambda expressions, filters, functional interfaces and Streams API.\nDeveloped web-based enterprise applications using Core Java, J2EE, Servlets, JSP, JSF, JDBC, Hibernate, Web Services (SOAP and REST), MVC Framework (Struts, Spring MVC) and SQL.\n\u00a0Handled operations and maintenance support for AWS cloud resources which includes launching, maintaining and troubleshooting\u00a0EC2 instances,\u00a0S3buckets,\u00a0Auto Scaling,\u00a0Dynamo DB, AWS IAM, Elastic Load Balancers (ELB) and Relational Database Services (RDS).\nExcellent in deploying the applications in\u00a0AWS\u00a0as\u00a0EC2\u00a0instances and create snapshots for the data that must be stored in\u00a0AWS\u00a0S3.\nHaving experience with Cloud Computing environment like Amazon Web Services (AWS), Docker Containers.\nExperienced first-hand practices for integrating Micro services into existing system architecture.\nExperienced in implementing Micro services, Service Oriented Architecture (SOA) with XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach.\u00a0\nProficient in implementing various Java design patterns like\u00a0MVC,\u00a0Session Facade,\u00a0Data Access Object (DAO),\u00a0Factory,\u00a0Singleton,\u00a0Data Transfer Object, and Front Controller.\nExperience in application development using J2EE technologies like\u00a0EJB, JPA, JTA, JMS, JNDI, JAX-WS and JAX-RS.\nExperience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL (Hibernate Query Language).\nExpert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics.\nStrong working experience in XML, XSD, XSL/XSLT and DTD, parsers like DOM and SAX using JAXP API\nExperience in creating RESTful web services using Jersey, Spring framework and JAX-RS.\nExperience in design and development of robust and highly scalable web service platforms and API\u2019s based on\u00a0REST\u00a0and\u00a0SOAP\u00a0for e-commerce applications using\u00a0AXIS,\u00a0WSDL, UDDI, XML, JAX-WS, JAX-RS, JAXB, JAX-RPC\u00a0technologies\u00a0and\u00a0Jersey\u00a0frameworks.\nStrong skills in\u00a0RDBMS\u00a0implementation and development using\u00a0Oracle, IBM DB2\u00a0Database Servers and hands on experience with\u00a0SQL, PL/SQL.\nExperienced in implementation of JMS in order to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue.\nGood experience writing application deployment scripts using Shell Scripting. Worked on UNIX, LINUX to move the project into production environment.\u00a0\nStrong\u00a0SOA\u00a0and\u00a0Web\u00a0Services like REST and SOAP\u00a0experience.\nExpertise in testing with Log4j,\u00a0JUnit\u00a0using tools like\u00a0JMeter.\nDomain knowledge and business expertise in\u00a0Banking,\u00a0finance,\u00a0E-Commerce,\u00a0Insurance.\nSubversion\u00a0SVN, CVS, GIT\u00a0and Visual Source Safe as versioning software tools.\u00a0\nHands on experience in building tools like\u00a0ANT, Maven, Gradle.\nInvolved in issue tracking and agile project management using\u00a0JIRA.\nExperience in developing applications on\u00a0Windows, UNIX and Linux platforms.\nHighly experience with Java complaint\u00a0IDE\u2019s\u00a0like\u00a0STS,\u00a0Eclipse,\u00a0Intellij\u00a0and\u00a0RAD.\u00a0\nExcellent\u00a0analytical\u00a0and\u00a0critical thinking, creative problem solving, quick learning, interpersonal and client interfacing skills.\nGood communication, presentation and interpersonal abilities and a participating group member.\nTECHNICAL SKILLS\nPROFESSIONAL EXPERIENCE\nCharter Communications\t\t\t\t\t\t                                                Jan\u201917 \u2013 Till Date\nStamford, CT\nFull Stack Java/J2EE Developer\nDescription: Charter Communications is America\u2019s fastest growing TV, internet and voice company. We\u2019re committed to integrating the highest quality service with superior entertainment and communications products. Charter is at the intersection of technology and entertainment, facilitating essential communications that connect 24 million residential and business customers in 41 states. Our commitment to serving customers and exceeding their expectations is the bedrock of Charter\u2019s business strategy and it\u2019s the philosophy that guides our 90,000 employees.\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development, and testing.\nDeveloped the view-controller components using\u00a0JSPs,\u00a0HTML5,\u00a0CSS3,\u00a0Ajax,\u00a0JavaScript (jQuery).\nImplemented routing logic and navigation from screen to screen and implemented login functionality on the client side in\u00a0AngularJS.\nUsed Java 1.8 features like stream and Lambda expressions.\nMaintained Interface compatibility and concurrency in the project using Java 1.8 new features like default, static methods and Concurrency API.\nImplemented the REST API's and data transformers using the Java connector which involves the Java 1.8 features\u00a0Lambda\u00a0and Streams in particular.\nHands-on experience in developing integration with Elastic search in any of the programming languages like Java and JavaScript. Having knowledge of advance reporting using Elastic search and NodeJS.\nImplemented\u00a0core\u00a0features of\u00a0AngularJS\u00a0framework such as dependency\u00a0Injection,\u00a0Data-binding,\u00a0Filters, Directives, Templates, Services and Deep Linking Designing.\nDeveloped the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS.\nDesigned and developed Micro Services business components using Spring.\nInvolved in the development of\u00a0Micro Services\u00a0for all the models using combination of Spring Boot and Spring Security.\nResponsible for creating an instance on Amazon EC2 (AWS) and deployed the application on it.\nDeveloped API\u2019s to read and publish data from Elastic Search cluster using native Java Transport client as well as REST client. Worked on Spring Integration with the Elastic Search.\nUsed Spring MVC framework for implementing Model-View- Controller (MVC)\u00a0architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy.\nUsed Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc.\nUsed Spring Batch for processing large amount of data like transaction management, job processing, resource management and logging.\nSecured the API's by implementing OAuth 2.0 token based authentication/authorization scheme using Spring Security.\nDesigned and developed third-party Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol.\nUsed\u00a0Hibernate\u00a0ORM\u00a0framework\u00a0as persistence engine and wrote\u00a0Hibernate\u00a0Queries to automate the mapping between\u00a0Oracle\u00a0database and\u00a0Objects\u00a0in\u00a0Java.\nInvolved in writing SQL and Stored Procedures for handling complex queries with help of TOAD and access them through Java Programs from Oracle Database.\nWorked with MongoDB to store non-relational data into collection and retrieve them whenever required.\nUsed WebLogic server\u00a0to route our JMS queue messages to different business floors and configured routes in WebLogic and used JMS in e-mail notification.\nWorked on setting up Maven scripts to build, package, and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins.\nHands on Coding to build REST Micro Services using Spring Cloud, Oracle, XSD, JSON, Spring Config, and Jenkins.\nWorked on developing RESTful endpoints to cache application specific data in in-memory data clusters like REDIS and exposed them with RESTful endpoints.\nFocused on\u00a0Test\u00a0Driven\u00a0Development\u00a0there by creating detailed\u00a0JUnit\u00a0tests for every single piece of functionality before writing the functionality.\nWorked on Log4J to validate functionalities and Mockito framework, JUnit for unit testing\nPerformed automation testing and authored test scripts using Selenium\u00a0Web Driver, Selenium Grid\u00a0and JUnit.\nWorked in Agile TDD environment using SDLC tools like GIT, Jira, Jenkins, and Maven for build packaging and deployments of the application components.\nEnvironment: Agile(SCRUM), HTML5, CSS3, JavaScript, JQuery, Ajax, Bootstrap, AngularJS, AWS, Micro Services, Hibernate, Spring, MongoDB, Spring Batch, Spring Boot, Spring Security, XML, GIT, JSP, Spring MVC, JDBC, Mockito, JUnit, Maven, IBM WebSphere, BackboneJS, Selenium, Restful, Log4J, SOA, Java Server Pages, JIRA, Spring Security, Jenkins and STS.\nDescription: UnitedHealth Group is the most diversified health care company in the United States and a leader worldwide in helping people live healthier lives. Optum is a Health Services platform, focuses to improve the health care system itself including population health management, care delivery and improving the clinical and operating elements of the system.\nResponsibilities:\nWorked on High level and low-level system design, planning, estimation and implementation. \nDeveloped presentation layer using JSP, HTML5, CSS3 and client validation using JavaScript, JSON. \nUsed two-way data binding features of AngularJS to implement Data binding to bind various server controls to the data from database. \nImplemented animation and styling using CSS3 and JQuery. \nWorked on High level and low-level system design, planning, estimation and implementation. \nDeveloped presentation layer using JSP, HTML5, CSS3 and client validation using JavaScript, DOM. \nUsed NodeJS for building web applications with client-server architecture, where both can initiate communication in two-way connections and allow them to exchange data.\u00a0\nInvolved in implementing the Micro Services based on Restful API utilizing Spring Boot with Spring MVC.\nUsed Web Services for creating rate summary and used WSDL and SOAP messages for getting useful plans from different module.\nImplemented Core Java concepts like Multithreading, Concurrency, Exception Handling and Collections whenever necessary. \nDesigned and integrated the full-scale Spring / Hibernate persistence solution with the application architecture.\nWorked on development and implementation of the MVC Architectural pattern using Spring Framework including JSP, and Servlets. \nInvolved in identifying and implementation of different J2EE design patterns like Service Locator, Business Delegate, and DAO. \nDeveloped the DAO layer for the application using Spring, Hibernate template support.\nImplemented Object Relational Persistence (Hibernate) for the domain model. \nInvolved in design and development of the Hibernate Domain Model for the services. \nWorked on web services and associated business modules integration.\nInvolved in writing JSP components. Used JSTL Tag library to create standard dynamic web pages. \nWorked on XML and JSON for transferring and retrieving data between different applications. \nWorked on generating the web services classes by using Service Oriented Architecture (SOA), WSDL, UDDI and SOAP. \nWorked in wide-area network to maintain all the device related data onto MYSQL database. \nExperienced in RDBMS such as Oracle, Cassandra, MySQL, and IBM DB2 databases. Used NoSQL DB database MongoDB for proof of concept and having experience in create a Stored Procedures and having experience in Remote Procedure call (RPC) and Redis.\nUsed Rabbit MQ message broker to route messages to the clients across the cloud network.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors, and indexes in Data Access Layer. \nCollaborated with testers and developers and prepared test plans for producing high quality software applications. \nExperience in using JUnit and build tools such as MAVEN. Worked on Log4j for logging errors, messages and performance logs and SVN for version control. \nDeployed and tested the application in UNIX on IBM Web Logic Application Server. \nEnvironment: Agile Methodology, Java, J2EE, HTML5, CSS3, JavaScript, JQuery, Ajax, AngularJS, JSON, JSP, Struts, Micro Services, Spring, Hibernate, SOA, SOAP, WSDL, RabbitMQ, Multithreading, Concurrency, Exception Handling, JDBC, Oracle, Maven, JUnit, Log4J, SVN, JAXB, XML, Web Logic, Unix/Linux,\nSunTrust Bank\t\t\t\t\t\t\t\t\t       Nov\u201913 \u2013 July\u201915\nAtlanta, GA                                  \nJava/J2EE Developer     \t                                      \nDescription: SunTrust Banks, Inc. is one of the nation\u2019s largest and strongest financial holding companies. This project ECorp, Business online banking lets you check balances, transfer funds, see images of cancelled checks, view previous checking and finally to set your own security levels.\nResponsibilities:\nWorked on High level and low-level system design, planning, estimation and implementation. \nDeveloped presentation layer using JSP, HTML5, CSS3 and client validation using JavaScript, JSON. \nUsed two-way data binding features of AngularJS to implement Data binding to bind various server controls to the data from database. \nImplemented animation and styling using CSS3 and JQuery. \nWorked on High level and low-level system design, planning, estimation and implementation. \nDeveloped presentation layer using JSP, HTML5, CSS3 and client validation using JavaScript, DOM. \nUsed NodeJS for building web applications with client-server architecture, where both can initiate communication in two-way connections and allow them to exchange data.\u00a0\nInvolved in implementing the Micro Services based on Restful API utilizing Spring Boot with Spring MVC.\nUsed Web Services for creating rate summary and used WSDL and SOAP messages for getting useful plans from different module.\nImplemented Core Java concepts like Multithreading, Concurrency, Exception Handling and Collections whenever necessary. \nDesigned and integrated the full-scale Spring / Hibernate persistence solution with the application architecture.\nWorked on development and implementation of the MVC Architectural pattern using Spring Framework including JSP, and Servlets. \nInvolved in identifying and implementation of different J2EE design patterns like Service Locator, Business Delegate, and DAO. \nDeveloped the DAO layer for the application using Spring, Hibernate template support.\nImplemented Object Relational Persistence (Hibernate) for the domain model. \nInvolved in design and development of the Hibernate Domain Model for the services. \nWorked on web services and associated business modules integration.\nInvolved in writing JSP components. Used JSTL Tag library to create standard dynamic web pages. \nWorked on XML and JSON for transferring and retrieving data between different applications. \nWorked on generating the web services classes by using Service Oriented Architecture (SOA), WSDL, UDDI and SOAP. \nWorked in wide-area network to maintain all the device related data onto MYSQL database. \nExperienced in RDBMS such as Oracle, Cassandra, MySQL, and IBM DB2 databases. Used NoSQL DB database MongoDB for proof of concept and having experience in create a Stored Procedures and having experience in Remote Procedure call (RPC) and Redis.\nUsed Rabbit MQ message broker to route messages to the clients across the cloud network.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors, and indexes in Data Access Layer. \nCollaborated with testers and developers and prepared test plans for producing high quality software applications. \nExperience in using JUnit and build tools such as MAVEN. Worked on Log4j for logging errors, messages and performance logs and SVN for version control. \nDeployed and tested the application in UNIX on IBM Web Logic Application Server. \nEnvironment: Agile Methodology, Java, J2EE, HTML5, CSS3, JavaScript, JQuery, Ajax, AngularJS, JSON, JSP, Struts, Micro Services, Spring, Hibernate, SOA, SOAP, WSDL, RabbitMQ, Multithreading, Concurrency, Exception Handling, JDBC, Oracle, Maven, JUnit, Log4J, SVN, JAXB, XML, Web Logic, Unix/Linux,\nDescription: Vibe is internal call center project for Verizon Telecom. It provides information landlines and mobile calling plans. Vibe having four modules likes Oncall, Authoring, Admin, and QA. Oncall module give information about customer related questions.\nResponsibilities:\nDesigned use case diagrams, data flow diagrams, component diagram, class diagram, and sequence diagram for the given requirement. \nImplemented GUI using HTML, CSS, JSP, AJAX, TILES, JSTL, Struts Tag-Libs and Portal Pages.\nDeveloped the application using JSP for the presentation layer along with JavaScript for the client-side validations.\nWorked to maintain\u00a0loose coupling between layers published the business layer as services and injected the necessary dependent components using\u00a0Spring IOC\u00a0and published cross cutting concerns like Logging, User Interface exceptions, Transactions using\u00a0Spring AOP.\nDesign & Development of page flows, Web logic Workshop.\nInvolved in the design and development of\u00a0JSR-286 compliant Portlets using frameworks like Spring MVC\nDeveloped and implemented Content Publish using Site Studio, Content Publisher.\nUsing RIDC Interface get content details and Create Content through application.\nImplemented business class logic using Factory pattern.\nImplemented DAO layer to access hibernate session factory using spring hibernate template, Hibernate Search Queries and written search, persistence, deletion for the persistence objects.\nDeveloped Web Services client and Service using SOAP Protocol for sending requests and receiving responses. \nCreated JUnit test cases for unit testing and implemented application logging feature using log4J.\nUsed Rational Clear Case for version control and Clear Quest for bug tracking.\nEnvironment: Java/J2EE, HTML, CSS, Ajax, JavaScript, JSP, JSTL, Spring, Struts, Hibernate, JDBC, JNDI, Factory pattern, workshop, JSR-168, JSR-268, XML, XSLT, UDDI, WSDL, Log4J, JVM, Oracle, UCM, SVN, LDAP, Windows XP, UNIX, UML, Rational Clear Case, Clear Quest, Apache Tomcat, Web logic Server.\nDescription: The Company provides software products, IT services and business process outsourcing for a variety of industries including insurance, banking, capital markets, manufacturing, and retail. The company also sells services such as Business Intelligence and analytics, testing and compliance, application development and maintenance.\nResponsibilities:\nReviewed the functional, non-functional requirements and high-level designs.\nWorked with Waterfall Methodologies.\nBuilt the application based on Java enhancements of Exceptions and Collections at service layer.\nDeveloped application using Struts MVC, Spring Dependency Injection and Hibernate as the ORM tool.\nUsed different design patterns like Factory Pattern, Singleton pattern to have good maintenance.\nDeveloped web pages using HTML, CSS, and JavaScript.\nProduced SOAP Web Service using Apache Axis Generated WSDL files for the Service that served XML data and worked with XPath when need to identify objects in the XML.\nFor logging and other functions used Spring AOP and Spring IOC Framework to implement them.\nSoapUI is used for web services testing.\nDeveloped Multi-Threaded/Concurrent applications and Unix Shell Scripting.\nImplemented Collections for managing the dynamic data and other Core Java APIs.\nCreated functions and Stored Procedures in Oracle SQL/PL-SQL database.\nDeveloped lookup tables and Views to speed up queries.\nUsed SLF4j for debugging the application at all levels of application like Service layer, controller layer, DAO layer.\nTested the functionalities of the business using JUnit at developing level before committing to QA team.\nDeveloped and deployed the web application EAR files on to Apache Tomcat Server. \nUsed Jenkins as build management tool.\nUsed Tortoise SVN as version control tool.\nWorked in Quality analysis (QA) and testing.\nResolved bugs/defects in application by coordinated with team members of the project to assure a positive outcome.\nUsed Eclipse IDE to integrate the different frameworks to build the overall application.\nEnvironment: Java, HTML, CSS, JavaScript, Spring DI, Struts MVC, Spring AOP, Hibernate, Oracle SQL, PL/SQL, Stored Procedures, XML, Multi-Threaded/Concurrent, Collections, SOAP, JAX-B, JAX-WS, SoapUI, JUnit, Factory Pattern, Singleton Design Patterns, SLF4j, JVM, Apache Tomcat, Jenkins, Kanban Trello, Tortoise SVN, Eclipse IDE, Waterfall. \nDescription: The objective of this project is to implement a web based front end system which can be used by the employees, managers and higher-level management having specific role permissions for effective processing of day to day business activities in the company like leave management, project management and resource management etc.\nResponsibilities:\nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture.\nDesigned the user interfaces using JSPs, developed custom tags, and used JSTL Tag-lib.\nDeveloped various java business classes for handling different functions.\nDeveloped controller classes using Struts and tiles API\nInvolved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use case transaction diagrams.\nParticipated in design and code reviews\nDeveloped User Interface using AJAX in JSP and performed client-side validation\nDeveloped JUnit test cases for all the developed modules. Used SVN as version control\nEnvironment: Java, J2EE, JSP, Struts 1.x, JNDI, DB2, HTML, XML, DOM, SAX, ANT, AJAX, Rational Rose, JVM, Eclipse Indigo 3.5, SOAP, Apache Tomcat, Oracle 10g, LOG4J, SVN.",
  "size_bytes": 51600,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:16:03.595714",
  "clean_text": "yugesh professional summary year experience object oriented programming design development multi tier distribute enterprise application java technology verse complete software development life cycle sdlc methodology like agile methodology scrum xp waterfall expertise client design validation javascript jquery ajax angular js bootstrap node js implement module core java api java collection java streams multi threading object orient design principle experience java lambda expression filter functional interface streams api develop web base enterprise application core java servlets jsp jsf jdbc hibernate web services soap rest mvc framework struts spring mvc sql handle operation maintenance support aws cloud resource include launch maintain troubleshoot instance auto scaling dynamo db aws iam elastic load balancers elb relational database services rds excellent deploy application aws instance create snapshot datum store aws have experience cloud computing environment like amazon web services aws docker containers experienced hand practice integrate micro service exist system architecture experience implement micro service service oriented architecture soa xml base web services soap uddi wsdl approach proficient implement java design pattern like mvc session facade data access object dao factory singleton data transfer object controller experience application development technology like ejb jpa jta jms jndi jax ws jax rs experience persistence framework like hibernate jpa mapping java class database hql hibernate query language expert core java strong understanding garbage collector collections multithreading event handling exception handling generics strong working experience xml xsd xsl xslt dtd parser like dom sax jaxp api experience create restful web service jersey spring framework jax rs experience design development robust highly scalable web service platform api base rest soap e commerce application axis wsdl uddi xml jax ws jax rs jaxb jax rpc technology jersey framework strong skill rdbms implementation development oracle ibm database servers hand experience sql pl sql experience implementation jms order exchange information reliable channel asynchronous way active mq rabbit mq message queue good experience write application deployment script shell scripting work unix linux project production environment strong soa web services like rest soap experience expertise testing junit tool like jmeter domain knowledge business expertise banking finance e commerce insurance subversion svn cvs git visual source safe versione software tool hand experience building tool like ant maven gradle involve issue tracking agile project management jira experience develop application windows unix linux platform highly experience java complaint ide like sts eclipse intellij rad excellent analytical critical thinking creative problem solve quick learning interpersonal client interfacing skill good communication presentation interpersonal ability participate group member technical skills professional experience charter communications till date stamford ct stack java developer description charter communications america fast grow tv internet voice company committed integrate high quality service superior entertainment communication product charter intersection technology entertainment facilitate essential communication connect million residential business customer state commitment serve customer exceed expectation bedrock charter business strategy philosophy guide employee responsibility involve phase software development life cycle sdlc requirement gathering modeling analysis design development testing develop view controller component jsp ajax javascript jquery implement route logic navigation screen screen implement login functionality client angularjs java feature like stream lambda expression maintain interface compatibility concurrency project java new feature like default static method concurrency api implement rest api datum transformer java connector involve java feature lambda streams particular hand experience develop integration elastic search programming language like java javascript have knowledge advance reporting elastic search nodej implement core feature angularjs framework dependency injection data bind filters directives templates services deep linking designing develop monolithic application involve migrate exist monolithic application micro service architecture base restful service deployment aw spring cloud aws design develop micro services business component spring involve development micro services model combination spring boot spring security responsible create instance amazon aws deploy application develop api read publish datum elastic search cluster native java transport client rest client work spring integration elastic search spring mvc framework implement model controller mvc architecture web tier level isolate layer application complexity integration reduce maintenance easy spring aop solve crosscut concern like keep log datum transaction detail etc spring batch process large datum like transaction management job processing resource management logging secure api implement oauth token base authentication authorization scheme spring security design develop party payment service offer users convenient payment methods base oauth protocol hibernate orm framework persistence engine write hibernate queries automate mapping oracle database object java involve write sql store procedures handle complex query help toad access java programs oracle database work mongodb store non relational datum collection retrieve require weblogic server route jms queue message different business floor configure route weblogic jms e mail notification work set maven script build package deploy application code target weblogic application servers work continuous integration server like jenkins hand coding build rest micro services spring cloud oracle xsd json spring config jenkins work develop restful endpoint cache application specific datum memory data cluster like redis expose restful endpoint focus test driven development create detailed junit test single piece functionality write functionality work validate functionality mockito framework junit unit test performed automation testing author test script selenium web driver selenium grid junit work agile tdd environment sdlc tool like git jira jenkins maven build packaging deployment application component environment javascript jquery ajax bootstrap angularj aws micro services hibernate spring mongodb spring batch spring boot spring security xml git jsp spring mvc jdbc mockito junit maven ibm websphere backbonejs selenium restful soa java server pages jira spring security jenkins sts description unitedhealth group diversified health care company united states leader worldwide help people live healthy life optum health services platform focus improve health care system include population health management care delivery improve clinical operating element system responsibility work high level low level system design planning estimation implementation develop presentation layer jsp client validation javascript json way datum bind feature angularjs implement data bind bind server control datum database implement animation styling jquery work high level low level system design planning estimation implementation develop presentation layer jsp client validation javascript dom nodej building web application client server architecture initiate communication way connection allow exchange datum involve implement micro services base restful api utilize spring boot spring mvc web services create rate summary wsdl soap message get useful plan different module implement core java concept like multithreading concurrency exception handling collection necessary design integrate scale spring hibernate persistence solution application architecture work development implementation mvc architectural pattern spring framework include jsp servlets involve identifying implementation different design pattern like service locator business delegate dao develop dao layer application spring hibernate template support implement object relational persistence hibernate domain model involve design development hibernate domain model service work web service associate business module integration involve write jsp component jstl tag library create standard dynamic web page work xml json transfer retrieve datum different application work generate web service class service oriented architecture soa wsdl uddi soap work wide area network maintain device relate datum mysql database experience rdbms oracle cassandra mysql ibm database nosql db database mongodb proof concept have experience create store procedure have experience remote procedure rpc redis rabbit mq message broker route message client cloud network experience write complex pl sql query join stored procedures functions triggers cursors index data access layer collaborate tester developer prepared test plan produce high quality software application experience junit build tool maven work log error message performance log svn version control deploy test application unix ibm web logic application server environment agile methodology java javascript jquery ajax angularj json jsp struts micro services spring hibernate soa soap wsdl rabbitmq multithreading concurrency exception handling jdbc oracle maven junit svn jaxb xml web logic unix linux suntrust bank atlanta ga java developer description suntrust banks nation large strong financial hold company project ecorp business online banking let check balance transfer fund image cancel check view previous checking finally set security level responsibility work high level low level system design planning estimation implementation develop presentation layer jsp client validation javascript json way datum bind feature angularjs implement data bind bind server control datum database implement animation styling jquery work high level low level system design planning estimation implementation develop presentation layer jsp client validation javascript dom nodej building web application client server architecture initiate communication way connection allow exchange datum involve implement micro services base restful api utilize spring boot spring mvc web services create rate summary wsdl soap message get useful plan different module implement core java concept like multithreading concurrency exception handling collection necessary design integrate scale spring hibernate persistence solution application architecture work development implementation mvc architectural pattern spring framework include jsp servlets involve identifying implementation different design pattern like service locator business delegate dao develop dao layer application spring hibernate template support implement object relational persistence hibernate domain model involve design development hibernate domain model service work web service associate business module integration involve write jsp component jstl tag library create standard dynamic web page work xml json transfer retrieve datum different application work generate web service class service oriented architecture soa wsdl uddi soap work wide area network maintain device relate datum mysql database experience rdbms oracle cassandra mysql ibm database nosql db database mongodb proof concept have experience create store procedure have experience remote procedure rpc redis rabbit mq message broker route message client cloud network experience write complex pl sql query join stored procedures functions triggers cursors index data access layer collaborate tester developer prepared test plan produce high quality software application experience junit build tool maven work log error message performance log svn version control deploy test application unix ibm web logic application server environment agile methodology java javascript jquery ajax angularj json jsp struts micro services spring hibernate soa soap wsdl rabbitmq multithreading concurrency exception handling jdbc oracle maven junit svn jaxb xml web logic unix linux description vibe internal center project verizon telecom provide information landline mobile calling plan vibe have module like oncall authoring admin qa oncall module information customer relate question responsibility design use case diagram datum flow diagram component diagram class diagram sequence diagram give requirement implement gui html css jsp ajax tiles jstl struts tag libs portal pages develop application jsp presentation layer javascript client validation work maintain loose coupling layer publish business layer service inject necessary dependent component spring ioc publish cross cut concern like logging user interface exception transactions spring aop design development page flow web logic workshop involve design development compliant portlets framework like spring mvc develop implement content publish site studio content publisher ridc interface content detail create content application implement business class logic factory pattern implement dao layer access hibernate session factory spring hibernate template hibernate search queries write search persistence deletion persistence object develop web services client service soap protocol send request receive response create junit test case unit testing implement application log feature rational clear case version control clear quest bug tracking environment java html css ajax javascript jsp jstl spring struts hibernate jdbc jndi factory pattern workshop xml xslt uddi wsdl jvm oracle ucm svn ldap windows xp unix uml rational clear case clear quest apache tomcat web logic server description company provide software product service business process outsource variety industry include insurance banking capital market manufacturing retail company sell service business intelligence analytic testing compliance application development maintenance responsibility review functional non functional requirement high level design work waterfall methodologies build application base java enhancement exceptions collection service layer develop application struts mvc spring dependency injection hibernate orm tool different design pattern like factory pattern singleton pattern good maintenance develop web page html css javascript produce soap web service apache axis generate wsdl file service serve xml datum work xpath need identify object xml log function spring aop spring ioc framework implement soapui web service testing develop multi thread concurrent application unix shell scripting implement collection manage dynamic datum core java api create function store procedures oracle sql pl sql database develop lookup table view speed query debug application level application like service layer controller layer dao layer test functionality business junit develop level commit qa team develop deploy web application ear file apache tomcat server jenkins build management tool tortoise svn version control tool work quality analysis qa testing resolve bug defect application coordinate team member project assure positive outcome eclipse ide integrate different framework build overall application environment java html css javascript spring di struts mvc spring aop hibernate oracle sql pl sql stored procedures xml multi thread concurrent collection soap jax b jax ws soapui junit factory pattern singleton design patterns jvm apache tomcat jenkins kanban trello tortoise svn eclipse ide waterfall description objective project implement web base end system employee manager high level management have specific role permission effective processing day day business activity company like leave management project management resource management etc responsibility develop application struts framework leverage classical model view controller mvc architecture design user interface jsp develop custom tag jstl tag lib develop java business class handle different function develop controller class struts tile api involve documentation use case design uml modeling include development class diagram sequence diagram use case transaction diagram participate design code review developed user interface ajax jsp perform client validation develop junit test case develop module svn version control environment java jsp strut jndi html xml dom sax ant ajax rational rose jvm eclipse indigo soap apache tomcat oracle g svn"
}