{
  "filename": "candidate197java.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\candidate197java.docx",
  "text": "Candidate197\nSr. Java/J2EE Developer\nEmail: candidate1978@gmail.com\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0                                                                          Mobile: 773-688-9056 \nProfessional Summary:\nOver 8+ years of IT experience in Design, Development, Support and Implementation of Web based applications using JAVA/J2EE Technologies (Core Java, JDBC, Servlets, JSP, XML, spring, JUNIT, Hibernate, and Restful API). Worked in IDEs such as Eclipse, WSAD and Net Beans, spring tool suite.\nExperienced in implementing Enterprise Applications with each phase of Software Development Life Cycle (SDLC) including Requirements gathering, Analysis, Design, Reviews, Coding, Unit and Integration Testing.\nDesigned & developed several multi-tier Web based, Standalone, Distributed, Client-Server and Multithreaded applications using Object Oriented Analysis and Design (OOAD) concepts and Service Oriented Architecture (SOA) mostly in cross-platform environments. \nImplemented a Continuous Delivery pipeline with Docker, Jenkins and Git Hub and AWS AMIs to run the war, AMI and deploy jobs in Jenkins brew master instance, which reduces the time for the deployment of micro services. Migrated Spring based application to Cloud based Micro service API. \nExtensive experience with advanced Java and J2EE technologies like Servlets JSP, EJB, JDBC, Struts 1.2/2.x, JMS, JSF My Faces, JPA, JNDI, JSTL, JTA, JAX-WS, JAX_RS, Spring and Hibernate.\nExtensive knowledge of front end technologies like AJAX, JSP, JSPF, JavaScript, jQuery, Backbone.js, Underscore.js, YUI, HTML5, and CSS.  Expertise in using build/deploy tools such as Ant, Maven, JUnit and Jenkins. Used Spring Boot created REST API's per application business to perform search using elastic java sdk.\nDesigned the application by implementing JSF Framework based on MVC Architecture, simple Java Beans as a Model, JSP and JSF UI Components as View and Faces Servlet as a Controller. \nExtensive experience in working on projects with Waterfall and Agile methodologies such as Test-Driven Development (TDD) and SCRUM. Hands on experience with database tools like\u00a0Toad\u00a0for Oracle, DB2, SQL Server.\u00a0Good Knowledge on Service Oriented, Microservices architectures and Enterprise Service Bus(ESB).\nHands on experience with various Application Servers and Web Servers including IBM Web Sphere 6.x/7.x, Oracle Web logic, JBOSS, Apache Tomcat server 6.x/7.x/8.x, XAMPP 1.7.x/1.8.x with wide variety of development environments such as Eclipse IntelliJ, WSAD 5.0, My Eclipse, IBM RAD 6/7/8, NetBeans, Notepad++, Sublime text, Dreamweaver and Brackets. Good working knowledge on business rules engine like Drools. Experience in developing of web applications using Google Web Toolkit (GWT), GXT, AngularJS, Vaadin.\nExpertise in Client Scripting language and server-side scripting languages like HTML, DHTML, CSS, JavaScript, JSTL, AJAX, jQuery, Ext-JS, JSON, Dojo, bootstrap, AngularJS and node.js. \nDeveloped web applications utilizing jQuery, HTML5, CSS3, Angular JS, Struts, Java/J2EE, JSP, Servlets, JAX-RS, RESTful Web Services, SOAP Web Services, Spring Framework, Hibernate Framework, XML, JSON, Oracle, MySQL, SQL Server, Tomcat, Maven, Jetty, Spring JMS, JBOSS, JDBC and WebLogic. \nExtensive experience with SOAP Web Services, RESTful Web Services, Spring AOP, Spring IOC, Spring WS-Security, Spring MVC, Spring Integration, Spring Security, Spring JDBC, Spring Boot, Hibernate Framework, Servlets, JSP, Struts, JDBC, Oracle. \nStrong working knowledge of RDBMS concepts having worked with MySQL, Sybase, Oracle 10g, MongoDB and DB2. Hands-on experience with IBM MQ Series and JMS communications between middleware components. \nManaged Amazon Web Services like EC2, S3 bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, Dynamo DB, Elastic search, Virtual Private Cloud (VPC) through AWS Console and API Integration. \nExcellent in deploying the applications in AWS as EC2 instances and create snapshots for the data that must be stored in AWS S3. Good understanding on NoSQL databases like Mongo DB and Cassandra.\nExperience in building web applications using Spring Framework features like MVC (Model View Controller), AOP (Aspect Oriented Programming), AspectJ, IOC (Inversion of Control), DAO (Data Access Object) and template classes. Good knowledge and experience in writing queries for SQL, Oracle 8i/ 9i/ 10g/11g.\nImplemented SOA architecture with web services using SOAP, WSDL, UDDI and XML. Worked on Web Services testing using Selenium IDE, and Selenium RC Server, Selenium Grid/Web Driver Testing, SOAPUI and Testing.\nTECHNICAL SKILLS: \nInternet Technologies: Core Java, J2EE (EJB, JMS), Struts, Spring, Hibernate, IBM MQ Series, log4j, XML, Dom, AJAX \nFrameworks: JSP/Servlet, Java Script, HTML, AngularJS Struts, Spring, Hibernate, Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, JSF, JUnit, Jasper reports, SOAP UI, Groovy \nTools: SVN, CVS, Perforce, Serena PVCS, GIT, Jira, Confluence, SOAP, RESTful, UDDI, WSDL, JAX-RPC, JAX-RS, JAX-WS, JAX-B, Axis2, CFX, AWS, Micro services \nMiddleware: J2EE (MDB, JMS). IBM MQ, SOA\nDesign Patterns: Java Design Pattern [Abstract Factory, Factory Method, Singleton, Builder, MVC, Front Controller, Singleton, Business Delegate and DAO patterns, Bridge, Decorator, Adapter, Chain of Responsibility, Command], J2EE Design Patterns [Front Controller, Business Delegate, Session Fa\u00e7ade, Data Access Object and Value Object] \nWebservices: Spring based Restful, SOAP, WSDL, SoapUI \nApplication Servers: IBM WebSphere 8.5.5, Oracle WebLogic Server 11g, JBOSS Server 8.0.0 and Tomcat 8.0.9. \nDatabases: Oracle, Mongo DB 3.1, MySQL, DB2\nOperating Systems: Windows 2000 / NT 4.0 / 98 / XP/Vista/7/8/10, Mac, Sun Solaris, Red Hat Linux, Unix \nIDE: Eclipse Mars.2 Release (4.5.2), IBM Rational Software Architect and IBM Rational Application Developer, PL/SQL Developer \nOther Tools: IBM RAD, SQL*Plus, SQL Navigator, MS Office Suite, MS Project, Rational Paradigm, JUnit, TOAD, Soap UI, Putty, Rational Clear Quest, RTC, StarTeam, Mockito\nBuild Tools: Maven, ANT\nMark-up/XML: HTML, CSS, JavaScript, jQuery, AJAX, Bootstrap, AngularJS, XML, XSD, XSL/XSLT, SAX/DOM, JSON \nProfessional Experience:\nWalmart, Bentonville, AR                                                                                                               April 2017 to Present\nRole: Java fullstack Developer.\nProject Description: Walmart mainly focuses on developing a Retail application for selling products such as printer, scanners, floppy, office accessories, sheets etc. The motive of Walmart is to provide quick service to the consumer who needs quick purchase of office accessories both in lesser and bulk quantities. Generation of internal feeds like Coupons, Rebates and Campaigns are additional challenges. It requires technical expertise as well as domain knowledge. \nResponsibilities: \nInvolved in Requirements gathering, Analysis, Design, Development and Testing of application using AGILE methodology (SCRUM). \nDeveloped and designed the web interface using HTML5, CSS3, React.JS, Node.JS, JavaScript, JQuery, Angular JS, Ext.JS and Bootstrap. \nUsed Pivotal Cloud Foundry, the connection/service binding details are injected from the deployed cloud platform itself. \nInvolved in build process, modifying the Gradle files, compiling the code building, packaging the WAR file and deploying onto various Tomcat servers in UNIX environments. \nDesigned Java Components and integrated using spring framework with Hibernate Object/Relational persistence mechanism. Worked on web application security enhancements using OWASP. \nInvolved in writing Spring Configuration XML, file that contains declarations and business classes are wired-up to the frontend managed beans using Spring IOC pattern. \nImplemented the application using Spring IOC, Spring MVC Framework, and Spring Batch and handled the security using Spring Security. Implemented service methods and SQL queries, SQL to interact with the forms. \nExperienced in React.js for creating interactive UI's using One-way data flow, Virtual DOM, JSX, React Native concepts. Involved in integrating JAX-RS into Spring Boot application. Application was deployed using JBOSS.\nImplemented Micro Services using Spring Boot, Spring Cloud, and Spring Micro Services and enabled discovery using Netflix Eureka Server. Created web services using Spring Rest Controller to return JSON to the frontend. \nDesigned and developed DAO layer with Hibernate standards, to access data from SQL Server. \nCreated SQL Server logins and assigning roles and Authentication models as a part of Security. \nUsed multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class. Development carried out under STS Integrated Development Environment (IDE). \nDeveloped the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management. \nInvolved in creating Mongo DB collections and documents and developed Mongoose Schema objects to perform CRUD operations. Performed deployment of applications on IBM WebSphere Application Server.\nResponsible for Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins along with LINUX Shell scripts to automate routine jobs. \nUsed MAVEN to define the dependencies and build the application and used JUnit for suite execution and Assertions. Used JIRA for bug tracking, issue tracking and project management. \nUsed GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server. \nEnvironment: Java, Agile, HTML5, CSS3, Bootstrap, Angular JS, React.JS, JSTL, J Query, AJAX, AWS EC2, S3, Micro Services, Hibernate, Spring, Pivotal Cloud Foundry, RESTful API, SOA, JAX-RS, JSON, SQL, Node.JS, Oracle, CRUD, CI, CD, Jenkins, multithreading, JIRA, Rabbit MQ, React Native, Gradle, MAVEN, J Unit, UNIX, STS, IBM Web Sphere, Log4J, GIT\nWells Fargo, Charlotte, NC\t\t\t\t\t\t\t\tJune 2016 to March 2017\nRole: Java Full Stack Developer\nProject: Core Sales & Fulfillment Mortgage System \nProject Description: Core is an initiative to re-architect and redesign retail mortgage application management process by integrating both sales and fulfillment. This application manages a loan application from the initiation of a loan application till its funding, thereby reducing the logistics and manual process involved in the product sales and fulfillment process. Sales users gather all the required information from the applicants and submit the loan to the fulfillment process. Fulfillment processors will take up the loan after it is submitted and processes until the funds disbursed. It has major components like Loan Status, Application Management, Pricing, Closing/Funding, Decisioning, Document Generation, Vendors and Stipulations \nResponsibilities: \nWorked with Requirement leads, Architect and Project managers to translate business requirements into technical specifications. Developed rich user interface UI's using Bootstrap directives. \nInvolved in implementation of server layer services like business services, entity services and integration services. Developed WebPages using UI frameworks, Angular JS and Ext JS.\nWorked on business modules like Loan status, Application Management, Assets, Closing/Funding and Product Pricing. Utilized features of Spring Core layer and Spring DAO support layer to develop the application. \nBuilt an API facade layer using NodeJS (with express-JS). Developed reusable AngularJS directives. \nConverted UI screens from XMI (XML Metadata Interchange) framework to AngularJS framework which resulted in better performance and reduced code count. \nDeveloped AngularJS Controllers which isolates scope to perform operations in UI. Developed reusable code and libraries for future use by creating services/factories and injected them to controllers using Dependency Injection. Used NoSQL DB like Mongo DB for the proof of concept.\nConfigured Hibernate into a Spring application and used Spring's DAO support to build Hibernate DAO classes. \nUsed Object Oriented Design and Object-Oriented Programming concepts of Core JAVA like Polymorphism, Multithreading, Inheritance, Interfaces, Generics, Collections and Socket Programming.\nPersistence mechanism implemented using Hibernate framework utilizing table per subclass inheritance based mapping, component mapping and other association mapping strategies. \nDeveloped JAX-WS and JAX-RPC SOA service binding producers and client implementation from WSDL contracts. Involved in development of individual Sprints with the help of GitHub.\nWorked on variety of Frontend JavaScript frameworks like AngularJS, BackboneJS, ReactJS, JQuery, JQuery UI and good knowledge in EmberJS. Involved in fixing issues in IST, QA, UAT & Production environments. \nConsumed RESTful Web services provided by different vendors to submit/fetch the Appraisal/Valuation Orders, Tax/Flood Orders and their statuses, and fetch Employment/Income information. \nHQL and named queries are used throughout the application for consistency and maintainability. \nInvolved in the development of Job Scheduler software module using Apache open source Java based scheduler called as QUARTZ Scheduler and Spring HTTP INVOKER Webservice. \nDeveloped data access object (DAO) layer for Job Scheduler module using Spring JDBC API (Stored Procedures). \nInvolved in writing SQL queries & PL/SQL - Stored procedures, function, triggers, cursors, object types, Cursors, sequences, indexes etc. Integration of spring modules with AWS modules to consume third party services. \nDeveloped micro services as a strategy to gradually replace the fragile core monolithic Java application while still being able to add new business features. Used WordPress for managing. \nUsed ELK is stack of three, Elastic search - distributed restful search and analytics, Log stash - manage events and logs, Kibana - seamless integration with other technologies.\nUsed JBOSS application server for deploying the apps on different servers in different environments like Dev/QA/IST/Production. Used Splunk for server logs analysis and real-time defect tracking. \nExpertise in front ends technologies such HTML, CSS, LESS, SASS, Java Script, ReactJS, AngularJS,\u00a0GWT\u00a0and AJAX. Implemented JavaScript test cases using Jasmine/Karma. \nPerformed bug tracking using JIRA and maintained documentation for using Confluence. \nImplemented Unit Testing using JUnit, TestNG, Mockito/Power Mock and Selenium. \nInvolved in building the code & deploying on the server using tools Maven and Jenkins \nUsed Grunt-JS to test the JavaScript with Sonar Qube (with JS Hint, HTML Hint, etc. plugins), concatenate, minify and Gzip the source code as well as pass it through templates to create the Jasmine test codebase and made custom configurations for testing and deployment. \nUsed advanced java features like Lambda expressions for array operations, collections.\nEnhanced Following Coding guide lines & maintain quality of code by checking with Sonar Qube /Sonar Lint \nProviding On call support for Production and Integration environments. \nEnvironment: Java 1.8, Spring 4.3.2, Hibernate 4.2, Web Services, REST, WSDL, SOAP, XML, XSD, AJAX, AngularJS, Bootstrap, NodeJS, HTML, CSS, Java Script, JSON, Oracle 11g, Oracle SQL developer, JBOSS Application server, Eclipse, Maven, TestNG, Camel, WordPress, Mockito, Jasmine/Karma, Power Mock, Selenium, Tortoise SVN, JIRA, Fish Eye, Confluence, Web Builder, Splunk, Sonar Qube/Sonar Lint, Windows 7, Linux, AWS, Docker.\nSource Link, Kansas City, MO\t\t\t\t\t\t\t\tJuly 2015 to May 2016\nRole: Senior Java Developer\nDescription: Source Link which helps entrepreneur to start up his business. Source Link provide the full-service direct marketing agency that specializes in identifying, about what kind of costumers are best for their brand, what are the resources we can find to help improve your business and how can you get the funding for the growth of the business. \nResponsibilities: \nAnalysis and understanding of business requirements and was one of the members in the architecture team for designing and implementing the system. \nParticipated in Design, Development and Support phases of Software Development Life Cycle (SDLC).\nImplemented the process using Agile (Scrum) methodology and Test-Driven Model. \nContributes and establishes the strategy / approach, Best Practices and methodology to PMO on how to Plan, manage, execute and report projects under Agile / Scrum Framework. \nInvolved in converting the application from Spring3.0 to Spring4.3 along with conversion to Standard Spring MVC, security features and integrated with the Hibernate framework. \nUsed Spring IOC for dependency Injection, Spring AOP for controlling the execution process of beans life cycle, Spring Batch to process the CSV files. \nSpring framework and DAO classes using JPA framework for persistence management and involved in integrating the frameworks for the project. Developed Stored Procedures and Triggers on Oracle Database.\nUsed Hibernate 3.0 as ORM tool for data related functionalities, persistence layer and implemented transactions. \nImplemented the DAO and Business Delegate design patterns. Used hibernate DAO objects for retrieving data from database (MYSQL) which were used in Hibernate mapping. \nDeveloped front end user interface using HTML5, XML, CSS3, Bootstrap, JavaScript, JQuery, AJAX, AngularJS, JQuery and JSP2.0. Implemented a Continuous Delivery Pipeline with Jenkins and GitHub. \nUsing AngularJS created few HTTP Requests to few application related web API's got the results and stored them. Experience working with Cassandra. Developing RESTFUL web services using JPA, Cloud Foundry. \nDesigned the UX for the front-end using Twitter Bootstrap. \nDeveloped Graphical User Interface (GUI) to display report data using JQuery in Cross-browser compatibility and Web Application Scaling. Used JSF expressions in rendering content and validation. \nBuilt JavaScript functions to generate dynamic HTML components like table list, calendar, and spreadsheets and drop-down menus. Extensively used the Java collection Framework Classes for Holding the Application objects. \nExperience in implementation of business applications using Web logic, WebSphere, IBM WebSphere Application and Portal Server (WAS/WPS), JBOSS and Tomcat. \nDeveloped web application using JSF (Java Server Faces) framework backing classes and utility classes. \nImplemented Web services using apache API and tested them using SOAP UI. Integrated the SOAP Web services to RESTful Web Services. JSF navigation configured in JSF configuration file and its backing beans. \nWorked with DBA to understand the current data model and integrate new Tables within the existing Data Model. Used GIT version control system on the server side to maintain the latest snapshot of data. \nUsed Maven for integration and building of the project and used SOAP UI for testing the Web Services calls (Request and response formats and data). \nExtensively involved in developing and writing Maven built scripts for automated build and deployment processes. Implemented Java security manager to access EJB (Elastic Java Beans) with Java security API. \nUtilize Camel to integrate micro services with other microservices and RabbitMQ messaging exchanges.\nDesign and develop Microservices platform to support a multitude of enterprise level applications. Mentor to developers on JS best practices and server-side development.\nUsed JMS for communication between the applications and MQ for communicating with the third-party applications. Implemented EJB3 Annotations for Entities, Relations and Transactions. \nUsed Eclipse IDE for coding, developing applications and deployed to local WebSphere Application Server. \nWorked closely with QA for fixing the bugs. Tested the whole application for errors line by line and used Log4J for logging all the application exceptions and debugging statements. \nUsed Jenkins and made the deployment automated and deployed the project on Amazon AWS. \nEnvironment: Java 1.8, J2EE, JSP 2.0, JavaScript, AngularJS, Node.js, Servlets 3.0, Hibernate 5.0.X, MAVEN, Spring 4.3, WebSphere Application Server, Eclipse Mars, REST and SOAP Web services, MYSQL, mango DB 3.2.9, UML, Visio, Log4J, UNIX, Soap UI, jQuery, HTML/HTML5, AJAX, Bootstrap, XML, GIT, JMS, JSF, EJB3, Jenkins, AWS, JUNIT, GIT.\nOptima Health, WI\t\t\t\t\t\t     \t           \t\tAugust 2014 to June 2015\nRole: Java Developer\nDescription: Developed web application for brokers of small market health insurance for group or individual customers. Basic functionality was to get customer physical address, marital status, family health and their individual health information. After all the required information provided by customer application would figure out the best available health plan in small market and output to customers for their selection. \nResponsibilities: \nInvolved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. Worked with core Java technologies like Multi-Threading and synchronization. \nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint. \nDesigned and coded controller classes using J2SE that would talk to real hardware controller to access their states and gave the user control over the hardware through the multithreaded UI. \nAnalyzing business requirements and generate technical specifications to design software components and applications for middleware. Wrote scripts in UNIX to process the Batch Jobs on a scheduled basis.\nUsed HTML5, CSS, jQuery, AngularJS and JavaScript to construct the dynamic web pages (presentation Layer) for the application. Used AngularJS and Backbone JS for client-side validation. \nCreated Single page application using Backbone JS and NodeJS to handle data flow. \nUsed JavaScript latest version of libraries based on running in the NodeJS environment. \nAchieved Dependency injection by creating Spring services, Spring controllers and DAOs to wire objects of business classes. Developed internal coding using J2EE technologies based on the MVC Architecture. \nImplemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements. \nDesigned and developed business components using Spring Boot, Spring Dependency Injection (Core), Spring AOP and Spring Annotations. Implemented Business Logic using Java, Spring MVC and Hibernate. \nUsed Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available. \nDeveloped messaging module using Spring JMS, Apache Camel and Active MQ, RabbitMQ. \nHad experience in working with Messaging technologies like Apache Kafka. Used Cassandra for proof of concept. \nWorked with Apache Kafka as a messaging service for activity tracking of an application. \nDeveloped MySQL stored procedures and triggers using SQL to calculate and update the tables to implement business logic. Implemented PL/SQL procedures and views in My SQL Database. \nImplemented RESTful Web services to retrieve data from client side and made REST API calls from AngularJS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth. \nFocused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before writing the functionality. Written LINUX shell scripts to identify user login information. \nExperienced with RAD development methodologies and Rational Clear case for version control. \nUsed JIRA ticketing system to keep track of issues and tasks on individuals. \nUsed Maven to build the application and deployed on IBM WebSphere Application Server. \nEnvironment: JAVA, J2SE, HTML, CSS, jQuery, Ajax, AngularJS, Bootstrap, JSON, J2EE, Spring Framework, Spring MVC, Spring Security, Spring Boot, Unix, Spring Data (Spring JDBC, Spring ORM), JSP, Hibernate, Web services, RESTful, RAD, WebSphere, Sonar Qube, Agile/Scrum Methodology, Maven, JIRA, JBOSS, Junit, TDD, MY SQL, LINUX GITHUB, Cassandra.\nMacy\u2019s, Atlanta, GA.   \t\t\t\t\t\t\t\t\tOctober 2013 to July 2014\nRole: Java Developer\t\nProject Description: Macy's, is a premier chain of department stores owned by American multinational corporation Macy's, Inc. The IT department has successfully automated the Sales and marketing operations for the last seven years. My project tasks included marketing new costumes and cosmetics through web, mail and SMS media. \nAchievement: Successfully developed and released two major back-end subsystems to support sales promotions and customized offers to Macys Star and Plenti reward card members. \nResponsibilities: \nDesigned Prototype and project layout skeletons using ReactJS, jQuery, CSS3 and HTML5. \nInvolved in designing and developed presentation layer using Ajax, jQuery, and third-party libraries. \nUsed various jQuery and Bootstrap plug-in like date picker, Bootstrap selectors. \nUsed Apache Cordova to build native mobile applications using HTML5, CSS3 and JavaScript. \nUsed Adobe Experience manager(AEM) to manage and deliver digital experiences across websites. \nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management. \nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed Spring DI, annotations, and MVC to implement business layer and navigation part of application. \nUsed Spring Boot Actuator to externalize application's configuration properties for various environments. \nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console. \nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice. \nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging. \nUtilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda Functions Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling. \nDatabase required for creation of new tables, PL/SQL stored procedures, functions, views, indexes, constraints, triggers and required SQL tuning to reduce the response time in the application. \nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. \nExposed and consumed SOAP based Webservice to communicate between systems. \nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. \nUsed Redis as in memory database, for storing and fetching data in memory to increase the performance. \nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster. \nWorked on Drools Rule Engines with corresponding to validate the business User Roles. \nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP. \nUsed Apigee for web-scale, enterprise flexibility on premise and hybrid deployment on single code base. \nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects. \nDeveloped codes in an immutable manner using Scala to apply concurrency and parallelism. \nDeveloped Unit test cases using Junit, Mockito and Jenkins for continuous integration. \nUsed Kubernetes for automating deployment, scaling and management of containerized applications. \nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server. \nDeveloped Maven scripts and builds using Maven and continuous integration servers like Jenkins. \nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver). \nDeveloped, Tested and Debugged the Java, JSP using Eclipse RCP. \nDeployed the application on WebSphere 8.5 application server. \nEnvironment: Java 1.8, HTML5, CSS3, jQuery, Bootstrap, AngularJS, Swing, Threading, AWS cloud, Spring MVC, \nSpring Boot, Spring Quartz, Hibernate Framework, Hibernate Transaction Management, Hibernate Batch Transactions, JAX-WS, PL/SQL, Oracle DB, Cassandra, JBOSS Drools 4.x, Docker, JMS, Maven, Jenkins, Apache Camel, SVN, JIRA.\nCSC\t\t\t\t\t\tJanuary 2012 to September 2013\nRole: Java/ J2EE Developer \nProject Description: The Objective of this project was to develop and enhance Warehouse Management system to facilitate information tracking for various warehouse products shipped from the dispatch centers to the locations where it should be placed according to the License Plate number. The application is developed in J2EE architecture using EJB\u2019s, JSP and Servlets. \nResponsibilities: \nPrepared Analysis document and followed AGILE software development with Scrum methodology. \nDeveloped the application on NodeJS platform using JavaScript programming. \nUsed JavaScript and jQuery for validating the input given to the user interface. \nApplied data transformation rules to transform code from one format to another format using NodeJS. \nCreated the Nodejs express server to build MVC framework from front-end side AngularJS to back-end. \nDeveloped front-end code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in back-end RESTful Server. Developed API using Hibernate to interact with the Oracle database. \nExtensive experience using framework APIs like Struts, SPRING, iBatis and Hibernate. \nWorked on the SPRING framework like SPRING IOC, SPRING DAO, SPRING ORM and Spring Integration. \nInvolved in the development of backend Logics or data access logic using Oracle DB & JDBC. \nExpertise in Multithreading, Remote Method Invocation (RMI), EJB, Serialization, and Java Beans. \nWorked extensively on SPRING MVC framework to develop new internal web application. \nUsed Spring AOP components for the Logging, Exception handling and Transactional Models. \nEnforce compliance with dynamic processing and security policies by using Mule ESB. \nDeveloped Spring boot application with microservice and deployed it into AWS using EC2 instances. \nDeveloped stored procedures, triggers, and functions with PL/SQL for Oracle database. \nUses the DAO pattern for data access layer and JMS API for the messaging requirement. \nDesign PL/SQL batches using Core JAVA with connectivity to Oracle for data maintenance and handling. \nTest API responses for WCS changes deployed on continuous basis, validate Green Box and MongoDB data. \nDeveloped test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs. \nDeveloped and executed SQL queries for testing database integrity and for data analysis using Selenium. \nDeveloped automated regression test cases in Selenium WebDriver using Java programming language. \nUsed Maven to build and generate code analysis reports and JENKINS for continuous integration. \nUsed WebLogic for design, development, and deployment of applications. \nEnvironment: Java, J2EE, SPRING, Hibernate, Struts, WebLogic, Restful, JQuery, AJAX, Ext JS, JavaScript, JSP, JSTL, Servlet, Microservice, Oracle, CRUD, PL/SQL, JIRA, Angular, GWT, JDBC, AWS, MongoDB, NodeJS, Adobe (CQ5), Bootstrap, Core Java, jBPM, NoSQL, UML, Eclipse, Junit, Maven, Agile, SOA, JIRA, JENKINS, Selenium.\nDynamo IT Solutions                                                    \tAugust 2009 to December 2011\nRole: Java Developer\nDescription: The objective of this project is to implement a web based front end system which can be used by the employees, managers and higher level management having specific role permissions for effective processing of day to day business activities in the company like leave management, project management and resource management etc. \nResponsibilities: \nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture. \nDesigned the user interfaces using JSPs, developed custom tags, and used JSTL Tag lib. \nDeveloped various java business classes for handling different functions. \nDeveloped controller classes using Struts and tiles API. \nInvolved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use case Transaction diagrams. \nParticipated in design and code reviews \nDeveloped User Interface using AJAX in JSP and also performed client-side validation \nDeveloped JUnit test cases for all the developed modules. Used SVN as version control \nEnvironment: Java, J2EE, JSP, Struts 1.x, JNDI, DB2, HTML, XML, DOM, SAX, ANT, AJAX, Rational Rose, Eclipse Indigo 3.5, SOAP, Apache Tomcat, Oracle 10g, LOG4J, SVN.",
  "size_bytes": 68346,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:39.809237",
  "clean_text": "sr java developer email mobile professional summary year experience design development support implementation web base application java technologies core java jdbc servlets jsp xml spring junit hibernate restful api work ide eclipse wsad net beans spring tool suite experience implement enterprise applications phase software development life cycle sdlc include requirements gathering analysis design reviews coding unit integration testing design develop multi tier web base standalone distribute client server multithreaded application object oriented analysis design ooad concept service oriented architecture soa cross platform environment implement continuous delivery pipeline docker jenkins git hub aws ami run war ami deploy job jenkins brew master instance reduce time deployment micro service migrate spring base application cloud base micro service api extensive experience advanced java technology like servlets jsp ejb jdbc struts jms jsf faces jpa jndi jstl jta jax ws spring hibernate extensive knowledge end technology like ajax jsp jspf javascript jquery yui css expertise build deploy tool ant maven junit jenkins spring boot create rest api application business perform search elastic java sdk design application implement jsf framework base mvc architecture simple java beans model jsp jsf ui components view face servlet controller extensive experience work project waterfall agile methodology test driven development tdd scrum hand experience database tool like toad oracle sql server good knowledge service oriented microservice architecture enterprise service hand experience application servers web servers include ibm web sphere oracle web logic jboss apache tomcat server xampp wide variety development environment eclipse intellij wsad eclipse ibm rad netbeans sublime text dreamweaver brackets good work knowledge business rule engine like drools experience develop web application google web toolkit gwt gxt angularjs vaadin expertise client scripting language server scripting language like html dhtml css javascript jstl ajax jquery ext js json dojo bootstrap angularjs develop web application utilize jquery angular js struts java jsp servlets jax rs restful web services soap web services spring framework hibernate framework xml json oracle mysql sql server tomcat maven jetty spring jms jboss jdbc weblogic extensive experience soap web services restful web services spring aop spring ioc spring ws security spring mvc spring integration spring security spring jdbc spring boot hibernate framework servlets jsp strut jdbc oracle strong work knowledge rdbms concept having work mysql sybase oracle g mongodb hand experience ibm mq series jms communication middleware component managed amazon web services like bucket elb auto scaling sns sqs ami iam dynamo db elastic search virtual private cloud vpc aws console api integration excellent deploy application aws instance create snapshot datum store aws good understanding nosql database like mongo db cassandra experience building web application spring framework feature like mvc model view controller aop aspect oriented programming aspectj ioc inversion control dao data access object template class good knowledge experience write query sql oracle implement soa architecture web service soap wsdl uddi xml work web services testing selenium ide selenium rc server selenium grid web driver testing soapui testing technical skill internet technologies core java ejb jms struts spring hibernate ibm mq series xml dom ajax frameworks jsp servlet java script html angularj strut spring hibernate spring mvc spring web flow spring ioc spring aop jsf junit jasper report soap ui groovy tools svn cvs perforce serena pvcs git jira confluence soap restful uddi wsdl jax rpc jax rs jax ws jax b cfx aws micro service middleware mdb jms ibm mq soa design patterns java design pattern abstract factory factory method singleton builder mvc controller singleton business delegate dao pattern bridge decorator adapter chain responsibility command design patterns controller business delegate session fa\u00e7ade data access object value object webservice spring base restful soap wsdl soapui application servers ibm websphere oracle weblogic server g jboss server tomcat database oracle mongo db mysql operating systems windows nt xp mac sun solaris red hat linux unix ide eclipse release ibm rational software architect ibm rational application developer pl sql developer tools ibm rad sql navigator ms office suite ms project rational paradigm junit toad soap ui putty rational clear quest rtc starteam mockito build tools maven ant mark xml html css javascript jquery ajax bootstrap angularjs xml xsd xsl xslt sax dom json professional experience walmart bentonville ar april present role java fullstack developer project description walmart mainly focus develop retail application sell product printer scanner floppy office accessory sheet etc motive walmart provide quick service consumer need quick purchase office accessory less bulk quantity generation internal feed like coupon rebates campaigns additional challenge require technical expertise domain knowledge responsibility involve requirements gathering analysis design development testing application agile methodology scrum develop design web interface react js node js javascript jquery angular js ext js bootstrap pivotal cloud foundry connection service bind detail inject deploy cloud platform involve build process modify gradle file compile code building package war file deploy tomcat server unix environment design java components integrate spring framework hibernate object relational persistence mechanism work web application security enhancement owasp involve write spring configuration xml file contain declaration business class wire frontend manage bean spring ioc pattern implement application spring ioc spring mvc framework spring batch handle security spring security implement service method sql query sql interact form experience create interactive ui way data flow virtual dom jsx react native concept involve integrate jax rs spring boot application application deploy jboss implemented micro services spring boot spring cloud spring micro services enable discovery netflix eureka server create web service spring rest controller return json frontend design develop dao layer hibernate standard access datum sql server create sql server login assign role authentication model security multithreading programming improve overall performance singleton design pattern hibernate utility class development carry sts integrated development environment ide develop persistence layer hibernate framework create pojo object map hibernate annotation transaction management involve create mongo db collection document develop mongoose schema object perform crud operation performed deployment application ibm websphere application server responsible continuous integration ci continuous delivery cd process implementation jenkins linux shell script automate routine job maven define dependency build application junit suite execution assertion jira bug tracking issue tracking project management git source control management give huge speed advantage centralized system communicate server environment java agile bootstrap angular js react js jstl j query ajax aws micro services hibernate spring pivotal cloud foundry restful api soa jax rs json sql node js oracle crud ci cd jenkins multithreading jira rabbit mq react native gradle maven j unit unix sts ibm web sphere git wells fargo charlotte nc june march role java stack developer project core sales fulfillment mortgage system project description core initiative architect redesign retail mortgage application management process integrate sale fulfillment application manage loan application initiation loan application till funding reduce logistic manual process involve product sale fulfillment process sale user gather require information applicant submit loan fulfillment process fulfillment processor loan submit process fund disburse major component like loan status application management pricing closing funding decisioning document generation vendors stipulations responsibility work requirement lead architect project manager translate business requirement technical specification develop rich user interface ui bootstrap directive involve implementation server layer service like business service entity service integration service develop webpages ui framework angular js ext js work business module like loan status application management assets closing funding product pricing utilize feature spring core layer spring dao support layer develop application build api facade layer nodejs express js develop reusable angularjs directive convert ui screen xmi xml metadata interchange framework angularjs framework result well performance reduce code count develop angularjs controller isolate scope perform operation ui develop reusable code library future use create service factory inject controller dependency injection nosql db like mongo db proof concept configure hibernate spring application spring dao support build hibernate dao class object oriented design object orient programming concept core java like polymorphism multithreading inheritance interfaces generics collections socket programming persistence mechanism implement hibernate framework utilize table subclass inheritance base mapping component mapping association mapping strategy develop jax ws jax rpc soa service bind producer client implementation wsdl contract involve development individual sprint help github work variety frontend javascript framework like angularjs backbonejs reactjs jquery jquery ui good knowledge emberjs involve fix issue ist qa uat production environment consume restful web service provide different vendor submit fetch appraisal valuation orders tax flood orders status fetch employment income information hql name query application consistency maintainability involve development job scheduler software module apache open source java base scheduler call quartz scheduler spring http invoker webservice develop data access object dao layer job scheduler module spring jdbc api stored procedures involve write sql query pl sql store procedure function trigger cursor object type cursors sequence index etc integration spring module aws module consume party service develop micro service strategy gradually replace fragile core monolithic java application able add new business feature wordpress manage elk stack elastic search distribute restful search analytic log stash manage event log kibana seamless integration technology jboss application server deploy app different server different environment like dev qa ist production splunk server log analysis real time defect tracking expertise end technology html css sass java script reactjs angularjs gwt ajax implement javascript test case jasmine karma performed bug tracking jira maintain documentation confluence implement unit testing junit testng mockito power mock selenium involve build code deploy server tool maven jenkins grunt js test javascript sonar qube js hint html hint etc plugins concatenate minify gzip source code pass template create jasmine test codebase custom configuration testing deployment advanced java feature like lambda expression array operation collection enhance follow code guide line maintain quality code check sonar qube lint provide support production integration environment environment java spring hibernate web services rest wsdl soap xml xsd ajax angularjs bootstrap nodejs html css java script json oracle g oracle sql developer jboss application server eclipse maven testng camel wordpress mockito jasmine karma power mock selenium tortoise svn jira fish eye confluence web builder splunk sonar qube sonar lint windows linux aws docker source link kansas city mo july role senior java developer description source link help entrepreneur start business source link provide service direct marketing agency specialize identify kind costumer good brand resource find help improve business funding growth business responsibility analysis understanding business requirement member architecture team design implement system participate design development support phase software development life cycle sdlc implement process agile scrum methodology test driven model contribute establish strategy approach best practices methodology pmo plan manage execute report project agile scrum framework involve convert application conversion standard spring mvc security feature integrate hibernate framework spring ioc dependency injection spring aop control execution process bean life cycle spring batch process csv file spring framework dao class jpa framework persistence management involve integrate framework project develop stored procedures triggers oracle database hibernate orm tool datum relate functionality persistence layer implement transaction implement dao business delegate design pattern hibernate dao object retrieve datum database mysql hibernate mapping develop end user interface xml bootstrap javascript jquery ajax angularj jquery implement continuous delivery pipeline jenkins github angularjs create http request application relate web api get result store experience work cassandra develop restful web service jpa cloud foundry design ux end twitter bootstrap develop graphical user interface gui display report datum jquery cross browser compatibility web application scaling jsf expression render content validation build javascript function generate dynamic html component like table list calendar spreadsheet drop menus extensively java collection framework class hold application object experience implementation business application web logic websphere ibm websphere application portal server wps jboss tomcat develop web application jsf java server faces framework backing class utility class implement web service apache api test soap ui integrate soap web service restful web services jsf navigation configure jsf configuration file backing bean work dba understand current data model integrate new tables exist data model git version control system server maintain late snapshot datum maven integration building project soap ui test web services call request response format datum extensively involve develop write maven build script automate build deployment process implement java security manager access ejb elastic java beans java security api utilize camel integrate micro service microservice rabbitmq message exchange design develop microservice platform support multitude enterprise level application mentor developer js good practice server development jms communication application mq communicate party application implement annotations entities relations transactions eclipse ide code develop application deploy local websphere application server work closely qa fix bug test application error line line log application exception debug statement jenkins deployment automate deploy project amazon aws environment java jsp javascript angularjs servlets hibernate maven spring websphere application server eclipse mars rest soap web service mysql mango db uml visio unix soap ui jquery html ajax bootstrap xml git jms jsf jenkins aws junit git optima health wi august june role java developer description develop web application broker small market health insurance group individual customer basic functionality customer physical address marital status family health individual health information require information provide customer application figure well available health plan small market output customer selection responsibility involve complete sdlc include design system architecture development system use cases base functional requirement work core java technology like multi threading synchronization involve daily scrum agile meeting sprint planning estimation task user story participate retrospective present demo end sprint design code controller class talk real hardware controller access state give user control hardware multithreaded ui analyze business requirement generate technical specification design software component application middleware write script unix process batch jobs scheduled basis css jquery angularjs javascript construct dynamic web page presentation layer application angularjs backbone js client validation create single page application backbone js nodejs handle data flow javascript late version library base run nodejs environment achieve dependency injection create spring service spring controller dao wire object business class develop internal coding technology base mvc architecture implement dao pattern fetch datum database hibernate carry database operation avoid redundant database access statement design develop business component spring boot spring dependency injection core spring aop spring annotations implement business logic java spring mvc hibernate spring data framework use feature spring jdbc spring orm class like jdbc template hibernate template perform database operation connect data source available develop messaging module spring jms apache camel active mq rabbitmq experience work message technology like apache kafka cassandra proof concept work apache kafka message service activity tracking application develop mysql store procedure trigger sql calculate update table implement business logic implement pl sql procedure view sql database implement restful web service retrieve datum client rest api call angularjs parse datum project client handle security authorization spring security oauth focus test driven development create detailed junit test single piece functionality write functionality write linux shell script identify user login information experience rad development methodology rational clear case version control jira ticketing system track issue task individual maven build application deploy ibm websphere application server environment java html css jquery ajax angularj bootstrap json spring framework spring mvc spring security spring boot unix spring data spring jdbc spring orm jsp hibernate web service restful rad websphere sonar qube agile scrum methodology maven jira jboss junit tdd sql linux github cassandra macy atlanta ga october july role java developer project description macy premier chain department store own american multinational corporation macy department successfully automate sale marketing operation seven year project task include market new costume cosmetic web mail sms medium achievement successfully develop release major end subsystem support sale promotion customize offer macys star plenti reward card member responsibility design prototype project layout skeleton reactjs jquery involve design develop presentation layer ajax jquery party library jquery bootstrap plug like date picker bootstrap selector apache cordova build native mobile application javascript adobe experience manage deliver digital experience website develop class core java concept like multithreading concurrency memory management multithreading develop helper class programming improve overall performance spring di annotation mvc implement business layer navigation application spring boot actuator externalize application configuration property environment configure swagger ui register microservice eureka monitor service spring boot console define hibernate name queries batch operation define criteria queries microservice microservice build spring boot spring security deploy aws cloud spring cloud aws core spring cloud aws context spring cloud aws message utilize aws lambda platform upload datum aws bucket trigger lambda functions include mongodb focus high availability fault tolerance auto scaling database require creation new table pl sql store procedure function view index constraint trigger require sql tune reduce response time application develop rest webservice produce xml json perform task leverage web mobile application restful webservice jersey jax rs implementation expose consume soap base webservice communicate system develop soaps base jax ws webservice interface integrate multiple system code usability jmeter test performance soap protocol redis memory database store fetch datum memory increase performance apache kafka build real time datum pipeline store datum distribute cluster work drools rule engines correspond validate business user roles soap ui functional testing performance testing regression testing test rest soap apigee web scale enterprise flexibility premise hybrid deployment single code base create configure new jira project work department maintain exist jira project develop code immutable manner scala apply concurrency parallelism develop unit test case junit mockito jenkins continuous integration kubernetes automate deployment scaling management containerized application docker collaborate code run deliver securely linux windows server develop maven script build maven continuous integration server like jenkins logging git svn project management version management functional testing end application selenium ide web driver develop test debug java jsp eclipse rcp deploy application websphere application server environment java jquery bootstrap angularjs swing threading aws cloud spring mvc spring boot spring quartz hibernate framework hibernate transaction management hibernate batch transactions jax ws pl sql oracle db cassandra jboss drool docker jms maven jenkins apache camel svn jira csc january september role developer project description objective project develop enhance warehouse management system facilitate information track warehouse product ship dispatch center location place accord license plate number application develop architecture ejb jsp servlets responsibility prepare analysis document follow agile software development scrum methodology develop application nodejs platform javascript programming javascript jquery validate input give user interface applied datum transformation rule transform code format format nodejs create nodejs express server build mvc framework end angularjs end develop end code ajax angularjs jquery retrieve datum json object controller end restful server develop api hibernate interact oracle database extensive experience framework api like strut spring ibatis hibernate work spring framework like spring ioc spring dao spring orm spring integration involve development backend logic datum access logic oracle db jdbc expertise multithreading remote method invocation rmi ejb serialization java beans work extensively spring mvc framework develop new internal web application spring aop component logging exception handling transactional models enforce compliance dynamic processing security policy mule esb develop spring boot application microservice deploy aws instance develop store procedure trigger function pl sql oracle database use dao pattern datum access layer jms api message requirement design pl sql batch core java connectivity oracle datum maintenance handling test api response wcs change deploy continuous basis validate green box mongodb datum develop test case perform unit test junit framework jira track bug develop execute sql query test database integrity datum analysis selenium develop automate regression test case selenium webdriver java programming language maven build generate code analysis report jenkin continuous integration weblogic design development deployment application environment java spring hibernate struts weblogic restful jquery ajax ext js javascript jsp jstl servlet microservice oracle crud pl sql jira angular gwt jdbc aws mongodb nodejs adobe bootstrap core java jbpm nosql uml eclipse junit maven agile soa jira jenkins selenium dynamo solutions august december role java developer description objective project implement web base end system employee manager high level management have specific role permission effective processing day day business activity company like leave management project management resource management etc responsibility develop application struts framework leverage classical model view controller mvc architecture design user interface jsp develop custom tag jstl tag lib develop java business class handle different function develop controller class struts tile api involve documentation use case design uml modeling include development class diagram sequence diagram use case transaction diagram participate design code review developed user interface ajax jsp perform client validation develop junit test case develop module svn version control environment java jsp strut jndi html xml dom sax ant ajax rational rose eclipse indigo soap apache tomcat oracle g svn"
}