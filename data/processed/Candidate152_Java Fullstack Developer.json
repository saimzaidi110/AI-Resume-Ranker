{
  "filename": "Candidate152_Java Fullstack Developer.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate152_Java Fullstack Developer.docx",
  "text": "\tCandidate 152\t\t\tcandidate152.work@gmail.com\t\t515 635 4931\nPROFESSIONAL SUMMARY:\nOver 8+ years of professional experience in designing, developing and testing internet/intranet Web-based applications, Enterprise applications using J2EE Architecture, Core Java concepts.\nExperience working with Software Development Life Cycle (SDLC) methodologies-Agile,Waterfall Model.\nExpertise in using Object Oriented Programming(OOPS) Principles and Design patterns like \u00a0Singleton, Factory Pattern, Prototype, Business Delegate, Session Facade, Service locator, Observer, Decorator, Front Controller and DAO pattern.\u00a0.\nExtensive experience in Core\u00a0Java\u00a0concepts like Exception handling, Multi-threading, Synchronization, Serialization, IO, Collections framework,\u00a0EnterpriseJava\u00a0Beans.\nExpertise in development of web and enterprise-level applications using Spring, Hibernate, Struts framework, EJB, Servlets.\nExperienced in Middleware persistence framework like Hibernate/JPA for mapping Java classes with database using HQL.\nImplemented based on corresponding view components with view components HTML5, CSS3, XSD, XSTL.\nExperienced in Front End frameworks such as jQuery, Ajax, JavaScript, Node.js, ReactJS, AngularJS, Angular2,ExtJs.\nProficient in Client Side Validations, Client-server data Interaction with Ajax in Node.js, Back bone.JS.\n\u00a0Hands on experience in developing and solid understanding of Micro-Services Architecture, Service Oriented Architecture(SOA) and Test-Driven Development.\nExtensively used different Tag Libraries likeStruts Tags, JSTL, Spring Tags, Display Tag, XML/XSD.\nExperienced in frameworks: Spring MVC, Jakarta Struts framework, JSF, Spring and Hibernate.\nExperience with Spring MVC, IOC, AOP, Spring JDBC, Spring JTA, Spring IO, Spring Security, Spring Boot, Spring Microservices, Spring Ribbon, Spring Netflix, Spring Zuul, Spring Eureka withThymeleaf,Pivotal Cloud Foundry.\nExperience in Spring Security for User Access Management and LDAP configuration for authentication, authorization.\nDeveloped applications using latest technologies like EJB3.0, Spring2.x/3.x/4.x, Hibernate3.2/4.x, and REST based Web services (axis2.0, JAX WS2.0), Rules Engines (Drools4.1, ILOG), XML API and tools. \nExperienced in Distributed Transaction Management system with Spring JTA based on Atomikos.\nExperience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic, and JBoss Servers.\nExperienced in developing UNIXshell scripts for batch processing.\nGood Knowledge on Apache Storm which is used for real-time Stream processing and end-to-end delivery response.\nDeveloped SQL queries, procedures, Triggers and Stored Procedures in databases such as Oracle, DB2 and MySQL.\u00a0\nExperienced in working on modern MEAN Stack- MongoDB, Express.JS, AngularJSand NodeJS.\nExperienced in working with multiple databases like Oracle 10/11g, SQL Server, MySQL, DB2, NOSQL DB (mongo Cassandra and Cache database), involved in converting Cassandra/SQL queries to Spark transformations using Spark RDDs.\nDeveloped multiple POCs using Scalaand deployed on the Yarn cluster, performance of Spark, with\u00a0Cassandra and SQL.\nHands on experience with Play Framework MVC model, Object relational mapping tools like slick.\nGood experience in using Amazon Web Services (AWS) and\u00a0AWS\u00a0SNS/SQS for delivering messages.\nExperienced in AWS, (EC2 Container Services/Docker, VPC with Security Groups, S3, IAM, SNS, Lambda, Route53, CloudWatchetc Services).\nExperience in on AWS Cloud/DevOps, Continuous Integration and Continuous Delivery (CI/CD pipeline), Build and Release management, Linux/Windows administration and support.\u00a0\u00a0\nDeveloped\u00a0microservices\u00a0using\u00a0Spring\u00a0MVC,\u00a0Spring\u00a0Boot,\u00a0Spring\u00a0Cloud,\u00a0Spring\u00a0AOP, Dependency Injection and JPA\nExperience in upgrading and migrating various versions of Mongo DB on different platforms.\u00a0\nExperienced in performing unit testing using JUnit, integration and deployment of applications using tools such as ANT and Maven& debugging through log4j.\u00a0\nExperience in JUnit frame work with Mockito and Easy mock, SpringJunitRunner. \nExperienced in Development, testing and deployment of enterprise applications on Windows&UNIX platforms using IDE's such as Eclipse, Rational Application Developer (RAD), Netbeans, intellij 14.x/15.x\u00a0\nExperience in using different version controlling/tracking systems SVN, CVS, GIT, and Rational Clear Case.\nGood Knowledge in Apache Active MQ Series with Camel most widely used as service bus.\nExperience with Streaming platforms like Apache\u00a0Kafka.\u00a0\nGood Understandingon Azure which is mostly used as Service bus and used Azure tobuild, deploy and manage the application through the global network through the datacenters.\nExperienced in Full stack front end technologies using Grunt js, Glup Server, Yoman generator for Angular, Vue JS.\nExpertise in Selenium automation using\u00a0Selenium WebDriver, Selenium Grid, JAVA, JUnit&PowerMonk.\nPerformed Integration and deployment of applications done using tools such as ANT, Maven and Gradle.\nMaintained the Selenium & JAVA automation code and resources in source controls like CVS, SVN\u00a0over the time for improvements and new features.\nTECHNICAL SKILLS:\nPROFESSIONAL EXPERIENCE:\nResponsibilities:\nActively involved in mock screens development and project start-up phase.\nEfficiently managed the tasks and working and delivering features in a fast-paced scrum environment\nExperience working in Agile development following SCRUM process, Sprint and daily stand-up meetings.\nInvolved in developing the UI, layout and front-end programming for web application that matches requirements of the client.\nDeveloped UI Layer for the application using HTML5, CSS3, Angular 2 and Bootstrap.\nWritten code on Typescript and ES6 to implement\u00a0Angular\u00a02\u00a0Components and worked on different changed procedures of\u00a0AngularJS to\u00a0Angular\u00a02.0.\nFollowed\u00a0Java\u00a0& J2EE design patterns and the coding guidelines to design and develop the application.\nWorked with advanced MVC framework such as Spring-IOC, AOP, MVC, Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Heroku, Spring Security, Spring Integration, Spring Eureka, Spring Netflixand Batch which is used for implementing backend functionality.\nExtensively used various Spring Framework modules like MVC, Auto Wiring, Spring Security, and AOP.\nCreated and injected spring services, spring controllers and DAOs to achieve dependency injection and to wire objects of business classes.\nParticipated in coding Spring AOP components for the Logging, Exception handling and Transactional Model to handle many requests.\nUsed advanced java 8 features like Lambda expressions for array operations, collections and Enhanced concurrency methods etc. throughout the application for well-defined programming.\nWorked with\u00a0Java 8 Lambda for adding functionality processing capability and\u00a0Stream API\u00a0to facilitate pipeline processing and used\u00a0Filter\u00a0method to eliminate elements based on the criteria.\nUsed Hibernate, object/relational-mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL-based schema.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nInvolved in development of new functionality of\u00a0WebSphere commerce, Java, J2EE and\u00a0WebSphere MQ.\nWrote SQL queries,\u00a0stored\u00a0procedures\u00a0and enhanced performance by running explain plans.\nDesigned and developed Microservices using REST framework.\nDeveloped\u00a0Microservices\u00a0using\u00a0Spring\u00a0MVC,\u00a0Spring\u00a0Boot,\u00a0Spring\u00a0Cloud,\u00a0Spring\u00a0AOP, Dependency Injection.\nDeveloped Microservices\u00a0to communicate using synchronous protocols HTTP and REST for implementingSOA.\nDeployed Spring Boot MicroservicesDocker container using Amazon EC2 container services and AWS admin console.\nUtilized AWS Lambda platform to upload data into AWS S3 bucket and to trigger other Lambda functions.\nUsed a Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers.\nImplemented Authentication & Authorization with Site Minder and spring security.\nAnalysed current legacy infrastructure, established business case, and built consensus for virtualized IaaS / PaaS near term strategy with SaaSmobile cloud services end state.\nWorked on creation of custom Docker container images, pushing images, integration ofSpring boot.\nUpgraded the swagger to new version while maintaining the look and functionality of the UI. \nHands on experience with MongoDB Installation, Configuring, Monitoring and Designing Shared Environment.\nDeveloped Kafkaconsumers to consume data from Kafkatopics.\nProduced as well as consumed RESTfulweb services using Jersey API's.\nDeveloped Maven scripts and developed builds using Maven\u00a0and continuous integration servers like Jenkins.\nFixed defects identified during QA, UAT and Production.\nWritten highly referenced blog posts on\u00a0Error Handling in Scala\u00a0and\u00a0Problems Scala Fixes.\nDone with Web logic application server set up & deployed the application on it.\nInvolved in CI/CD process using GIT, Jenkins job creation, Maven build and publish, and Fabric implementation \nInvolved in deploying the application in UNIX and to connect to see logs for fixing UAT/Production defects.\nDeveloped, executed and maintained Selenium automation scripts for web application.\nHands on experience JBOSS\u00a0DROOLS, Guvnor, writing Business rules, Decision Tables, Agenda Filter, Knowledge Base, and JBPM.\u00a0\nDevelop custom app configurations (deployment-apps) within SPLUNK to Parse, Index multiple types of log format across all application environment.\nCreated continuous integration builds using AntJenkins and deployed on WebSphere app server.\nWorked on automation platforms like Ansible. Deployed Application instance on JBoss Server.\nEnvironment:Web Services, Spring 4.x, Hibernate 4.x, HTML5, JSP,JavaScript, JQuery, AJAX, GWT,CSS3, Angular 2,RESTful,XML, WSDL, Java1.8, J2EE,Scala, Kafka, Agile Methodology, JIRA processes,GIT,Design Patterns, PL/SQL, Junit, WebSphere MQ, Amazon Elastic Beanstalk, S3,Maven, Eclipse IDE,, Apache Kafka, MongoDB, Docker, CVS.\nResponsibilities:\nDesigned and developed code for Exchange project using the Java EE platform.\nActively involved in Analysis, Design, Development, System Testing and User Acceptance Testing. Successfully followed agile methodology in the Scrum Cycle model.\nUsed Java-J2EE patterns like Model View Controller (MVC), Business Delegate, Data Transfer Objects, Data Access Objects, factory patterns.\nDesigned and developed the End Points (Controllers), Business Layer, DAO Layer using Hibernate and Spring IOC (Dependency Injection).\nExtensively used MVC, Factory, Delegate and Singleton design patterns.\nImplemented SOA to develop REST Based Web services using Apache Axis.\nDeveloped REST Web Services clients to consume those Web Services as well other enterprise wide Web Services.\nDesigned and Developed Presentation Tier using Spring MVC and JSP integrating Custom Tags, JSTL, JSP Expression Language and AJAX.\nUsed Hibernate framework for back end development and Spring dependency injection for middle layer development\nUsed Spring MVC Transaction Management, Spring/Hibernate Batch Transactions and Hibernate cache concepts.\u00a0\nModified the Spring Controllers and Services classes so as to support the introduction of spring framework.\nUsed Spring Framework AOP Module to implement logging in the application to know the application status.\nWorked on Spring Quartz, form based authentication with Cross-Site Request Forgery CSRF token and secured REST endpoints with HTTP Basic authentication\nWorked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies.\nDeployed Spring Boot based micro services Docker container using Amazon EC2 container services and using AWS admin console.\nUsed DAO pattern to fetch data from database using Hibernate to carry out various database.\nDeveloped various generic JavaScript functions used for validations. \nDeveloped Application to asses JSON and XMl from Restful web service from consumer side using AngularJS.\nUsed Spring Inheritance to develop beans from already developed parent beans.\nDesigned and Implemented\u00a0REST\u00a0web services using JAX-RS, Spring\u00a0REST.\u00a0\nUsed\u00a0Java\u00a0Message Service (JMS) for reliable and asynchronous exchange of important information for status report.\u00a0\nWrote AngularJS services to consume Restful web service to load data.\nIntegrated the\u00a0Java\u00a0code (API) in JSP pages and responsible for setting upAngularJS framework for UI development. \nWorked\u00a0with\u00a0Swing and\u00a0RCP\u00a0using Oracle ADF to develop a search application which is a migration project.\u00a0\nWrote Scala\u00a0classes to interact\u00a0with\u00a0the database.\u00a0\nUsed Source Tree for\u00a0Git\u00a0(Subversion tool).\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nDefined MultiAction, AbstractWizardForm and SimpleForm Controllers using Spring MVC framework providing very clean division between controllers, flexibility with the use of interfaces and providing thin web layer over business layer.\nDeveloped screens using JSP, JavaScript, AJAX and Ext JS.\nDeveloped entire user interface using various Ext JS components like Form panels, Tab panels, View port and Editable grids.\nUsed\u00a0JENKINS\u00a0to build and deploy the code in Dev and SIT environments.\u00a0\nDeployed the application Code to various Remediation engines using\u00a0JENKINS.\u00a0\nUsed AJAX extensively to implement front end /user interface features in the application.\nImplemented SOA to develop Web services using Apache Axis. \nDeveloped Web Services clients to consume those Web Services as well other enterprise wide Web Services.\nExposed the Web Services to the client applications by sharing the WSDL\u2019s.\nDeveloped unit test cases using Mockito\u00a0framework for testing accuracy of code and logging is done using SLF4j + Log4j.\nManaged and maintained NoSQL (MongoDB) databases in production domain.\nFocused on Test Driven Development (TDD) thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality.\nExtensively worked on TOAD for interacting with data base, developing the stored procedures and promoting SQL changes to QA and Production Environments. \nUsed Apache Maven for project management and building the application\nEnvironment: Java/J2EE, Spring 3.x, Hibernate 4.x, Angular JS, HTML, XML, AJAX, CSS, JavaScript,Restful, GIT, MAVEN, Mongo DB, Application Server 7.0, WID 6.1.2, Rational Application Developer 7.5, Web Services, Apache Axis, Scala, Agile Methodology, JAXB, JSP, RAD.\nResponsibilities:\nInvolved in various SDLC phases like Requirement gathering, Design, Analysis and Code development and the project\nwas developed using Agile based SCRUM Methodology.\u00a0\nImplemented Struts Framework and Hibernate in the new version of the Application.\u00a0\nInvolved in coding for the presentation layer using Struts and JavaScript.\u00a0\nUsed JSP, Struts and\u00a0Java script libraries like Backbone and Jquery to develop the User Interface. \u00a0\nDeveloped Action classes, Dyna Action Forms and used Validation framework.\u00a0\nDeveloped XML application using XSLT transformations.\u00a0\nInvolved in developing the User interfaces using HTML, CSS3, JSP and java script.\nCreated the view pages (UI) using JSP and JavaScript/ JQuery.\nImplemented Marionette which is a composite application library for Backbone.js in order to simplify the large scale\nJavaScriptapplications.\u00a0\nExtensively used Java Scripts to enforce client side validations and also used JQuery for Ajax processing.\u00a0\nInvolved in development/ maintenance of various web services using IBM Websphere to interact with other applications.\u00a0\nImplemented the XSLT\u00a0templates to apply the access to the tabs (modules) based on the logged in user role.\nDeveloped multiple tools including Site Scanning tool, Report Analyzer tool used for site scanning and report generating.\nWrote various select/update/insertSQL queries and stored procedures for Sql Server.\u00a0\nSuccessfully executing offshore modeling by effective and on time knowledge sharing with offshore projectgroups through\nweekly team meetings and daily status update calls.\nUsed collections interface to provide a dynamic user interface.\nHandled Java multi threading part in back-end component, one thread will be running for each user, which servesthat user.\nGained hand-on development experience with Linux environment and Tomcat server\nBuilt single page application using Angular JS.\nWorked on EXT JS for Rich Web Application.\nInvolved in unit testing, troubleshooting and debugging. Modifying programs with enhancements.\nInvolved in fixing bugs the bugs or defects in the application.\u00a0\nDeveloped the UNIX shell scripts to automate jobs.\nUsed JMS for asynchronous communication between different modules.\nInvolved in consuming, producing\u00a0SOAP\u00a0based web services using\u00a0JAX-WS.\nImplemented SOAP over HTTP and SOAP over JMS communication.\nWorked as the part of a core team to monitor and enhance the performance of the application.\u00a0\nProvide guidance and direction to team members in their day-to-day activities.\u00a0\nEnvironment: Jakarta Struts Framework 2.0, Core Java, Hibernate 3.0, Web Services, CSS, eclipse Helios, CVS, Web Sphere Application Server 7.0, Unix/Linux, AWS, JUnit, HTML 4, CSS,  Angular JS, BackBone JS, JSON, UNIX, JavaScript, Servlets, Ext JS,JSP, SOAP, JDBC, JQuery, PL/SQL.\nResponsibilities:\nInvolved in Object analysis, design and documentation (OOAD) of the application model using\u00a0UML.\nInvolved in development of the application using\u00a0Spring Web MVC\u00a0and other components of the\u00a0Spring Framework,\u00a0the controller being\u00a0Spring Core. Also implemented\u00a0Dependency Injection\u00a0using the\u00a0Spring\u00a0IOC framework.\nDesigned and developed User Interface, application modules using Wicket pages, Spring, JavaBeans, HTML, CSS, JavaScript and AJAX.\nDesigned and developed interactive static\u00a0HTML\u00a0screens as screen level prototype,\u00a0JavaScript\u00a0for client side validation.\nDesigned Service Adapter using Adapter Service Interface (ASI) framework to interact with mobile devices.\nDeveloped Action controller, Action Forms, Tiles Structure, Validation Form Beans, AJAX code, JavaScript and worked on integration.\nUsed\u00a0Cascading Style Sheet (CSS) for designing the web pages.\nImplementation and maintenance of a Java GUI application using JSF components.\nExtensive use of JSF Framework for Controller components and View components.\nInvolved in transforming service response to JSON Response for the use of mobile device Apps.\nUsed\u00a0Spring Web\u00a0component for support of web utilities.\nUsed JSON Lint to validate JSON request and response parameters.\nUsed XPath for selecting nodes from an XML document.\nDesigned and built new SOAP web service interface implemented in Java using Apache SOAP\nUsed\u00a0AJAX\u00a0to support dynamic page element rendering to enhance user experience.\nUsed SVN as Version Control to check-in and checkout Data.\nImplemented Design Patterns like MVC, Session Facade, Factory, and DAO.\nInvolved in component development and used design patterns such as Singleton, Factory and Data Access Object (DAO) in the implementation of the application. \nUsed\u00a0Spring Context\u00a0for\u00a0EJB\u00a0Support and\u00a0Spring DAO for enhanced JDBC and DAO support.\nCreated Stored procedures using PL/SQL for data modification (Using DML insert, update, delete) in Oracle.\nUsed\u00a0Spring ORM\u00a0component for\u00a0Hibernate\u00a0support for manipulating data for\u00a0Oracle 10g.\nEnvironment: Java 1.6, J2EE 5, EJB 3.0, Spring Framework, Apache Wicket, Adapter Service Interface(ASI) framework, HTML, JavaScript, JSF, XHTML, DHTML, JSON, JSON Lint, UML, IBM WebSphere 6.5 application server, Rational Rose, IBM Rational Software Architect, SVN, ANT and Oracle.\nResponsibilities:\nDesigned Use Case and Sequence Diagrams according to UML standard using Rational Rose.\u00a0\nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action Classes for the \nentire application using Struts Framework.\u00a0\nPerformed client side validations using JavaScript and server side validations using in built Struts Validation \nFramework.\u00a0\nImplemented the data persistence functionality of the application by using Hibernate to persist java objects to \nthe relational database.\u00a0\nUsed Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from \nHibernate DAO layer.\u00a0\nUsed HQL statements and procedures to fetch the data from the database.\u00a0\nTransformed, Navigated and Formatted XML documents using XSL, XSLT.\u00a0\nUsed JMS for asynchronous exchange of message by applications on different platforms.\u00a0\nDeveloped the view components using JSP, HTML, StrutsLogictags and Strutstaglibraries.\u00a0\nInvolved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to \ndelegate request to appropriate resources.\u00a0\nInvolved in developing SQL queries, stored procedures, and functions. \nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL.\u00a0\nWorked on Linux environment for jobs scheduling forInbound data on monthly basis.\nUsed JUnit Testing Framework for performing Unit testing.\u00a0\nDeployed application in WebSphereApplication Server and developed using Rational Application Developer RAD.\u00a0\nEnvironment: Struts 2.0, Hibernate 3.0, JSP, RAD, JMS, CVS, JavaScript,, XSL, XSLT, Servlets 2.5, Websphere Application Server 6.1, Oracle 10g.\nResponsibilities:  \nWeb based search console for all products\nAttractive common look & feel, components on IE, Firefox browsers\nSingle query initiates search across all products. Searching is done very fast (in milliseconds). \nCombines all results from all terminals and presented to user.\nDeveloped presentation screens by using JSP, HTML and JavaScript.\u00a0\nDeveloped Session beans for functionality as per the requirement.\u00a0\nPrepared Unit test cases for existing functionality as per the requirement and execute the same.\u00a0\nCreated dynamic XSL to transform XML to target platform language, HTML.\nInvolved in the Integration testing support and involved in bug fixing.\u00a0\nResponsible for writing detail design documents and class diagrams and sequence diagrams.\u00a0\nUsed different Design patterns like MVC pattern, DAO pattern, and singleton to achieve clean separation of layers.\u00a0\nInvolved in\u00a0Core Java\u00a0coding by using\u00a0Java APIs\u00a0such as\u00a0Collections, Multithreading, Exception Handling, Generics, Enumeration,\u00a0and\u00a0Java I/O\u00a0to fulfill the implementation of business logic.\nDeveloped Custom tag libraries to separate presentation and processing logic.\u00a0\nDeployment of .ear files in Tomcat server.\nWorked on Hibernate persistence tier. This involves developing mapping files and Hibernate (POJOs/ DAOs)\u00a0\nUsed Lo4j debugging tool to monitor the Error Logs.\u00a0\nInvolved in developing SQL queries, stored procedures, and functions.\u00a0\nInvolved in tracking and resolving Production issues.\u00a0\nEnvironment:Servlets 2.5, JSP 2.1, Eclipse, JDBC, JavaScript, HTML, Oracle, PL/SQL, SVN, Hibernate 3.0 and Apache Tomcat\nEDUCATION:\nBachelor\u2019s in Computer Science\u201909",
  "size_bytes": 58788,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:30.144753",
  "clean_text": "candidate professional summary year professional experience designing develop testing internet intranet web base application enterprise application architecture core java concept experience work software development life cycle sdlc methodology agile waterfall model expertise object oriented principle design pattern like singleton factory pattern prototype business delegate session facade service locator observer decorator controller dao pattern extensive experience core java concept like exception handling multi threading synchronization serialization io collection framework enterprisejava beans expertise development web enterprise level application spring hibernate strut framework ejb servlets experience middleware persistence framework like hibernate jpa mapping java class database hql implement base correspond view component view components xsd xstl experience end framework jquery ajax javascript reactjs angularjs proficient client validations client server datum interaction ajax bone js hand experience develop solid understanding micro services architecture service oriented test driven development extensively different tag libraries likestrut tags jstl spring tags display tag xml xsd experience framework spring mvc jakarta struts framework jsf spring hibernate experience spring mvc ioc aop spring jdbc spring jta spring io spring security spring boot spring microservices spring ribbon spring netflix spring zuul spring eureka withthymeleaf pivotal cloud foundry experience spring security user access management ldap configuration authentication authorization develop application late technology like rest base web service jax rules engines ilog xml api tool experience distributed transaction management system spring jta base atomikos experience configure deploy application tomcat websphere weblogic jboss servers experience develop unixshell script batch processing good knowledge apache storm real time stream processing end end delivery response develop sql query procedure triggers stored procedures database oracle mysql experience work modern mean mongodb express js angularjsand nodejs experience work multiple database like oracle g sql server mysql nosql db mongo cassandra cache database involve convert cassandra sql query spark transformation spark rdd develop multiple poc scalaand deploy yarn cluster performance spark cassandra sql hand experience play framework mvc model object relational mapping tool like slick good experience amazon web services aws aws sns sqs deliver message experience aws container services docker vpc security groups iam sns lambda cloudwatchetc services experience aws cloud devops continuous integration continuous delivery ci cd pipeline build release management linux windows administration support develop microservice spring mvc spring boot spring cloud spring aop dependency injection jpa experience upgrading migrate version mongo db different platform experience perform unit testing junit integration deployment application tool ant maven debug experience junit frame work mockito easy mock springjunitrunner experience development testing deployment enterprise application platform ide eclipse rational application developer rad netbeans intellij experience different version control tracking system svn cvs git rational clear case good knowledge apache active mq series camel widely service bus experience streaming platform like apache kafka good understandingon azure service bus azure tobuild deploy manage application global network datacenter experience stack end technology grunt js glup server yoman generator angular vue js expertise selenium automation selenium webdriver selenium grid java performed integration deployment application tool ant maven gradle maintain selenium java automation code resource source control like cvs svn time improvement new feature technical skill professional experience responsibility actively involve mock screen development project start phase efficiently manage task work deliver feature fast pace scrum environment experience work agile development follow scrum process sprint daily stand meeting involve develop ui layout end programming web application match requirement client develop ui layer application angular bootstrap write code typescript implement angular components work different change procedure angularjs angular follow java design pattern code guideline design develop application work advanced mvc framework spring ioc aop mvc spring mvc spring dao spring boot spring batch spring heroku spring security spring integration spring eureka spring netflixand batch implement backend functionality extensively spring framework module like mvc auto wiring spring security aop create inject spring service spring controller dao achieve dependency injection wire object business class participate code spring aop component logging exception handling transactional model handle request advanced java feature like lambda expression array operation collection enhanced concurrency method etc application define programming work java lambda add functionality processing capability stream api facilitate pipeline processing filter method eliminate element base criterion hibernate object relational mapping orm solution technique mapping datum representation mvc model oracle relational data model sql base schema hibernate transaction management hibernate batch transactions hibernate cache concept involve development new functionality websphere commerce java websphere mq wrote sql query store procedure enhance performance run explain plan design develop microservice rest framework develop microservice spring mvc spring boot spring cloud spring aop dependency injection develop microservices communicate synchronous protocol http rest implementingsoa deploy spring boot microservicesdocker container amazon container service aws admin console utilize aws lambda platform upload datum aws bucket trigger lambda function microservice architecture spring boot base service interact combination rest apache kafka message broker implement authentication authorization site minder spring security analyse current legacy infrastructure establish business case build consensus virtualize iaas paas near term strategy saasmobile cloud service end state work creation custom docker container image push image integration ofspre boot upgrade swagger new version maintain look functionality ui hand experience mongodb installation configuring monitoring designing shared environment develop kafkaconsumers consume datum kafkatopics produce consume restfulweb service jersey api develop maven script developed build maven continuous integration server like jenkins fixed defect identify qa uat production write highly reference blog post error handling scala problems scala fixes web logic application server set deploy application involve ci cd process git jenkins job creation maven build publish fabric implementation involve deploy application unix connect log fix uat production defect develop execute maintain selenium automation script web application hand experience jboss drools guvnor write business rule decision tables agenda filter knowledge base jbpm develop custom app configuration deployment app splunk parse index multiple type log format application environment create continuous integration build antjenkins deploy websphere app server work automation platform like ansible deployed application instance jboss server environment web services spring hibernate jsp javascript jquery ajax gwt angular xml wsdl scala kafka agile methodology jira process git design patterns pl sql junit websphere mq amazon elastic beanstalk eclipse ide apache kafka mongodb docker cvs responsibility design develop code exchange project java ee platform actively involve analysis design development system testing user acceptance testing successfully follow agile methodology scrum cycle model java pattern like model view controller mvc business delegate data transfer objects data access objects factory pattern design develop end points controllers business layer dao layer hibernate spring ioc dependency injection extensively mvc factory delegate singleton design pattern implement soa develop rest base web service apache axis develop rest web services client consume web services enterprise wide web services design developed presentation tier spring mvc jsp integrate custom tags jstl jsp expression language ajax hibernate framework end development spring dependency injection middle layer development spring mvc transaction management spring hibernate batch transactions hibernate cache concept modify spring controllers services class support introduction spring framework spring framework aop module implement logging application know application status work spring quartz form base authentication cross site request forgery csrf token secure rest endpoint http basic authentication work spring quartz functionality scheduling task generate monthly report customer send mail different policy deploy spring boot base micro service docker container amazon container service aws admin console dao pattern fetch datum database hibernate carry database develop generic javascript function validation develop application asses json xml restful web service consumer angularjs spring inheritance develop bean develop parent bean design implement rest web service jax rs spring rest java message service jms reliable asynchronous exchange important information status report wrote angularjs service consume restful web service load datum integrate java code api jsp page responsible set upangularjs framework ui development work swing rcp oracle adf develop search application migration project wrote scala class interact database source tree git subversion tool hibernate transaction management hibernate batch transactions hibernate cache concept define multiaction abstractwizardform simpleform controller spring mvc framework provide clean division controller flexibility use interface provide thin web layer business layer develop screen jsp javascript ajax ext js develop entire user interface ext js component like form panel tab panel view port editable grid jenkin build deploy code dev sit environment deploy application code remediation engine jenkins ajax extensively implement end interface feature application implement soa develop web service apache axis develop web services client consume web services enterprise wide web services expose web services client application share wsdl develop unit test case mockito framework test accuracy code logging manage maintain nosql mongodb database production domain focus test driven development tdd create detailed junit test single piece functionality actually write functionality extensively work toad interact datum base develop store procedure promote sql change qa production environments apache maven project management build application environment java spring hibernate angular js html xml ajax css javascript restful git maven mongo db application server wid rational application developer web services apache axis scala agile methodology jaxb jsp rad responsibility involve sdlc phase like requirement gathering design analysis code development project develop agile base scrum methodology implement struts framework hibernate new version application involve code presentation layer struts javascript jsp struts java script library like backbone jquery develop user interface develop action class dyna action forms validation framework develop xml application xslt transformation involve develop user interface html jsp java script create view page ui jsp jquery implement marionette composite application library order simplify large scale javascriptapplications extensively java scripts enforce client validation jquery ajax processing involve maintenance web service ibm websphere interact application implement xslt template apply access tab module base log user role develop multiple tool include site scanning tool report analyzer tool site scanning report generating write select update insertsql query store procedure sql server successfully execute offshore modeling effective time knowledge sharing offshore projectgroup weekly team meeting daily status update call collection interface provide dynamic user interface handle java multi thread end component thread run user servesthat user gain hand development experience linux environment tomcat server build single page application angular js work ext js rich web application involve unit testing troubleshooting debugging modify program enhancement involve fix bug bug defect application develop unix shell script automate job jms asynchronous communication different module involve consume produce soap base web service jax ws implement soap http soap jms communication work core team monitor enhance performance application provide guidance direction team member day day activity environment jakarta struts framework core java hibernate web services css eclipse helios cvs web sphere application server unix linux aws junit html css angular js backbone js json unix javascript servlets ext js jsp soap jdbc jquery pl sql responsibility involve object analysis design documentation ooad application model uml involve development application spring web mvc component spring framework controller spring core implement dependency injection spring ioc framework design develop user interface application module wicket page spring javabeans html css javascript ajax design develop interactive static html screen screen level prototype javascript client validation design service adapter adapter service interface asi framework interact mobile device develop action controller action forms tiles structure validation form beans ajax code javascript work integration cascading style sheet css design web page implementation maintenance java gui application jsf component extensive use jsf framework controller component view component involve transform service response json response use mobile device app spring web component support web utility json lint validate json request response parameter xpath select node xml document design build new soap web service interface implement java apache soap ajax support dynamic page element render enhance user experience svn version control check checkout data implement design patterns like mvc session facade factory dao involve component development design pattern singleton factory data access object dao implementation application spring context ejb support spring dao enhanced jdbc dao support create store procedure pl sql datum modification dml insert update delete oracle spring orm component hibernate support manipulate datum oracle environment java ejb spring framework apache wicket adapter service framework html javascript jsf xhtml dhtml json json lint uml ibm websphere application server rational rose ibm rational software architect svn ant oracle responsibility design use case sequence diagrams accord uml standard rational rose implement model view controller architecture develop form class action class entire application struts framework performed client validation javascript server validation build struts validation framework implement data persistence functionality application hibernate persist java object relational database hibernate annotations reduce time configuration level access annotated bean hibernate dao layer hql statement procedure fetch datum database transform navigate format xml document xsl xslt jms asynchronous exchange message application different platform develop view component jsp html strutslogictags strutstaglibraries involve designing implementation session facade business delegate service locator pattern delegate request appropriate resource involve develop sql query store procedure function creation database object like table view oracle tool like toad sql plus involve write store procedure pl sql work linux environment job schedule forinbound datum monthly basis junit testing framework perform unit testing deploy application websphereapplication server develop rational application developer rad environment strut hibernate jsp rad jms cvs javascript xsl xslt servlets websphere application server oracle responsibility web base search console product attractive common look feel component ie firefox browser single query initiate search product search fast millisecond combine result terminal present user develop presentation screen jsp html javascript develop session bean functionality requirement prepare unit test case exist functionality requirement execute create dynamic xsl transform xml target platform language html involve integration testing support involve bug fixing responsible write detail design document class diagram sequence diagram different design pattern like mvc pattern dao pattern singleton achieve clean separation layer involve core java code java api collection multithreading exception handling generics enumeration java o fulfill implementation business logic develop custom tag library separate presentation processing logic deployment file tomcat server work hibernate persistence tier involve develop mapping file hibernate dao debug tool monitor error logs involve develop sql query store procedure function involve track resolve production issue environment servlets jsp eclipse jdbc javascript html oracle pl sql svn hibernate apache tomcat education bachelor computer"
}