{
  "filename": "Candidate204.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate204.docx",
  "text": "Candidate204\nOBJECTIVE:  \t\nSeeking a position at your Company where I can maximize my 8+years experience. I believe in hard work that uplifts my spirit and dedication enabling me as a catalyst for any company\u2019s growth I work for.\nPROFILE SYNOPSIS:\nExperienced in all the phases of software development life cycle with Analysis, Design, Development, Integration, Implementation and Testing of various client/server, N-tier and Web Applications.\nStrong programming skills in Java and J2EE with extensive ability to develop scalable applications.\nProficient inJava and J2EE technologies including JSP, JDBC, JPA and JMS.\nExperienced inHTML, XHTML, DHTML, XML, CSS, Angular, JavaScript, jQuery, JSP and Servlets.\nExperienced in developing web applications using Java, Servlets, JSP, JDBC, JNDI and AJAX.\nWorked in MVC architecture with Magento, Angular JS and SPRING and Spring AOP.\nExpertise to make SPA\u2019s betterusing AngularJS directives and filtersand integratedwithSpring forms.\nExperienced with Front-End frameworks like AJAX, JavaScript, ReactJS, BackboneJS and Angular JS.\nExperienced in web Application servers like Web Logic,JBoss, WebSphere andTomcat.\nExperienced with web services (SOAP/RESTful) and used to scale the applications for better BOA.\nWorked on Service OrientedArchitecture (SOA) such as Apache Axis web services which useSOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nExpertise in design and development of enterprise level spring based web applications using Spring REST,Hibernate, EJB, Struts, Servlets, JSP and JSF for User Interface Applications.\nProficient inSpring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\nDeveloped and implemented stand-alone applications with Spring Micro services and their patterns.\nWorked on Spring Ribbon for load balancing and used fail safe methodology using Circuit Breaker pattern with Hystrix/Dashboard on designing and implementing Micro service applications.\nUsed Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeperto maintain services.\nBuild hypermedia-driven and implemented connectors between Hateoas and Spring REST services.\nExperienced with distributed transaction management with isolation/propagation levels with Spring JTA.\nProficiency in developing/maintaining using Oracle, MySQL and SQL Server.\nExperienced in AWSDynamoDB to capture the any modification on DB. \nAdding permissions to AWSSQS to interact with the Queue and involved in writing custom policies.\nProficient in SQL, PL/SQL, Stored Procedures and Triggers while dealing with automation on DB.\nExperienced with NoSQL databases like MongoDB, Couch DB and Cassandra on large data platforms.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD and AI.\nGood knowledge on hosting Python applications using WWGI module.\nExperience in using Jenkins for Continuous Integration and Sonar jobs for java code quality.\nExperienced in using Eureka Servers while deploying in EC2. \nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nStrongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing.\nProficient on Automation tools like SeleniumWebDriver and SeleniumGRID using Java for developing automation scripts in Eclipse IDE with TestNG, Maven and Jenkins for testing Web Based Applications.\nExperience with the Integrated Development Environments like Eclipse, NetBeansand IntelliJ.\nExperienced with CICD - ANT/MAVEN/GRADLE/JENKINS/HUDSON/CVS/GIT/GITHUB.\nTECHNICAL SKILLS: \nPROJECTS:\nResponsibilities: \nWorked in a highly dynamic AGILE environment and participated in scrum and sprint meetings.\nDeveloped an attractive GUI using Angular JS that users can interact dynamically at runtime.\nDeveloped custom directives, Factories and Services in AngularJS and implemented code according to coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used\u00a0Core\u00a0Java\u00a0such as Exceptions, and Collections.\u00a0\nDeveloped an application were involved in design changes using HTML5, CSS3 and fraction of JavaScript.\nWorked extensively to achieve DOM Show, hide elements and Event Handlingusing Angular JS.\nExtensively worked in front end JavaScript frameworks like AngularJS, BackboneJS and ReactJS etc.\nWorked on server-side validations, handle actions,events and Encapsulationbyimplementing React JS.\nInvolved in the design, development and implementation of a Client front end using JavaSwing.\nDeveloped Swing Suite for look and feel as well as binding data to the GUI. \nDesigned multiple screens using various Swing Components and layouts.\nWorked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. \nWorked on business logic and calculations, performs analysis, handles data transfers, and generates XSL for presentation layer and SQL commands for database layer. \nExperienced on spring framework applications like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security and Spring Boot anddid integration to Micro\u00a0services\u00a0into existing system architecture.\nCreating REST based Web Services by establishing links using Hateoas from spring based Applications.\nExperienced in implementing Micro\u00a0services,\u00a0Service\u00a0Oriented Architecture (SOA) with XML based Web\u00a0Services\u00a0(SOAP/UDDI/WSDL) using Top Down and Bottom Up approach.\u00a0\nInvolved in writing application level code to interact with APIs, Web Services using JSON.\nExperience in creating\u00a0RESTful\u00a0web\u00a0services\u00a0using Jersey,\u00a0spring\u00a0framework and JAX-RS.\nJava Beans are used as container of business logic and supporting the services or applications.\nWorkedwith Docker to deployMicro-services in modern containers to increase Isolation.\nWorked on integrated Hystrix dashboard to monitor springmicro-services using CircuitBreaker.\nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nInvolved in developing API\u2019s and REST\t API proxy using APIGEE edge and for sending mobile notifications.\nExperienced with cloud services like Cloud Foundry and AWS.\nDesigned and implemented intranet applications using RubyonRails and PostgreSQL on AWS Cloud managed code versioning with GitHub and deployment to staging and production servers.\u00a0\nWorked with DROOLS engineforspring integration and validate business rule before executing in runtime.\nDeveloped the Web Services Client using REST, RSDLfor verifying the new customer history to a connection. \nWorked on XML parsers (JAXB) for data retrieval and JAXB parser for marshalling and unmarshalling. \nTo establish a connection to server,SQL statements that were passed through hibernate.\nWriting Queries to get the information from MongoDB for adjusting the data in DB. \nWorked withCURL to move data from a server using http and https protocols.\nExperienced with event-driven and scheduled AWSLambda functions to trigger various AWS resources.\nWorked with AWScloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nPerformed Query operations on AWS Dynamo DB and captured the modification data on Dynamo DB.\nInvolved in AWSSQS to interact with queue and giving roles to it and involved in writing Custompolicies.\nCreated instances on AWSEC2 and configure using CMSAnsible and Automation installation using CMS.\nParticipated in troubleshooting issues on AWS, Netflix Eurekaand Cloud environments.\nInvolved in writing Java API for Amazon Lambda to manage some of the AWS services.\nMentoring Development on integrating Xstore POS \\ Xoffice products with Retailers.\nWorked on POC for multiple international Xstore POS implementations, including designing the test lab and test strategy for new implementations, maintenance releases.\nWorked system logging using Elastic search, KibanaLog stashtocreate dashboards in Splunk and Kibana. \nDeveloped Pythonscripts and shell scripts for datamaintenance and unittesting and created UNIXSHELL scripting and Python scripting for automate process.\nConstructed web pages for application using MVC&JavaScript, jQuery, NodeJS.\nUsed\u00a0Node.js\u00a0to develop the relevant back end RESTful API.\nDeveloped crypto rest services using Nodejs and integrated services with HSM(Hardware Security Module).\nImplemented modules into NodeJS to integrate with designs and requirements and used NodeJS Express Framework.\u00a0\nInvolved in the development of distributed server-side components and deployed the various Session and Entity Bean Components in the IBMWebSphere Application Server.\nPerformed different types of testing on various test scripts on Selenium WebDriver and TestNG.\nUsed MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nUsed SeleniumGrid to execute Selenium automation suites on different platform; performed browser combinations in parallel and for cloud execution used SAUCELABS. Used GIT as a version Control.\nWorked with Appium for mobile testing for Android and IOS. \nUsing JUnit test in Eclipse, developed Unit test cases and test suite. Curl was also implemented to test.\nUsed Jenkins as the integration tool and improved scalability of applications on cross-platforms.\nInvolved in System Testing, Integration Testing, and Production Testing on WebLogic Server.\nEnvironment: Java/JDK,J2EE, Swing, Log4j, AngularJS,Web Services, Hystrix Dashboard, Spring Kafka, AWS, Netflix Eureka,Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN build tool, JUnit, Ruby on Rails, Kibana, Splunk,Apigee, Hateoas, Drools, Jenkins Continuous integration tool, WebLogic Application Server,MongoDB,Linux OS, Agile Methodology, Curl, GIT, PL/SQL, Docker.\n\u00a0Responsibilities: \nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDeveloped and implemented\u00a0Swing, spring and J2EE based MVC framework for the application.\u00a0\nUsed multithreading in programming to improve overall performance.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Angular JS and AJAX, for developing presentation layer.\nInvolved in payment status report for asynchronous exchange of information using JMS.\u00a0\nParticipated in creation of Spring Configurations using Java8 features, Lambda expressions, Streams, filters.\nUsed JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating TwitterBootstrap\u00a0with\u00a0Angular\u00a0JS and media queries.\nCreated the AngularJS app using\u00a0Yeoman, Grunt and Bower and used Angular UI for component model.\nActively involved in using MVC, HTML5 to enable client-side date to meet specific criteria by applying various validation variables and used the\u00a0CSS classes to provide visual feedback on validation.\u00a0\nUsed JSP to dynamically generate web pages based on HTML and XML Document types. Use JSF (Java Server Faces) to implement component based User Interface Applications.\nJSON used as the main data-interchange format in place of XML.\nUsed\u00a0Sonar\u00a0to analyze and measure source code quality.\nCRUD was used as part of servlets where DML operations were required on RDBMS like SQL DB\u2019s.\nInvolved in developing UI pages using\u00a0AngularJS and calling the Rest API's from backend.\u00a0\nCreated RFP microservice\u00a0to provide RESTful API utilizing Spring Boot with\u00a0Microservices.\nDeveloped SOAP based JAX-WSWeb Service interfaces for integrating multiple systems, code re-usability.\nUsed Dependency Injection feature for wiring and defined dependencies using constructor arguments.\nImplementation of data access layer has been cumbersome for a while and this was greatly resolved using Spring JPA through implementation of data access layers there by reducing boiler-plate-code.\nUsed Micro-services to ensure the scalability of application on cloud infrastructure.\nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security\u00a0Oauth-2.0.\u00a0Added WS-Security\u00a0using XWSS to secure the Web services.\nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nUsed Tomcat Serveras the chief enterprise level server while dealing the database activities with hibernates.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services.\u00a0\nUtilized spring core, AOP and\u00a0security\u00a0to build robust business operations with transactional support.\u00a0\nDefined several UML diagrams; Activity diagrams, Sequence and Object diagrams.\nDeveloped unit and integration tests for existing\u00a0microservices\u00a0using JUnit, Mockito and Docker environments.\nDeveloped the data access classes using JDBC and SQLquerylog4j for logging and SVN for version control.\nWorked on\u00a0Rest\u00a0Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation.\u00a0\nCreated Hibernate persistent and configuration files for ORM implementation.\nUsed\u00a0Git\u00a0as Version Control System for the application.\u00a0Used\u00a0JMeter\u00a0to test performance of SOAP protocol.\nUsed spring framework including spring core/IoC, Spring Web, Spring\u00a0Security.\u00a0\nWorked with and implemented on developing and maintaining robust and effective PageObjectModel Design Pattern and Created Keyword-Driven and Data-Driven Framework using SeleniumWebDriver configured under TestNG environment and used MAVEN for adding dependencies.\nParticipated in Defect tracking team using ALM Quality Center for Defect tracking, Defect priority and status.\nGUI design and development using\u00a0Java\u00a0Swing, JFC\u00a0Used for open source web testing.\nDeveloped AWS\u00a0LambdaFunctions in a stateless style and ensure there is no affinity between and compute infrastructure to manage the servers and run the code in the\u00a0AWS.\nEnvironment: Java,\u00a0J2EE, JDK, RCP, AWS\u00a0SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP/Rest, Web Services, JavaScript, UML, Bower, HTML, CSS, SASS, Sonar, WAS 8 WSDL, JIRA, JAX-WS, JAX-RS, OWASP, JMS, Oracle, Angular JS, NodeJS, Tomcat, Spring,Spring Boot, Spring Batch, AJAX, Apache JMeter, jQuery, JUnit, Maven.\nResponsibilities:\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in\u00a0Java Multithreading\u00a0to cascade multiple changes on multiple records in only one transaction\nResponsible for JAVA, J2EE, JSF, JBPM, EL and Java FX coding / development.\nUsing Struts Framework developed and implemented the web-based application following the\u00a0MVC.\nUsed\u00a0Spring\u00a0MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used\u00a0Hibernate\u00a0as ORM to map\u00a0Java\u00a0classes to data base tables.\nImplemented J2EE patterns,\u00a0Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate,IBM Web Sphere.\nUsed spring framework for middle tier and Spring-hibernate for data access.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nUsed multithreading\u00a0to\u00a0improve performance in generating the reports in Java.\nExtensively developed User defined Custom JSP tags to separate presentation from application logic.\nDesigned and developed\u00a0Web Services (SOAP, WSDL).\u00a0Created and compiled\u00a0XML Schema\u00a0to generate\u00a0JavaBean\u00a0classes using\u00a0Apache Axis.\nInstallation, Configuration & administration of WebLogic application Server.\nUsed AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA.\nDeveloped HTML and JavaScript. Developed Scripts for\u00a0UNIX\u00a0platform deployment.\nUsed ANT for compilation and building JAR, WAR and EAR files.\nUsed\u00a0Log4J, Splunk\u00a0for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysingBusiness Requirements and handling it as per Requirements.\nProject coordination with other Development teams, System managers and web master and developed good working environment.\nEnvironment:\u00a0Java, JSP, Servlets, JSF, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services (SOAP/WSDL and REST), Multithreading, Web Logic Application Server, Junit, Maven, Log4J, SVN, Oracle, UNIX.\nResponsibilities:\nInvolved in the analysis, design, and development and testing phases of Software Development\u00a0Life Cycle.\nDeveloped N-tier client-server business application software using Model View Controller (MVC) Architecture. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalityInvolved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs).\nUsed Hibernate in persistence layer and developed POJO's,Data Access Object to handle database operations.\nWorked on System\u00a0security\u00a0with the use of SSL (Secure socket layer), encryption and used role-based\u00a0security.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExpertise in developing reusable and interoperable Web service modules based on\u00a0microservices, SOA architecture using SOAP and RESTfulandPreparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JUnit Test Cases and Ant Build Script. \nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nWSDL has been used to expose the Web Services. \nSOAP has been used as a protocol to Communicate in the form of XML messages.\nDeveloped client request validations and processing using JavaScript and HTML.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nHands-on Experience onSelenium Web Driver to write user stories. \nUsed MAVEN as a build tool in adding dependences with PAGE OBJECT MODEL design pattern.\nEnvironment:\u00a0Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, WebSphere Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven.\nResponsibilities:\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nDeveloped web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern.\nWrote JavaScript for client-side validation.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nConfigured Bean mappings within the framework and Hibernate persistence.\nMonitored the logs using Log4j and fixed the problem.\nThe application was deployed on the Tomcat.\nUsed CVS as version control system. \nKnowledge on bug fixing and ProductionSupport.\nEnvironment:J2EE, JDBC, Struts, Hibernate, JavaScript, HTML, CSS, JSP, Servlet, Tomcat, Oracle, EclipseIDE, CVS,Log4j.\nResponsibilities:\nDesign and Development of the Object-Oriented applications using OOA and OOD techniques in all Business\nAreas using CVS.\nDesigned and developed web pages using HTML, CSS and JSP.\nWrote Client-side validation scripts using JavaScript.\nStored data in Oracle database and accessed using Oracle JDBC drivers.\nImported Client data into the database from XML file by using the XML Parser.\nWorked on bug fixing and ProductionSupport.\nEnvironment: JDK, Servlets, JSP, JDBC, SQL, HTML, JavaScript, Eclipse, XML and CVS.",
  "size_bytes": 48319,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:41.508429",
  "clean_text": "objective seek position company maximize experience believe hard work uplift spirit dedication enable catalyst company growth work profile synopsis experience phase software development life cycle analysis design development integration implementation testing client server n tier web applications strong programming skill java extensive ability develop scalable application proficient injava technology include jsp jdbc jpa jms experience inhtml xhtml dhtml xml css angular javascript jquery jsp servlets experience develop web application java servlets jsp jdbc jndi ajax work mvc architecture magento angular js spring spring aop expertise spa betteruse angularjs directive filtersand integratedwithspre form experience end framework like ajax javascript reactjs backbonejs angular js experience web application server like web logic jboss websphere andtomcat experience web service soap restful scale application well boa work service orientedarchitecture soa apache axis web service usesoap rest wsdl exposure jaxb jax rpc jax rs jax ws expertise design development enterprise level spring base web application spring rest hibernate ejb struts servlets jsp jsf user interface applications proficient inspre aop security event handling spring mvc spring ioc container develop implement stand application spring micro service pattern work spring ribbon load balancing fail safe methodology circuit breaker pattern hystrix dashboard design implement micro service application apache kafka integration data processing spring multi thread message consumption work zookeeperto maintain service build hypermedia drive implement connector hateoas spring rest service experience distribute transaction management isolation propagation level spring jta proficiency develop maintaining oracle mysql sql server experience awsdynamodb capture modification db add permission awssqs interact queue involve write custom policy proficient sql pl sql stored procedures triggers deal automation db experience nosql database like mongodb couch db cassandra large datum platform experience docker image containers push pull spring boot jenkins cicd ai good knowledge host python application wwgi module experience jenkins continuous integration sonar job java code quality experience eureka servers deploy hand experience netflix cloud fall technology like eureka hystrix ribbon extensive work amazon web services like elastic beanstalk ami linux strongly associate usage selenium jenkins junit curl unit system testing proficient automation tool like seleniumwebdriver seleniumgrid java develop automation script eclipse ide testng maven jenkins test web base applications experience integrated development environments like eclipse netbeansand experience cicd ant maven gradle jenkins hudson cvs git github technical skills project responsibility work highly dynamic agile environment participate scrum sprint meeting develop attractive gui angular js user interact dynamically runtime develop custom directive factories services angularjs implement code accord code standard create angularjs controller isolate scope perform operation extensively core java exception collection develop application involve design change fraction javascript work extensively achieve dom hide element event handlingusing angular js extensively work end javascript framework like angularjs backbonejs reactjs etc work server validation handle action event encapsulationbyimplemente react js involve design development implementation client end javaswing develop swing suite look feel bind datum gui design multiple screen swing components layout work thread handle maintain continuity execution extensively implement multithreading concept handle transaction management isolation propagation level work business logic calculation perform analysis handle datum transfer generate xsl presentation layer sql command database layer experience spring framework application like spring core spring aop spring mvc spring batch spring security spring boot anddid integration micro service exist system architecture create rest base web services establish link hateoas spring base applications experience implement micro service service oriented architecture soa xml base web services soap uddi wsdl approach involve write application level code interact api web services json experience create restful web service jersey spring framework jax rs java beans container business logic support service application workedwith docker deploymicro service modern container increase isolation work integrate hystrix dashboard monitor springmicro service circuitbreaker work spring ribbon kafka broker service handle heavy traffic involve develop api rest api proxy apigee edge send mobile notification experience cloud service like cloud foundry aws design implement intranet application rubyonrails postgresql aws cloud manage code versione github deployment staging production server work drools engineforspring integration validate business rule execute runtime develop web services client rest rsdlfor verify new customer history connection work xml parser jaxb datum retrieval jaxb parser marshalling unmarshalling establish connection server sql statement pass hibernate write query information mongodb adjust datum db work withcurl datum server http https protocol experience event drive schedule awslambda function trigger aws resource work awscloud service create instance provide role participate write custom policy deploy application elastic bean stalk performed query operation aws dynamo db capture modification datum dynamo db involve awssqs interact queue give role involve write custompolicies create instance configure cmsansible automation installation cms participate troubleshoot issue aws netflix eurekaand cloud environment involve write java api amazon lambda manage aws service mentoring development integrate xstore pos xoffice product retailers work poc multiple international xstore pos implementation include design test lab test strategy new implementation maintenance release worked system log elastic search kibanalog stashtocreate dashboard splunk kibana develop pythonscripts shell script datamaintenance unittesting create unixshell scripting python script automate process construct web page application jquery nodejs develop relevant end restful api develop crypto rest service nodejs integrated service security module implement module nodejs integrate design requirement nodejs express framework involve development distribute server component deploy session entity bean components ibmwebsphere application server perform different type testing test script selenium webdriver testng maven build process generate documentation reporting add dependency seleniumgrid execute selenium automation suite different platform perform browser combination parallel cloud execution saucelabs git version control work appium mobile testing android ios junit test eclipse developed unit test case test suite curl implement test jenkins integration tool improve scalability application cross platform involve system testing integration testing production testing weblogic server environment java jdk swing angularjs web services hystrix dashboard spring kafka aws netflix eureka netflix ribbon hibernate rest json restful eclipse maven build tool junit ruby rail kibana splunk apigee hateoas drools jenkins continuous integration tool weblogic application server mongodb linux os agile methodology curl git pl sql docker responsibility responsible stage design development deployment application active role test driven development term tdd apart agile software development define construct layer server object client interface base design pattern develop implement swing spring base mvc framework application multithreading programming improve overall performance design analyze develop end end servlets bootstrap designing angular js ajax develop presentation layer involve payment status report asynchronous exchange information jms participate creation spring configurations feature lambda expression streams filter javascript jquery user interaction page create responsive web application integrate twitterbootstrap angular js medium query create angularjs app yeoman grunt bower angular ui component model actively involve mvc enable client date meet specific criterion apply validation variable css class provide visual feedback validation jsp dynamically generate web page base html xml document type use jsf java server faces implement component base user interface applications json main data interchange format place xml sonar analyze measure source code quality crud servlet dml operation require rdbms like sql db involve develop ui page angularjs call rest api backend create rfp microservice provide restful api utilize spring boot microservice develop soap base jax wsweb service interface integrate multiple system code usability dependency injection feature wiring define dependency constructor argument implementation datum access layer cumbersome greatly resolve spring jpa implementation datum access layer reduce boiler plate code micro service ensure scalability application cloud infrastructure develop restful web service system interact system secure service spring security add ws security xwss secure web service configure hibernate spring orm spring hibernate integration good result tomcat serveras chief enterprise level server deal database activity hibernate spring mvc component implement business layer spring boot micro service utilize spring core aop security build robust business operation transactional support define uml diagram activity diagram sequence object diagram develop unit integration test exist microservice junit mockito docker environment develop data access class jdbc log svn version control work rest web service backend service oracle database service restful web service jersey jax rs implementation create hibernate persistent configuration file orm implementation git version control system application jmeter test performance soap protocol spring framework include spring core ioc spring web spring security work implement develop maintain robust effective pageobjectmodel design pattern created keyword driven data drive framework seleniumwebdriver configure testng environment maven add dependency participate defect tracking team alm quality center defect tracking defect priority status gui design development java swing jfc open source web testing develop aws lambdafunctions stateless style ensure affinity compute infrastructure manage server run code aws environment java jdk rcp aws sdk git swing jfc spring hibernate core java soap rest web services javascript uml bower html css sass sonar wsdl jira jax ws jax rs owasp jms oracle angular js nodejs tomcat spring spring boot spring batch ajax apache jmeter jquery junit maven responsibility involve system analysis design methodology object oriented design development ooad methodology capture model business requirement involve java multithreading cascade multiple change multiple record transaction responsible java jsf jbpm el java fx coding development struts framework develop implement web base application follow mvc spring mvc web module involve design development new action class interact business logic hibernate orm map java class datum base table implement pattern data access object dao session facade business delegate value object implement service layer spring transaction log interceptor fix bug develop new enhancement java spring hibernate ibm web sphere spring framework middle tier spring hibernate datum access twitter bootstrap create responsive web page display properly different screen size implement soa develop rest base web service apache axis multithreading improve performance generate report java extensively develop user define custom jsp tag separate presentation application logic design develop web services soap wsdl create compile xml schema generate javabean class apache axis installation configuration administration weblogic application server angularjs create view hook model dom synchronize datum server spa develop html javascript develop script unix platform deployment ant compilation building jar war ear file splunk log trace message implement test scripts base user requirements specify business requirement document analysingbusiness requirements handle requirements project coordination development team system manager web master develop good working environment environment java jsp servlets jsf spring aop ioc spring mvc hibernate xml jbpm html jdbc web service web services soap wsdl rest multithreading web logic application server junit maven svn oracle unix responsibility involve analysis design development testing phase software development life cycle developed n tier client server business application software model view controller mvc architecture extensive use core java collections generics exception handling design patterns functionalityinvolved write different design patterns like filter action business delegate service locater data transfer objects dto data access objects dao hibernate persistence layer developed data access object handle database operation work system security use ssl secure socket layer encryption role base security json light nature chief source communication server application expertise develop reusable interoperable web service module base microservice soa architecture soap restfulandpreparation java jsp code standard checklist involve development servlet struts action class business objects web services involve write junit test case ant build script involve write jsp bean logic html iterate tags wsdl expose web services soap protocol communicate form xml message develop client request validation processing javascript html hibernate transaction management hibernate batch transactions hibernate cache concept implement expose micro service base restful api utilize spring boot spring mvc develop struts action forms action class perform action mapping strut hand experience onselenium web driver write user story maven build tool add dependence page object model design pattern environment java jsp html css servlets xml soap wsdl oracle eclipse jax r jax ws pl sql websphere server struts dao aop spring mvc spring hibernate junit maven responsibility create user friendly gui interface web page html css jsp develop web application struts jsp servlet java bean use mvc design pattern wrote javascript client validation write sql jdbc prepare statement retrieve datum database configure bean mapping framework hibernate persistence monitor log fix problem application deploy tomcat cvs version control system knowledge bug fixing productionsupport environment jdbc struts hibernate javascript html css jsp servlet tomcat oracle eclipseide cvs responsibility design development object orient application ooa ood technique business areas cvs design develop web page html css jsp wrote client validation script javascript store datum oracle database access oracle jdbc driver import client datum database xml file xml parser work bug fixing productionsupport environment jdk servlets jsp jdbc sql html javascript eclipse xml cvs"
}