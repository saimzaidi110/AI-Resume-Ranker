{
  "filename": "Candidate99_Resume.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate99_Resume.docx",
  "text": " Candidate 99\nCandidate99.snr87@gmail.com\n(347)-921-1618\nOBJECTIVE\nLooking to contribute design, analysis, development, management, documentation and interpersonal skills to an organization that\u2019s growing, expanding and using leading-edge; Industry-proven technologies. The fundamental aim is to gain a dynamic and challenging role in the areas of Software Engineering in big projects that will offer the best opportunity for further development of my abilities, skills and knowledge in an established substantial firm with long term\u00a0career\u00a0growth possibilities. I strongly believe that I will highly contribute to the company development with my individual ability of organized, creative, and self-motivated in multi-tasking and working individually or as a member of the team.\nPROFESSIONAL SUMMARY\nHaving 8 years of Extensive IT experience in all phases of Software Development Life Cycle (SDLC) including Analysis, design, implementation, integration, testing and maintenance of applications using JAVA/J2EE technologies. \nWell versed with complete Software Development Life Cycle (SDLC) using various methodologies like\u00a0Agile Methodology, Waterfall and Test-Driven Development.\nExperience with design patterns like Singleton, Factory Pattern, Prototype, Business Delegate, Session Facade, Service locator, Observer, Decorator, Front Controller and DAO pattern.\nExpertise in developing UI using JSP, HTML5, CSS3, Java Script, Bootstrap, jQuery, Ajax, Angular JS and Node.js.\nHands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, s, Spring Security, Spring Data and Spring Boot.\u00a0\nExperience with Java 8 features such as lambda expressions, Streams and Parallel Operations.\nExperience in developing the application with Service Oriented Architecture (SOA) and Micro Services Architecture and Test-Driven Development.\nHands-on experience on various AWS Cloud services like EC2, optRoute53, EBS, Auto Scaling, VPC, Cloud      Formation, S3, RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling.\nHaving Good experience in developing and migrating existing application into cloud-based platforms like Amazon Web Services (AWS) and Pivotal Cloud Foundry.\u00a0\nExpert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics.\nDeveloped Web-based enterprise applications using Java/J2EE, Core Java, Servlets, JDBC, Hibernate, Web Services (SOAP and REST) and MVC Framework (Struts, Spring MVC).\nStrong experience in developing and consuming SOAP and RESTful based Web Services.\nExpertise in XML technologies like DTD, XSD, XSLT and various parsers like DOM, SAX and JAXB.\u00a0\u00a0\nExperience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL (Hibernate Query Language).\nExtensive knowledge in developing java persistence API (JPA) layer using Mybatis.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue.\nExperience in developing XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration.\nStrong experience in database design using PL/SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data.\nExpertise in using JDBC and Hibernate for connection and access to databases.\nGood experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB2 and No SQL databases like Mongo DB, Cassandra and Dynamo DB.\nExperience with application servers like\u00a0Web Logic, JBOSS, Apache Tomcat\u00a0and\u00a0IBM Web Sphere.\nExpertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ.\nProficient in Continuous Integration and Continuous Deployment tools like Jenkins.\nExperience with JUnit and Mockito in developing test cases and Log4J in determining application functionality.\nHaving Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server.\nExperience working with version control tools like Git Hub, Subversion(SVN) and CVS. \nExperience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments.\nStrong interpersonal and communication skills and self-motivated individual showing ability to learn and use new technologies and frameworks in considerably less time.\nTechnical Skills:\nPROFESSIONAL EXPERIENCE\nClient: Deutsche Bank\t\t                                                                                                            July\u201916 \u2013 Till Date\nLocation: New York\nRole: Sr. Java Full Stack Developer\nDescription: Deutsche\u00a0bank\u00a0spanned across the Europe, Asia and Middle East as well, which mainly involves in Global Transaction Banking, Corporate banking & Securities and Wealth management. Loan application of our project is an n tier based client/server comprehensive solution that makes it possible to receive process and close loans from a broker, over Internet, or at the\u00a0bank branch. The Loan system resides on a robust database engine, providing clients with proven scalability that will meet the needs of the largest lenders. This centralized database aggregates loan information for all lines of business and sources of origination.\u00a0\nResponsibilities: \nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development and testing Followed Agile methodology. \nInteracted with the client, provide/take feedback on the features, suggest implement optimal solutions and tailored application to customer needs.\nDeveloped applications using\u00a0Application Lifecycle Management\u00a0to deliver reliable applications \nUtilized Java 8 features like Lambda expressions for collection evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment.\nDeveloped UI using HTML5, CSS3, JavaScript, Bootstrap, jQuery, Angular 2, and Node JS.\nInvolved in Java code, which generated XML document, which in turn used XSLT to translate the content into HTML to present to GUI.\nDesigned and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring JDBC.\nImplemented the authentication and authorization of the application using Spring Security and Oauth2.\u00a0\nImplemented Spring IOC to make code loosely coupled and for Dependency Injection and Spring AOP for logging purposes.\n\u00a0Used\u00a0Thymeleaf as server side template engine along with spring MVC and spring data repositories.\nDesigned and developed Micro Services business components and RESTful service endpoints using Spring boot.\nImplemented Micro Service Architecture with Spring Boot based RESTful services and consumed SOAP based Web Services.\u00a0\nImplemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively.\nImplemented RESTful Web Services to retrieve data from client side using Micro Services Architecture.\nExperience in creating RESTful web services using Jersey, Spring framework and JAX-RS.\nImplemented Multithreading, Concurrency, Exception Handling and Collections whenever necessary.\nPrepared calls through Hibernate and Spring JDBC for Interacting with the Database.\nExperience in Hibernate which includes integrating legacy databases, writing custom CRUD statements, integrating stored procedures and functions and also performed polymorphic associations.\nExperienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances.\nExperienced working with database setup and maintenance on\u00a0AWS\u00a0EC2.\nCurrently working on Docker container implementation for the Enterprise build system.\nWorked Docker container management along with volumes, container based DB and services, Docker\u00a0Arti factory configuration and setup.\nIngested Data in to OLMS repository which come from the upstream as a source information.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB.\nWorked on\u00a0Mongo\u00a0DB\u00a0and wrote code which finds, update, save and insert data to\u00a0Mongo\u00a0DB.\nPerformed data extraction and loading the JSON data with the server-side content in to the\u00a0Mongo\u00a0DB.\nConfigured JMS Server setup and DB Connection pool setup & deployed Returned items in Web Sphere Server.\nDeveloped\u00a0JMS\u00a0components to send messages from one application to other application internally using Active MQ.\nUsed Active MQ to communicate with controller and used service layer to implement the business logic.\nImplemented Batch jobs using Spring Batch created various item readers, item writers and item processors.\nInvolved in support for end to operations support for OSS/BSS (Business Support System) identify gaps, and propose solutions and manage issue resolution.\nValidations are done using SoapUI and Ready API testing tool framework in different environments. \nDeployed and tested the application on Web Sphere Application Server.\u00a0\nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nUsed UNIX shell scripts to search/modify files.\nSetup the Continuous Integration (CI) and Continuous Development(CD) process for the application using the\u00a0Jenkins.\nUsed Jenkins for continuous integration with Maven and GitHub.\nWorked on Log4J to validate functionalities and JUnit for unit testing\nImplemented configured and customized JIRA issue tracking software with agile plug-in across all company functions.\nUsed GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts\nUsed Eclipse IDE tool for application development.\nEnvironment: Java 1.7 and 1.8, J2EE, HTML5, CSS3, Bootstrap, jQuery, Angular 2, JavaScript, Node JS, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring Data, Thymeleaf,  Hibernate, Active MQ, RESTful, SOAP, Micro Service Architecture, AWS, EC2, Docker, Mongo DB, Oracle DB, CI/CD, Maven, Eclipse, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log4j and GIT.\nClient: Biogen Idec\t\t\t                                                                                                  Dec\u201914 - July\u201916\nLocation: Cambridge, MA\nRole: Java Full Stack Developer\nDescription: Biogen Idec Inc. is a global biotechnology company based in Cambridge, Massachusetts, specializing in discovering, developing, and delivering therapies for the treatment of neurodegenerative, hematologic and autoimmune diseases to patients worldwide. Zinbryta (daclizumab) online portal for pharmacies and prescribers to distribute the drug for the treatment of adults with relapsing forms of Multiple Sclerosis (MS).\nResponsibilities:\nInvolved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications, Development and Customization of the Application.\nDesigned front-end presentation logic using JSP, HTML5, CSS3 and Strut tags.\u00a0\nUsed JavaScript, jQuery, AngularJS, and AJAX technologies for front end user input validations and Restful web service calls.\u00a0\nUsed jQuery for front end validations. \nCreated a Single Page Application (SPA) using AngularJS as framework, to bind data with specific views and to synchronize data with server.\u00a0\nSystem builds using Spring Model View Controller (MVC) architecture.\nImplemented pre-authentication framework (Spring Security) for authentication and authorization.\u00a0\nUsed Spring framework including Spring core /IOC, Spring Web, Spring Security, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions.\nUsed a\u00a0Micro\u00a0service\u00a0architecture, with Spring Boot-based\u00a0services\u00a0interacting through a combination of REST and MQ to deploy Identity\u00a0micro\u00a0services\u00a0and Micro Components\nUsed Hibernate, ORM solution, technique of mapping data representation from MVC model to Oracle Relational data model with an SQL-based schema.\n Handed\u00a0Java\u00a0Multi-Threading\u00a0part in back-end component, one thread will be running for each user.\u00a0 \nWritten SQL Queries and stored procedures to interact with Oracle DB.\nRESTful web services using Jersey for JAX-RS implementation.\nDesigned, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the Amazon cloud formation.\nDeployed and Monitored Micro Services Using\u00a0Pivotal\u00a0Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry\u00a0\nConfigured Data Sources for the Oracle database system using IBM WebSphere. \nDeveloped JUnit test cases for elements, web beans, handlers and view helper classes.\nFocused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality. \nUsed SVN for version control tool and Spring Tool Suite (STS) for IDE.\nUsed Tortoise SVN to maintain the version of files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nImplementation of Restful services in\u00a0Apache\u00a0camel\u00a0using rest component, event notifier, JSON.\nConfigured and customized logs using Log4J.\nActively participated in the daily SCRUM meetings to produce quality deliverables.\nPerformed the technical design reviews and code reviews. \nCoordinated with Business Analyst, Architecture and QA team to ensure the quality and success for each iteration tasks.\nDesign, develop and test of\u00a0SOA\u00a0services using\u00a0SOA\u00a0/ Web Service / Oracle Fusion Middleware\nEnvironment: Java, J2EE, JavaScript, XML, Tortoise SVN, Spring MVC, JDBC, Maven, Apache Camel, JMS, JSP, HTML, AngularJS, AJAX, AWS, Spring, Spring Framework, Spring Boot, Spring Security, Hibernate, SOA, Soap, Restful, WSDL, JIRA, CSS, Log4J, JUnit, Linux, STS, Oracle, Agile Methodology.\nClient: John Deere Financials\t\t\t\t                                                               Oct\u201913 - Dec\u201914\nLocation: Des Moines, IOWA\nRole: Java Developer\nDescription: Customer Self Service application is used by all John Deere Financial customers where they can pay the loan and view the loan details. It will process direct payments for Installment, Lease and Revolving account customers. CSS has more than 450000 accounts. This Multi-language based application and handle English and French languages.\nResponsibilities:\nDeveloped applications according to a structured\u00a0agile\u00a0project management methodology\nUsed the light weight container of the Spring Framework to provide architectural flexibility for Inversion of controller (IOC)\nInvolved in developing User Interface (UI) with HTML5, CSS3, JavaScript, DOJO, jQuery, JSON and JSF.\nUsed JSF tags and Content Server tags for writing java, JSF code and rendering the assets\nUsed Spring Framework for Dependency Injection\nDeveloped the application framework using MVC architecture using JSF, spring and hibernate\nWorked in development of data abstraction layer using Hibernate ORM framework with spring support.\nDeveloped an XML based editor interface that allows users to easily enter data for the attribute.\nWorked in the development of Servlets, JSP'S, Spring Beans and POJOs\nDeveloped Web services using Apache Axis SOAP engine that would be exposed to external applications to retrieve data from e-Client servicing platform\nWorked in development of web services for business operations using SOAP, WSDL, JAX-WS, JDOM, XML, XSL and Apache CXF\nWorked in Data extractor development to retrieve report data from a centralized database using RPM SOAP web services\nConsumed Web Services as a gateway for the payment through the third-party\nExtremely used plain JavaScript and jQuery, JavaScript Library to do the client-side validations\nUsed Maven as build automation tool for deploying the project on Apache Tomcat Server.\nDeveloped MySQL stored procedures and triggers using SQL in order to calculate and update the tables to implement business logic\nWorked in Writing and executing the Unit Test cases using JUnit to test specific functionality in the code\nUsed JMS to establish message communication\nAdded\u00a0AJAX\u00a0calls using\u00a0jQuery\nUsed Log4J to capture the log that includes runtime exceptions, monitored error logs and fixed the problems\nDeveloped and used Maven for compiling and building the applications.\nEnvironment: Java, JSP, XML, HTML, JavaScript, jQuery, CSS3, Servlets, Spring, Hibernate, SOAP Web Services, MySQL, SQL, JAXP, POJO, AJAX, Apache Tomcat Server, JSF, DOJO, JSON, AXIS, MAVEN, JUNIT, JMS, Log4j.\nClient: The E-Vault company\t\t\t\t                                                               Jan \u201912 - July \u201813\nLocation: Salt Lake City, Utah\nRole: Java Developer\n      Description: The E-Vault company (a subsidiary of Seagate)\u00a0Sales representative get Sales\u00a0Order Leads\u00a0and they use the Salesforce application to enter the information into that system.\u00a0They also Use\u00a0a NetSuite\u00a0Order\u00a0Processing and Accounting system to process the\u00a0orders, generate invoices, make entries in AP, AC, GL, etc. and work\u00a0order, etc. They are transferring the Sales\u00a0order\u00a0leads manually enter the NetSuite application.\u00a0\u00a0 The team wants to capture the different types of Salesforce entered\u00a0Order\u00a0leads into\u00a0orders into the NetSuite\u00a0system.\u00a0\u00a0 The incoming data will be in JSON format that data will get new properties and the new JSON object will be the SQL database using REST based POST\u00a0http action methods.\nResponsibilities: \nDesigned use case diagrams, data flow diagrams, component diagram, class diagram, and sequence diagram for the given requirement. Also involved in the review meetings of the design architecture for the new requirement and enhancement, given review comments for the designs.\nImplemented GUI using HTML, JSP, CSS, TILES, AJAX, JSTL, Struts TagLibs and Portal Pages.\nUsed AJAX to dynamically load a portion of the page when it was not needed for reloading the entire page.\nUsing RIDC Interface get content details and Create Content through application.\nDeveloped custom Skeleton, custom Skin and custom Layouts.\nImplemented custom LAF files applied to portal.\nDesign & Development of page flows, Web logic Workshop.\nDeveloped several JSP pages and JSR 168 for displaying and processing Information.\nImplemented customization by using Dynamic Visitor Tools (DVT).\nUsed Java-J2EE patterns like Model View Controller, Data Transfer Objects, Singleton, and factory patterns,\nDeveloped and implemented Content Publish using Site Studio, Content Publisher.\nUsing RIDC Interface get content details and Create Content through application.\nImplemented Spring IOC Setter Method Injection and writing Spring Configuration XML file that contains declarations and another dependent object declaration.\nI have worked in DAO layer of the application, written java code to access hibernate session factory using spring hibernate template, Hibernate Search Quires and written search, persistence, deletion for the persistence objects.\nDeveloped Web Services client and Service used SOAP Protocol for sending request and get response. \nCreated JUnit test cases for unit testing application.\nImplemented application logging feature using log4j.\nEnvironment: Java/J2EE, JSP, JSTL, Ajax, Spring, Struts, Ajax, Hibernate, JNDI, Web logic workshop, XML, XSLT, Web Services, UDDI, WSDL, Log4j, Oracle, Oracle Web logic Server, UCM, SVN, LDAP, Windows XP, UNIX, UML.\nClient: Techno soft Solutions\t\t                                                                                              Nov\u201910 - Dec \u201811\nLocation: New york\nRole: Java Developer\t\t\t\t\t \nDescription: This project was designed to build a Common Access Platform for customers and insurance agents using Internet to interact with the system from any part and allow the customers to buy insurance online. Also used by the HR department to manage the vast information generated due to massive business operations. Main objective is to help in tracking HR related issues, optimize and increase the productivity.\nResponsibilities:\nDeveloped the application based on MVC architecture.\nWorked with Struts\u00a0as a unified MVC framework and developed Tag Libraries.\nUsed Struts\u00a0framework in UI designing and validations\u00a0\nCaptured all the functional and technical requirements of the Supply Chain Management System.\nWas involved in the preparation of the software requirements and design document (SRS & SDS)\nAdapted Java Design Patterns DAO, Value Objects and Session Facade to develop business components. \nDeveloped class diagrams and Sequence diagrams.\nDefined the detailed application and database design.\nDevelopment of GUI for HTML and JSP Versions. Java Servlets were used as the common gateway interface between the client and server. \nJava Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller.\nDeveloped the application using Struts Framework with respect to Model View Controller architecture.\nInvolved in collecting requirements from Business Users and Data Modeling and designing and developing Tools using: J2EE, Java, Servlets, EJB, and JSP. \nFront end validations are written using JavaScript.\nUsed SQL Loader to loading data in text file into Oracle\u00a0table, and updated relative information in Oracle.\nPerformed Unit Testing using JUnit.\nProvided a User Manual and User Training on the new system to ease them into the new system.\nEnvironment:  JDK, JEE, HTML, CSS, JDBC, struts, JavaScript, JSP, EJB, Java Scripting, CSS, CVS, WebSphere, oracle, Linux.\nClient: SLK Software\t\t\t\t\t\t\t\t\t      July\u201909 \u2013 Nov\u201910\nLocation:  Australia\nRole: Java Developer\nDescription: SLK Software Services is an offshore development company providing end-to-end solutions using its proven methodologies based on SEI CMM Level 4 Guidelines. SLK Billing Care is the Web-based front office application used by customer service representatives to create and maintain customer accounts, manage their services, and handle customer issues. SLK Billing care is designed as the front-end application to customer related activities supported by SLK charging and other billing products.\nResponsibilities:\nDeveloped Action Classes, which acts as the controller in Struts\u00a0framework.\nDeveloped web application using Struts 2.X, JSP, Servlets, Java beans that uses MVC design pattern\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP\nWrote JavaScript for client-side validation.\nUsed Eclipse as IDE tool for creating Servlets, JSP, and XML.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nUsed SQL queries extensively to talk to DB2 database\nMonitored the logs using Log4J and fixed the problem\nThe application was deployed on the Tomcat.\nInvolved in build and deploying the application using ANT  \nUsed CVS as version control system \nWorked on bug fixing and Production Support\nEnvironment: Java, JDBC, Struts, JavaScript, Html, CSS, JSP, Servlets, Tomcat, DB2, Eclipse IDE, CVS, ANT, Log4J. ",
  "size_bytes": 55194,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:55.517371",
  "clean_text": "candidate objective look contribute design analysis development management documentation interpersonal skill organization grow expand leading edge industry prove technology fundamental aim gain dynamic challenging role area software engineering big project offer good opportunity development ability skill knowledge establish substantial firm long term career growth possibility strongly believe highly contribute company development individual ability organize creative self motivate multi task work individually member team professional summary have year extensive experience phase software development life cycle sdlc include analysis design implementation integration testing maintenance application java technology verse complete software development life cycle sdlc methodology like agile methodology waterfall test driven development experience design pattern like singleton factory pattern prototype business delegate session facade service locator observer decorator controller dao pattern expertise develop ui jsp java script bootstrap jquery ajax angular js hand experience different spring framework module like spring core spring aop spring mvc s spring security spring data spring boot experience java feature lambda expression streams parallel operations experience develop application service oriented architecture soa micro services architecture test driven development hand experience aws cloud service like ebs auto scaling vpc cloud formation rds amazon elastic load balancing iam cloud watch service aws infrastructure like dynamo db sqs emr focus high availability fault tolerance auto scaling have good experience develop migrate exist application cloud base platform like amazon web services aws pivotal cloud foundry expert core java strong understanding garbage collector collections multithreading event handling exception handling generics develop web base enterprise application java core java servlets jdbc hibernate web services soap rest mvc framework struts spring mvc strong experience develop consume soap restful base web services expertise xml technology like dtd xsd xslt parser like dom sax jaxb experience persistence framework like hibernate jpa mapping java class database hql hibernate query language extensive knowledge develop java persistence api jpa layer mybatis experience implementation jms exchange information reliable channel asynchronous way active mq rabbit mq message queue experience develop xml base web services soap uddi wsdl approach rest base service jax rs jersey spring integration strong experience database design pl sql write table stored procedures functions triggers indexers proficiency write complex query retrieve datum expertise jdbc hibernate connection access database good experience relational database like oracle sql ms sql server ibm sql database like mongo db cassandra dynamo db experience application server like web logic jboss apache tomcat ibm web sphere expertise ide tool like spring tool suite rad eclipse proficient continuous integration continuous deployment tool like jenkins experience junit mockito develop test case determine application functionality have experience unix linux python shell scripting deployment applications server experience work version control tool like git hub cvs experience build automation tool like gradle ant maven build deployment different environment strong interpersonal communication skill self motivate individual showing ability learn use new technology framework considerably time technical skills professional experience client deutsche bank till date location new york role sr java stack developer description deutsche bank span europe asia middle east mainly involve global transaction banking corporate banking securities wealth management loan application project n tier base client server comprehensive solution make possible receive process close loan broker internet bank branch loan system reside robust database engine provide client proven scalability meet need large lender centralized database aggregate loan information line business source origination responsibility involve phase software development life cycle sdlc requirement gathering modeling analysis design development testing follow agile methodology interact client provide feedback feature suggest implement optimal solution tailor application customer need develop application application lifecycle management deliver reliable application utilize java feature like lambda expression collection evaluation compare datum stream api bulk datum operation collection increase performance application parallel operation collection effective sort mechanism change sequential stream flow thread session establishment develop ui javascript bootstrap jquery angular node js involve java code generate xml document turn xslt translate content html present gui design implement application spring boot spring mvc spring ioc spring annotations spring aop spring transactions spring jdbc implement authentication authorization application spring security implement spring ioc code loosely couple dependency injection spring aop log purpose thymeleaf server template engine spring mvc spring datum repository design develop micro services business component restful service endpoint spring boot implemented micro service architecture spring boot base restful service consume soap base web services implement restful soap base web service jax rs jax ws respectively implement restful web services retrieve datum client micro services architecture experience create restful web service jersey spring framework jax rs implement multithreading concurrency exception handling collection necessary prepare call hibernate spring jdbc interact database experience hibernate include integrate legacy database write custom crud statement integrate store procedure function perform polymorphic association experience aws service smoothly manage application cloud create modify instance experience work database setup maintenance aws currently work docker container implementation enterprise build system worked docker container management volume container base db service docker arti factory configuration setup ingested data olms repository come upstream source information experience write complex pl sql query join stored procedures functions triggers cursors index oracle db work mongo db write code find update save insert datum mongo db perform datum extraction load json datum server content mongo db configured jms server setup db connection pool setup deploy returned item web sphere server develop jms component send message application application internally active mq active mq communicate controller service layer implement business logic implement batch job spring batch create item reader item writer item processor involve support end operation support oss bss business support system identify gap propose solution manage issue resolution validation soapui ready api testing tool framework different environment deploy test application web sphere application server develop test case unit testing integration layer mockito framework unix shell script search modify file setup continuous integration ci continuous process application jenkins jenkins continuous integration maven github work validate functionality junit unit testing implement configure customize jira issue track software agile plug company function github maintain version file take responsibility code merge branch trunk create new branch new feature implementation start eclipse ide tool application development environment java bootstrap jquery angular javascript node js spring ioc spring mvc spring security spring boot spring batch spring data thymeleaf hibernate active mq restful soap micro service architecture aws docker mongo db oracle db ci cd maven eclipse web sphere application server mockito jms unix jenkins jira git client biogen idec location cambridge ma role java stack developer description biogen idec global biotechnology company base cambridge massachusetts specialize discover develop deliver therapy treatment neurodegenerative hematologic autoimmune disease patient worldwide zinbryta daclizumab online portal pharmacy prescriber distribute drug treatment adult relapse form multiple sclerosis ms responsibility involve phase sdlc include requirements collection design analysis customer specifications development customization application design end presentation logic jsp strut tag javascript jquery angularjs ajax technology end user input validation restful web service call jquery end validation create single page application spa angularjs framework bind datum specific view synchronize datum server system build spring model view controller mvc architecture implement pre authentication framework spring security authentication authorization spring framework include spring core spring web spring security spring ioc spring annotations spring aop spring transactions micro service architecture spring boot base service interact combination rest mq deploy identity micro service micro components hibernate orm solution technique mapping datum representation mvc model oracle relational data model sql base schema hand java multi threading end component thread run user write sql queries store procedure interact oracle db restful web service jersey jax rs implementation design configure deploy amazon web services aws multitude application utilize amazon cloud formation deploy monitored micro services pivotal cloud foundry managed domains routes cloud foundry configured data sources oracle database system ibm websphere develop junit test case element web bean handler view helper class focus test driven development create detailed junit test single piece functionality actually write functionality svn version control tool spring tool suite sts ide tortoise svn maintain version file take responsibility code merge branch trunk create new branch new feature implementation start implementation restful service apache camel rest component event notifier json configured customize log actively participate daily scrum meeting produce quality deliverable performed technical design review code review coordinate business analyst architecture qa team ensure quality success iteration task design develop test soa service soa web service oracle fusion middleware environment java javascript xml tortoise svn spring mvc jdbc maven apache camel jms jsp html angularjs ajax aws spring spring framework spring boot spring security hibernate soa soap restful wsdl jira css junit linux sts oracle agile methodology client john deere financials location des moines iowa role java developer description customer self service application john deere financial customer pay loan view loan detail process direct payment installment lease revolving account customer css account multi language base application handle english french language responsibility develop application accord structured agile project management methodology light weight container spring framework provide architectural flexibility inversion controller ioc involve develop user interface ui javascript dojo jquery json jsf jsf tag content server tag write java jsf code render asset spring framework dependency injection develop application framework mvc architecture jsf spring hibernate worked development datum abstraction layer hibernate orm framework spring support develop xml base editor interface allow user easily enter datum attribute work development servlets jsp spring beans pojo develop web service apache axis soap engine expose external application retrieve datum e client servicing platform worked development web service business operation soap wsdl jax ws jdom xml xsl apache cxf worked data extractor development retrieve report datum centralized database rpm soap web service consumed web services gateway payment party extremely plain javascript jquery javascript library client validation maven build automation tool deploy project apache tomcat server develop mysql store procedure trigger sql order calculate update table implement business logic work writing execute unit test case junit test specific functionality code jms establish message communication add ajax call jquery capture log include runtime exception monitor error log fix problem develop maven compile build application environment java jsp xml html javascript jquery servlets spring hibernate soap web services mysql sql jaxp pojo ajax apache tomcat server jsf dojo json axis maven junit jms client e vault company jan july location salt lake city utah role java developer description e vault company subsidiary seagate sale representative sale order lead use salesforce application enter information system use netsuite order processing accounting system process order generate invoice entry ap ac gl etc work order etc transfer sale order lead manually enter netsuite application team want capture different type salesforce enter order lead order netsuite system incoming datum json format datum new property new json object sql database rest base post http action method responsibility design use case diagram datum flow diagram component diagram class diagram sequence diagram give requirement involve review meeting design architecture new requirement enhancement give review comment design implement gui html jsp css tiles ajax jstl struts taglibs portal pages ajax dynamically load portion page need reload entire page ridc interface content detail create content application develop custom skeleton custom skin custom layout implement custom laf file apply portal design development page flow web logic workshop develop jsp page jsr display process information implement customization dynamic visitor tools dvt java pattern like model view controller data transfer objects singleton factory pattern develop implement content publish site studio content publisher ridc interface content detail create content application implement spring ioc setter method injection write spring configuration xml file contain declaration dependent object declaration work dao layer application write java code access hibernate session factory spring hibernate template hibernate search quires write search persistence deletion persistence object develop web services client service soap protocol send request response create junit test case unit testing application implement application log feature environment java jsp jstl ajax spring struts ajax hibernate jndi web logic workshop xml xslt web services uddi wsdl oracle oracle web logic server ucm svn ldap windows xp unix uml client techno soft solutions dec location new york role java developer description project design build common access platform customer insurance agent internet interact system allow customer buy insurance online hr department manage vast information generate massive business operation main objective help track hr relate issue optimize increase productivity responsibility develop application base mvc architecture work strut unified mvc framework develop tag libraries strut framework ui designing validation capture functional technical requirement supply chain management system involve preparation software requirement design document srs sds adapted java design patterns dao value objects session facade develop business component develop class diagram sequence diagram define detailed application database design development gui html jsp versions java servlets common gateway interface client server java beans handle business logic model servlets control flow application controller develop application struts framework respect model view controller architecture involve collect requirement business users data modeling design develop tools java servlets ejb jsp end validation write javascript sql loader load datum text file oracle table update relative information oracle performed unit testing junit provide user manual user training new system ease new system environment jdk jee html css jdbc strut javascript jsp ejb java scripting css cvs websphere oracle linux client slk software location australia role java developer description slk software services offshore development company provide end end solution prove methodology base sei cmm level guidelines slk billing care web base office application customer service representative create maintain customer account manage service handle customer issue slk billing care design end application customer relate activity support slk charging billing product responsibility develop action classes act controller struts framework develop web application struts jsp servlets java bean use mvc design pattern create user friendly gui interface web page html css jsp wrote javascript client validation eclipse ide tool create servlets jsp xml write sql jdbc prepare statement retrieve datum database sql query extensively talk database monitor log fix problem application deploy tomcat involve build deploy application ant cvs version control system work bug fixing production support environment java jdbc struts javascript html css jsp servlets tomcat eclipse ide cvs ant"
}