{
  "filename": "Candidate167.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate167.docx",
  "text": "Candidate167\nEmail: candidate1670828@gmail.com\nContact: +1 (203) 200-7335\nProfessional Summary:\nOver 8+ years of progressive experience in software development includes Analysis, Design and\nDevelopment of Web-based applications.\nExperience in all aspects of Software Development Life Cycle (SDLC) including requirements analysis, code development, code integration, testing and deployment using Object Oriented Analysis and Design with Java/J2EE.\nVery good experience in following Agile, TDD and Waterfall methodologies for application development.\nWorked in developing User Interface web applications using HTML, CSS3, JavaScript, Typescript,\nAngular Js, Angular2, Node Js , React Js , Backbone Js , JQuery, AJAX , Bootstrap and JSTL.\nExpertise in Core Java (OOP Concepts) concepts including Collections, Exception Handling, Multi-Threading, Generics and Java I/O etc.\nExpertise in using Java8\u00a0features in developing the code like Lambda expressions, Method references, creating resource classes, fetching documents from database.\nStrong design and development experience in J2EE technologies including\u00a0JSP, JDBC, JNDI, Servlets and JMS.\nExperienced using Java/J2EE Design patterns like Singleton, Factory, Abstract Factory, Command, Business Delegate, DAO, Session Facade, and MVC.\nExperience in developing with various open source frameworks such as Java Server Faces (JSF),\nSpring (Core, IOC, AOP, Batch, Security, Boot) Framework, Struts Framework, Tiles Frameworks and ORM Tools like Hibernate and IBatis.\nExperience in ORM Library with Hibernate for mapping Object-Oriented domain model with\nRelational Database.\nExperience in using Web Services like SOAP protocol in JAX-WS and RESTFUL web services.\nExpertise in producing and consuming SOAP based & Restful web services using WSDL, SOAP, AXIS, JAX-WS, REST-Jersey, UDDI, and WS-Security.\nGood Knowledge of Cloud Computing software\u2019s (IaaS) of that of Amazon Web Services (EC2, S3, RDS and EBS).\nWorked with Web Sphere Application Server, Oracle WebLogic application server, JBoss and Apache Tomcat Application Server.\nWorked on SQL/No SQL databases systems like Oracle, My SQL, DB2 and MongoDB, Cassandra.\nProficient in writing and handling SQL Queries, PL/SQL, Stored Procedures and Triggers.\nExperience with Selenium web Driver, Protractor, TestNG, MOCKITO, JUnit, Cucumber, Log4j in developing test cases and determining application functionality.\nSubversion SVN, CVS, GIT, Tortoise and Visual Source Safe (VSS) as versioning software tools.\nHands on experience in building tools like ANT, Maven and Gradle.\nComplete understanding of the DevOps process with continuous integration using Jenkins, JIRA, Bamboo and CHEF.\nInvolved in designing fully distributed system with the use of Restful API and Micro Services.\nExperience in developing applications on Windows, UNIX and Linux platforms.\nHighly experience with Java complaint IDE\u2019s like STS, Eclipse, RAD, JBuilder, IntelliJ and NetBeans.\nHaving Experience on UNIX commands and Deployment of Applications in Server.\nDomain knowledge and business expertise in Banking, Insurance, Healthcare.\nTechnical Skills:\nProfessional Experience:\nClient:\t  PPD - Morrisville, NC\t\t\t\t\t\t\t           Jan 2016 \u2013 till date\nRole: Full Stack Java Developer\nDescription: \tPPD (Pharmaceutical Product Development) is a pharmaceutical and consumer packaged goods manufacturer. For this a website is developed for commercial services and which provides the access to various forms of data sources and ingest them into the database. The functionalities involved in are\nProduct Catalog, Order Management, Account Payable and Electronic Contracting.\nResponsibilities:\nActively involved in various phases of Software Development Life Cycle (SDLC) such as Design, Analysis, Development and Testing.\nExtensively worked with business analysts and product managers to help writing user stories in sprint planning.\nActively participated in the daily SCRUM (Agile) meetings with our team to produce quality deliverables within time.\nDeveloped the UML Use Cases, Activity, Sequence and Class diagrams using Rational Rose.\nImplemented front-end layout and behavior with HTML, JavaScript, JSTL, JSF, Angular2.0, BackboneJS, CSS, and NodeJS.\nImplemented generating the verification hash code using crypto package on\u00a0Node.JS\u00a0and Added user validations and user permissions by using the\u00a0Node.JS\nDeveloped complex Angular2.0 UI nested components for reuse and rapid development Angular2.0 for each SPA and developed the administrative UI using\u00a0Angular\u00a02\u00a0and\u00a0Node.js.\nPerformed form validations using reactive forms from Angular2.0 framework.\nUpgraded existing UI with HTML 5, CSS3, JQuery and Bootstrap with AngularJS 2.0 interaction.\nExtensively used Core Java concepts such as OOP Concepts, Collections Framework, Exception Handling, I/O System, Multi-Threading, JDBC.\nWrote compact and clean code using object oriented design approach and Java 8 features such as Function, Supplier and Lambda.\nDeveloped and implemented the MVC Architectural Pattern using Spring 4.X Framework including JSP, Servlets, Session Bean and Action classes.\nUsed Hibernate, object /relational mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle11g Relational data model with an SQL-based schema.\nDesigned and developed the End Points (Controllers), Business Layer, DAO Layer using Hibernate/JDBC.\nDesigned and developed business components using Spring Boot, Spring Dependency Injection (Core), Spring AOP, Spring Annotations and handled the security using Spring Security.\nDeveloped Business components and integrated those using Spring features such as Dependency Injection for injecting beans and Auto Wiring various components such as DAO layers and service proxy layers.\nRemoved all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot.\nDeveloping, testing, constructing\u00a0Restful\u00a0API web Services using Apache CXF implementation.\nImplemented SOA architecture with web services using\u00a0Restful\u00a0and XML for sending and receiving data from different applications.\nDesigned and developed functionality to get JSON document from Mongo DB document store and send it to client using RESTful web service.\nExperienced working with database setup and maintenance on AWS EC2.\nConfigured and managed public/private cloud infrastructures using Amazon Web Services (AWS) like VPC, EC2, S3, Cloud Front, ELB and Elastic Beanstalk.\nCreated and configured the continuous delivery pipelines for deploying Micro Services and lambda functions using Jenkins CI server.\nInvolved in development and deployment of one such Micro Services which is responsible for calculating the Risk associated with client.\nWorked on SOAP based web service to integrate CDD application with Risk Calculating utility\u00a0Micro Services.\nDeploying and maintaining production environment using AWS EC2 instances and ECS with Docker.\nCreated the\u00a0Docker containers and\u00a0Docker swarm consoles for managing the application life cycle.\nImplemented the function to send and receive\u00a0AMQP\u00a0messages on\u00a0RabbitMQ\u00a0synchronously and asynchronously, and send\u00a0JMS\u00a0message to\u00a0Apache ActiveMQ\u00a0on the edge device.\nUsed Hibernate in the persistence layer to persist data into both databases Oracle and Mongo DB.\nInvolved in creating JUNIT test cases and ran the TEST SUITE.\u00a0Ran check style, PMD defects & Find bugs and fixed them.\nUsed JIRA to assign, track, report and audit the issues in the application.\nUsed Eclipse 8.x to develop the Web Application and deployed on WebSphere application server.\nPerformed deployment of applications on IBM WebSphere Application Server.\nConfigured and customized logs using Log4J.\nInvolved in installing and configuring Maven for application builds, deployment and used Jenkins for continuous integration of builds.\nInvolved in peer level design & code reviews.\u00a0Used GIT for version and source control.\nEnvironment: Core Java 1.7/1.8, Java Util Packages, Java Script, Angular2.0, HTML, CSS, JQuery, AJAX, JSON, JSP, Servlets, JDBC, NodeJS, Hibernate 4.x, Spring 4.X, REST Web Services, AWS, Mongo DB, XML, Oracle 11g, UML, WebSphere, Junit, Jira, Log4j, Maven, GIT , Micro services, Jenkins, Eclipse8.x.\nClient:\t  PNC Bank - Pittsburgh, PA\t\t    \t\t\t       \t         Oct 2013 - Dec 2015\nRole: Full Stack Java Developer\nDescription:  PNC Bank is one of the secured financial institutions that serves huge domain of customers. The current application is a part of online banking that allows a customer to pay bills securely as well as enroll in monthly automatic recurring bill payment. The functionalities involved in e-bill payment are Add a Payee, Make a Payment, Set up Automatic Payments, Receive Bills Electronically, Request E-mail Notifications and Review Payments .The application also supports intra and interbank transfer of funds for a given customer.\nResponsibilities:\nWorked on SDLC Requirements gathering, Analysis, Design, Development and Testing of application using AGILE methodology (SCRUM).\nHandling client change requests and enhancements on an Agile based development platform.\nCreated detail design documents with UML diagrams Use Case Diagrams, Activity Flow diagrams, Class Diagrams and Object diagrams in design phase.\nDeveloped Web Application using HTML 5, JavaScript, AngularJS, JQuery, JSF, JSON, AJAX, Spring Boot, Spring MVC, Hibernate and Spring AOP.\nDeveloped multi-threading project, considered concurrency situation and security aspect, avoid of SQL injection. Using synchronized method and synchronized variable.\nEnhanced user experience by designing web features using Framework like AngularJS and NodeJS.\nUsed\u00a0NodeJS\u00a0as a sever side programming language and Implemented production-grade\u00a0Node.JS.\nUsed AJAX to request JSON data from the backend and showed the data in the screen with the format of tables and charts.\nImplemented major concepts of Core Java, J2EE, Servlets3.0, JSP, JDBC, MVC, Spring Framework, Hibernate5.0.x and XML. Extensively used Core Java API, Spring API in developing the business logic.\nWorked on Servlets, JSP, JDBC and JavaScript under MVC Framework and implemented OOAD concept in the applications.\nWorked on Spring IOC, Spring MVC Framework, Spring Messaging Framework and Spring AOP to develop application service components.\nImplemented navigation layer using Spring 3.1 MVC components like dispatch servlets, controllers, view resolver components.\nPrimarily focused on the spring components such as Spring MVC, Dispatcher Servlets, Controllers, Model and View Objects, View Resolver.\nImplemented Spring 3.1 to support user-level, application-directed control flows.\nUsed Spring Boot which is radically faster in building cloud Micro Services.\nDeveloped the cloud based application using Spring\u00a0Cloud\u00a0and\u00a0Pivotal cloud foundry.\nImplemented the caching mechanism in\u00a0Hibernate\u00a0to load data from Oracle10g database and application level persistence using\u00a0Hibernate\u00a0and\u00a0Spring.\nImplemented Persistence layer using\u00a0Hibernate\u00a0to interact with the Mongo DB database, Used\u00a0Hibernate\u00a0Framework for object relational mapping and persistence.\nImported data from various resources to the\u00a0Cassandra\u00a0cluster using\u00a0Java\u00a0APIs.\nDeveloped several REST web services supporting both XML and JSON to perform tasks such as remote thermostat and demand-response management. Restful web services leveraged by both web and mobile applications.\nIntegrated process into build system which auto-generates Restful API documentation from source code improving API documentation quality and availability while reducing maintenance costs.\nUsed AWS S3 to store data and to retrieve the stored date very quickly and used Elastic Search for searching the document. Used AWS SNS to send messages to multiple users and delivered in an algorithmic way using AWS SQS.\nMigrated Spring based application to Cloud based Micro service API.\nInvolved in WebLogic administration like setting up Data Sources, deploying applications.\nConfigured and Deployed the Web Application Achieve (WAR) in WebLogic Application Server.\nProviding Version Control with Subversion and automated Build& Deployment with Jenkins.\nImplemented Log4J for Logging Errors, debugging and tracking using logger\u2019s components.\nInvolved in different types of testing like Unit, System, Integration testing etc. is carried out during the testing phase.\nDeveloped the application using Maven and build & deployed the services.\nUsed GIT version control for source code.\nActively used the defect tracking tool JIRA to create and track the defects during QA phase of the Project.\nEnvironment:\u00a0Java, J2EE, HTML5, CSS3,\u00a0Java\u00a0Script, JQuery, AngularJS, NodeJS, Spring 3.1, Hibernate 4.x, MVC, Oracle10g, Web Services, Micro Services, Mongo DB, Maven, WebLogic, RAD, JUnit, JMS, Log4j, REST, AWS, Jenkins, JIRA, SVN, XML.\nClient: Jackson National Life Insurance - Lansing, MI\t\t\t\t        Dec 2011 \u2013 Sep 2013\nRole: Java/J2EE Developer\t\t\nDescription:  Jackson National Life Insurance Company is well known for providing insurance and financial services in the United States. This Web Application involves the design and development of a Web based internet application to provide online insurance services. The web application provides functionalities such as Internet Insurance Quote for Customers and Agents. The customer can access complete account information, policy information, and receive instant auto insurance quote and report a claim. Developed from scratch therefore involved in Design and Development of the web application until deployment and production support.\nResponsibilities:\nInvolved in all phases of System Development Life Cycle (SDLC) including Requirement gathering, Analysis, Design, Implementation, Deployment and Support.\nFollowed Agile methodology and participated in daily SCRUM meetings.\nImplemented Agile (SCRUM) methodology and Test Driven Development (TTD) for the software development process and to produce high quality application.\nDeveloped and enhanced the application using\u00a0Java and J2EE (Servlets, JSP, JDBC, JNDI, EJB), Web Services (SOAP and RESTful), HTML, JavaScript, Angular JS, React Js, AJAX, JSON, CSS, XML, XSD, Maven, Log4J and Oracle 8i.\nInvolved in working with J2EE Design Patterns (Singleton, Session, Facade and DAO).\nInvolved in creating Use Cases, Class Diagrams and Sequence Diagrams using UML.\nWorked on Hibernate ORM. Created Hibernate XML files and\u00a0Java\u00a0class files to map the object relation mappings.\nUsed Hibernate Query Language (HQL) and Custom Queries to query data from Oracle database in DAO.\nDesigned and developed web-based software using Spring MVC Framework and Spring Batch.\nInvolved in creating and extracting data from database using SQL queries, PL/SQL Stored procedures, triggers and packages on Oracle database and performed CRUD operations using JPA query language.\nGood experience in tools such as TOAD and SQL\u00a0Developer\u00a0for database development and interaction.\nDeveloped and maintained the Application Context files for the service layer using Spring 2.0 Framework.\nUsed SOAP Web Services for secure extraction of client related data from database using Apache CXF.\nPerformed Aggregation, Parallel processing, developed Camel Orchestration layers to integrate different\u00a0components of the application using Apache Camel.\nUsed RESTful in conjunction with Ajax calls using JAX-RS and Jersey.\nMulti-Threading and Caching were used to improve the performance and user experience.\nMade single page module using Angular JS Framework. Implemented the business logic using JSP, JSTL,\u00a0Java\u00a0Beans and service classes.\nInvolved in the development of presentation layer, GUI using CSS3 and HTML5.\nInvolved in configuring JMS and JNDI in JBOSS application server.\nInvolved in Performance tuning of the application and documentation of trouble-shooting.\nUsed ANT to build, run and create JARs and WAR files.\nResponsible for deploying the application in to the JBOSS Application Server.\nConfigured development environment JBOSS application server for developer\u2019s integration testing.\nUsed CVS for version control.\nApplication was logged using Log4J, and exceptions were logged into the database using JDBC.\nUsed Junit for testing the entire application, rectified performance bottlenecks and eliminated critical bugs.\nCreated numerous test cases using JUnit framework and JUnit for testing modules.\nUsed Hudson as a continuous integration tool.\nEnvironment:\u00a0Java\u00a01.7, J2EE, Spring 2.0, HTML, Hibernate 3.x, SQL, PL/SQL, JSP, Angular.JS, JSTL, JSON, AJAX, JQuery, Oracle 8i, ANT, SVN, XML , JAXB, Log4J, JUnit, JBOSS, SOAP, RESTful Web Services, WSDL 2.0,Jersey, JAX-RS, JAX-WS, Apache CXF, Apache Camel, CVS, Hudson.\nClient: Cybage Software Pvt. LTD\t\t\t\t        Jan 2010 \u2013 Oct 2011\nRole: Java Developer\nDescription: Electronic Medical Record (EMR) is a web-based java solution that capture data from different fields, different forms to compile individual Health data that can be shared across different health care settings and different clinicians. This individual data can be compiled to generate different types of reports that can help the organizations to grow their business rapidly.\u00a0\n\nResponsibilities:\nParticipated in the requirement analysis and design of the application using UML/Rational Rose and Agile methodology.\nInvolved in developed the application using Core Java, J2EE and JSP's.\nWorked to develop this Web based application entitled EMR in J2EE framework, which uses Hibernate for persistence and Junit for testing.\nUsed JSP to develop the front-end screens of the application.\nDesigned and developed web-based software using Struts 1.3.10 Frame work.\nDesigned and developed several SQL Scripts, Stored Procedures, Packages and Triggers for the MySQL v5.2 Database.\nUsed Indexing techniques in the database procedures to obtain search results.\nInvolved in development of Web Service client to get client details from third party agencies.\nDeveloped nightly batch jobs, which involved interfacing with external third party state agencies.\nTest scripts for performance and accessibility testing of the application are developed.\nResponsible for deploying the application in client UAT environment.\nPrepared installation documents of the software, including Program Installation Guide and Installation Verification Document.\nInvolved in different types of testing like Unit, System, Integration testing etc. is carried out during the testing phase.\nProvided production support to maintain the application.\nEnvironment: Java, J2EE, Struts 1.3.10 Frame work, JSP, Web Service, Hibernate 3.x, MySQL v5.2 CE, My Eclipse, Subversion, PL/SQL, Apache Tomcat, UML, Windows.\nEducation Details:\nBachelor of Technology in Computer Science and Engineering\nReferences:\nAvailable on request.",
  "size_bytes": 61102,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:33.272377",
  "clean_text": "email contact professional summary year progressive experience software development include analysis design development web base application experience aspect software development life cycle sdlc include requirement analysis code development code integration testing deployment object oriented analysis design java good experience follow agile tdd waterfall methodology application development work develop user interface web application html javascript typescript angular js node js react js backbone js jquery ajax bootstrap jstl expertise core java oop concepts concept include collection exception handling multi threading generics java o etc expertise feature develop code like lambda expression method reference create resource class fetch document database strong design development experience technology include jsp jdbc jndi servlets jms experience java design pattern like singleton factory abstract factory command business delegate dao session facade mvc experience develop open source framework java server faces jsf spring core ioc aop batch security boot framework struts framework tiles frameworks orm tools like hibernate ibatis experience orm library hibernate map object orient domain model relational database experience web services like soap protocol jax ws restful web service expertise produce consume soap base restful web service wsdl soap axis jax ws rest jersey uddi ws security good knowledge cloud computing software iaas amazon web services rds ebs work web sphere application server oracle weblogic application server jboss apache tomcat application server work sql sql database system like oracle sql mongodb cassandra proficient writing handle sql queries pl sql stored procedures triggers experience selenium web driver protractor testng mockito junit cucumber develop test case determine application functionality subversion svn cvs git tortoise visual source safe vss versione software tool hand experience building tool like ant maven gradle complete understanding devops process continuous integration jenkins jira bamboo chef involve design fully distribute system use restful api micro services experience develop application windows unix linux platform highly experience java complaint ide like sts eclipse rad jbuilder intellij netbeans have experience unix command deployment applications server domain knowledge business expertise banking insurance healthcare technical skills professional experience client ppd morrisville nc jan till date role stack java developer description ppd pharmaceutical product development pharmaceutical consumer package good manufacturer website develop commercial service provide access form datum source ingest database functionality involve product catalog order management account payable electronic contracting responsibility actively involve phase software development life cycle sdlc design analysis development testing extensively work business analyst product manager help write user story sprint planning actively participate daily scrum agile meeting team produce quality deliverable time develop uml use cases activity sequence class diagram rational rose implement end layout behavior html javascript jstl jsf backbonejs css nodejs implement generate verification hash code crypto package node js added user validation user permission node js develop complex ui nest component reuse rapid development spa develop administrative ui angular performed form validation reactive form framework upgrade exist ui html jquery bootstrap angularjs interaction extensively core java concept oop concepts collections framework exception handling o system multi threading jdbc write compact clean code object orient design approach java feature function supplier lambda develop implement mvc architectural pattern spring framework include jsp servlets session bean action class hibernate object mapping orm solution technique mapping datum representation mvc model g relational data model sql base schema design develop end points controllers business layer dao layer hibernate jdbc design develop business component spring boot spring dependency injection core spring aop spring annotations handle security spring security develop business component integrate spring feature dependency injection inject bean auto wiring component dao layer service proxy layer remove xml base configuration require build mvc application maintain class spring boot develop testing construct restful api web services apache cxf implementation implement soa architecture web service restful xml send receive datum different application design develop functionality json document mongo db document store send client restful web service experience work database setup maintenance aws configure manage public private cloud infrastructure amazon web services aws like vpc cloud elb elastic beanstalk create configure continuous delivery pipeline deploy micro services lambda function jenkins ci server involve development deployment micro services responsible calculate risk associate client work soap base web service integrate cdd application risk calculate utility micro services deploy maintain production environment aws instance ecs docker create docker container docker swarm console manage application life cycle implement function send receive amqp message rabbitmq synchronously asynchronously send jms message apache activemq edge device hibernate persistence layer persist datum database oracle mongo db involve create junit test case run test suite ran check style pmd defect find bug fix jira assign track report audit issue application eclipse develop web application deploy websphere application server performed deployment application ibm websphere application server configure customize log involve instal configure maven application build deployment jenkins continuous integration build involve peer level design code review git version source control environment core java java util packages java script html css jquery ajax json jsp servlets jdbc nodejs hibernate spring rest web services aws mongo db xml oracle g uml websphere junit jira maven git micro service jenkins client pnc bank pittsburgh pa oct dec role stack java developer description pnc bank secure financial institution serve huge domain customer current application online banking allow customer pay bill securely enroll monthly automatic recur bill payment functionality involve e bill payment add payee payment set automatic payment receive bills electronically request e mail notifications review payments application support intra interbank transfer fund give customer responsibility work sdlc requirements gathering analysis design development testing application agile methodology scrum handle client change request enhancement agile base development platform create detail design document uml diagram use case diagrams activity flow diagram class diagrams object diagram design phase develop web application html javascript angularjs jquery jsf json ajax spring boot spring mvc hibernate spring aop developed multi threading project consider concurrency situation security aspect avoid sql injection synchronized method synchronize variable enhance user experience design web feature framework like angularjs nodej nodejs sever programming language implement production grade node js ajax request json datum backend show datum screen format table chart implement major concept core java jsp jdbc mvc spring framework xml extensively core java api spring api develop business logic work servlets jsp jdbc javascript mvc framework implement ooad concept application work spring ioc spring mvc framework spring messaging framework spring aop develop application service component implement navigation layer spring mvc component like dispatch servlet controller view resolver component primarily focus spring component spring mvc dispatcher servlets controllers model view objects view resolver implement spring support user level application direct control flow spring boot radically fast build cloud micro services develop cloud base application spring cloud pivotal cloud foundry implement cache mechanism hibernate load datum g database application level persistence hibernate spring implement persistence layer hibernate interact mongo db database hibernate framework object relational mapping persistence import datum resource cassandra cluster java api develop rest web service support xml json perform task remote thermostat demand response management restful web service leverage web mobile application integrated process build system auto generate restful api documentation source code improve api documentation quality availability reduce maintenance cost aws store datum retrieve store date quickly elastic search search document aws sns send message multiple user deliver algorithmic way aws sqs migrate spring base application cloud base micro service api involve weblogic administration like set data source deploy application configure deploy web application achieve war weblogic application server provide version control subversion automate build deployment jenkins implement logging errors debug track logger component involve different type testing like unit system integration testing etc carry testing phase develop application maven build deploy service git version control source code actively defect tracking tool jira create track defect qa phase project environment java java script jquery angularj nodejs spring hibernate mvc g web services micro services mongo db maven weblogic rad junit jms rest aws jenkins jira svn xml client jackson national life insurance lansing mi dec sep role java developer description jackson national life insurance company know provide insurance financial service united states web application involve design development web base internet application provide online insurance service web application provide functionality internet insurance quote customers agent customer access complete account information policy information receive instant auto insurance quote report claim develop scratch involve design development web application deployment production support responsibility involve phase system development life cycle sdlc include requirement gathering analysis design implementation deployment support follow agile methodology participate daily scrum meeting implement agile scrum methodology test driven development ttd software development process produce high quality application develop enhance application java servlets jsp jdbc jndi ejb web services soap restful html javascript angular js react js ajax json css xml xsd maven oracle involve work design patterns singleton session facade dao involve create use cases class diagrams sequence diagrams uml work hibernate orm create hibernate xml file java class file map object relation mapping hibernate query language hql custom queries query datum oracle database dao design develop web base software spring mvc framework spring batch involve create extract datum database sql query pl sql store procedure trigger package oracle database perform crud operation jpa query language good experience tool toad sql developer database development interaction develop maintain application context file service layer spring framework soap web services secure extraction client relate datum database apache cxf performed aggregation parallel processing develop camel orchestration layer integrate different component application apache camel restful conjunction ajax call jax rs jersey multi threading caching improve performance user experience single page module angular js framework implement business logic jsp jstl java beans service class involve development presentation layer gui involve configure jms jndi jboss application server involve performance tune application documentation trouble shooting ant build run create jar war file responsible deploy application jboss application server configure development environment jboss application server developer integration testing cvs version control application log exception log database jdbc junit test entire application rectified performance bottleneck eliminate critical bug create numerous test case junit framework junit test module hudson continuous integration tool environment java spring html hibernate sql pl sql jsp angular js jstl json ajax jquery oracle ant svn xml jaxb junit jboss soap restful web services wsdl jax rs jax ws apache cxf apache camel cvs hudson client cybage software pvt ltd jan oct role java developer description electronic medical record emr web base java solution capture datum different field different form compile individual health datum share different health care setting different clinician individual datum compile generate different type report help organization grow business rapidly responsibility participate requirement analysis design application uml rational rose agile methodology involve develop application core java jsp work develop web base application entitle emr framework use hibernate persistence junit testing jsp develop end screen application design develop web base software struts frame work design develop sql scripts stored procedures packages triggers mysql database indexing technique database procedure obtain search result involve development web service client client detail party agency develop nightly batch job involve interface external party state agency test script performance accessibility testing application develop responsible deploy application client uat environment prepare installation document software include program installation guide installation verification document involve different type testing like unit system integration testing etc carry testing phase provide production support maintain application environment java struts frame work jsp web service hibernate mysql ce eclipse subversion pl sql apache tomcat uml windows education detail bachelor technology computer science engineering references available request"
}