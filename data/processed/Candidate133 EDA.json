{
  "filename": "Candidate133 EDA.docx",
  "filepath": "D:\\Iqrar Workspace\\AI-Resume-Ranker\\data\\raw\\Candidate133 EDA.docx",
  "text": "Candidate133\ncandidate1331421980@gmail.com\nCell :  510-556-3630\nProfessional Summary:\n10 years of total IT experience in all phases of\u00a0Software Development Life Cycle including Analysis, Design, Implementation, integration, Testing, and Maintenance.\n8 years of experience in developing web, enterprise and SOA applications using Core Java, OOAD, Multi-Threading, JavaBeans, JSP, Servlets, JNDI, JDBC, Hibernate, JPA, Spring, WebServices(SOAP, Restful and Micro-Service), XSD, XML, XSLT, JSON, JAX-B, Apache Commons, EJB, JMS, MQ-Series, HTML, Ajax, Oracle and Linux/UNIX.\n2 years of experience in Big Data and Cloud based technologies like HDFS, SPARK, Kafka, Flume, Sqoop and AWS.\nExtensive experience on developing web applications using Spring Boot, Spring Core, Spring MVC, Spring ORM, Spring JPA,Spring Rest and Spring Cloud(PCF).\nExpertise in implementing persistence layer using JPA and Hibernate.\nExpertise working with SOAP, Rest and Microservices using CXF, Jersey and CloudFoundary.\nImplemented Microservices using Spring Core, Spring Boot, Spring Data, Spring Rest and Spring Cloud(PCF).\nExperience in Collections, Multi threading, Concurrency and memory management. \nExtensive experience in working with servers like WebLogic, WebSphere, JBOSS and Tomcat.\nExpertise in using XML Parsers SAX and DOM.\nGood experience in data structures and algorithms.\nGood experience in Junit and Mockito.\nImplemented  AWS(EC2, RDS, SNS, SQS, S3) to move customer care application in to Cloud environment.\nGood Experience in using Maven and ANT for building projects and Log4j for logging and debugging purposes.\nEffectiveness in coordinating with business team to fix defects and resolve issues.\nExperience in writing SQL queries, Stored Procedures for accessing and managing databases such as Oracle, DB2, MySQL.\nExperience with Tools: RAD, Eclipse, My Eclipse, Jenkins, Ant, Maven, Mercurial, Sonar, GIT, SVN, CVS, Perforce, Toad, SQLDeveloper, Code-Collaborator, SOAP-UI, RestClient-UI and Postman(chrome).\nExperience in Agile and waterfall modals.\nPracticing Agile  development frameworks Jira, Rally, VersionOne and standards, Test Driven Design & Development.\nPossess excellent communication, interpersonal, analytical and problem solving skills.\nTechnical Skills:\nJ2EE Technologies\t            : JDBC, JavaBeans, JSP, Servlets, EJB, JNDI, JMS. \nLanguages\t\t            : JAVA, Groovy, Python.\nWeb Technologies \t            : HTML, DHTML, JavaScript, JSON, AJAX.\nXML Technologies\t            : XML, DTD, XSLT, XSD, Xpath, JAXB SAX, DOM.\nDatabases\t\t            : Oracle 10g, 9i, MySQL, DB2 and Cassandra.\nOperating Systems\t            : UNIX, Linux, Windows 98/2000/NT/XP.\nApplication Servers\t     \t: WebSphere, Weblogic and JBoss.\nMiddleware\t\t     \t: Apache CAMEL, Oracle ESB, JMS and MQ-Series.\nIDE\u2019s\t\t\t     \t: Eclipse, RAD and JDeveloper, TOAD, SQL Developer.\nFrameworks\t\t     \t: Apache CAMEL, Spring and Hadoop/ Big Data.\nORM Technologies \t     \t: Hibernate and JPA.\nWebservice Specifications\t: JAX-WS , JAX-RS and AXWAY APIGateway.\nUI Technologies\t        \t: JSP, JavaScript, JQuery, AJAX, CSS and HTML.\nVersion Control \t       \t: GIT, SVN, CVS and Perforce\nCloud Technologies \t\t: Cloud Foundry and AWS.                                                 \nTools\t                                \t: Ready API, Version One, JIRA, Parasoft, \n                                                  RestClient-UI and Postman(Chrome) and SOAP UI.\nFraud Prevention Platform\t: 41st parameter(device  identification) and\n                                                  Fircosoft(to filter transactions and customers).\nEducation:                               Master of Computer Applications(MCA) \nProfessional Experience:\nVerizon, TX.\nDec\u201916 \u2013 Tilldate.\nRole : Java Developer.\nDescription :  Verizon DVS Migration(CPF, Reconciliation, Cassandra Loader) consist of 800+ APIs currently running on the IBM Main Frame system. Intented of this program is to rewrite all the API in Java 1.8, Cassandra 3.0. Currently Verizon pays IBM based on the no., of MIPS the API gets max in the day. Re-write API in Java with will reduce the cost spent for the IBM and the API scalability will be greatly increased with Cassandra. \nResponsibility: \nImplemented Microservice\u2019s(Read API\u2019s, Write API\u2019s) using cloudfoundary.\nUsed Netflix OSS stack to provide infrastructure for micro-services(config server, eureka server, zuul proxy, ribbon and hystrix).\nCreated shell scripts on Linux for enabling seed data loading into Cassandra tables.\nCreated application for data modelling to allow various DB2 to Cassandra table migration use cases.   \nEnabled code generation DDL files, Control Files, Spark Configuration files, Spring Boot Artifacts.\nDeveloped spark scripts by using Scala shell as per requirements. \nWorked with spark core, Spark Streaming and spark SQL modules of Spark \nDeveloped multiple POCs using Spark and deployed on the Yarn cluster, compared the performance of Spark, with Hive and SQL/Teradata. \nDeveloped Kafka producer and consumers, Cassandra clients and Spark along with components on HDFS, Hive. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDDs, Python and Scala.\nCreated application to create control files for performing seed data migration from DB2 to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited.\nCreated CPFTestSuite Automation tool for measuring CPF functionality, essential for detecting any configuration issues in preload tables.\nCreated ReconLogAnalyzer tool that will perform log analysis for missing and mismatch log statements and produce the output in an excel file.\nCreated application to create control files for performing seed data migration from DB2 to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited.\nCreated Jenkins builds for few custom applications.\nImplemented Test cases using Junit and Tested web services with REST Client.\nProactively monitor database systems ensuring availability and performance.\nEnvironment: Java/J2EE, Spring Core, Spring Boot, Spring JPA, Spring Rest, Spring Security, Spring Cloud, JPA, Microservices(PCF), Spark, HDFS(Hadoop), Kafka, Jenkins, AWS, GIT, Maven, MQ-Series, Mainframe, RAD, Junit  DB2, Cassandra and Oracle.\nGoogle Inc, Mountain View.\nMarch\u201916 \u2013 Dec\u201916.\nRole : Java Developer.\nDescription: Cyber-insurance is a predictive risk analytics tool implemented to analyse businesses and individual users Internet-based risks(Security Breach, Data Breach, Malware, Phishing, Spam, hacking and cloud service down) including the company\u2019s industry, geography, scale, services and security posture.\nResponsibility: \nInvolved in the requirement gathering, design and development of Catastrophe modeling.\nUsed Netflix OSS stack to provide infrastructure for micro-services(config server, eureka server, zuul proxy, ribbon and hystrix).\nExtensively used different Spring modules like Spring Boot, Spring Core, Spring JPA  Spring Rest and Spring Cloud.  \nImplemented cost calculator engines for AAL(Average Annual Loss), SD(Standard Deviation) and CV(Coefficient of Variation).\nUsed Spring Rest to implement controller layer.\nUsed JPA to implement Service and Repository layers.\nImplemented Micro-service\u2019s using Pivotal Cloud Foundry(Spring Cloud).\u00a0 \nUsed Groovy script for test automation. \nUsed Swagger to Document API\u2019s. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDDs, Python and Scala. \nDeveloped the code for Importing and exporting data into HDFS and Hive using Sqoop. \nResponsible for writing Hive Queries for analyzing data in Hive warehouse using HQL. \nWrote complex Hive queries and UDFs in Java and Python \nInvolved in defining job flows using Oozie for scheduling jobs to manage apache Hadoop jobs by directed.\nDeveloping Hive User Defined Functions in java, compiling them into jars and adding them to the HDFS and executing them with Hive Queries.\nDesigned and deployed isolated Search DCs for Datastax Solr Clusters. \nDeveloped Solr indexes and queries to span over multiple DCs. \nInvolved in writing API Testing,Junit testing, enhancements, bug fixing.\nEnvironment: Core Java(java 8), J2EE, JPA, Spring Core,Spring MVC, Spring JPA, Spring Rest, Spring Security, Spring Cloud, HDFS, HIVE, SPARK, Apache SOLR, Kafka, Zookeeper, XML, Groovy, JSON, JavaScript, AngularJS, Swagger, Jenkins,  Junit, Tomcat, Postman(Chrome), Git, MYSQL and UNIX/Linux.\nWells Fargo,  San Leandro, CA.                                                          \nMay\u201915  \u2013 March\u20192016.\nRole: Java Developer.\nDescription:  New Device Fingerprinting is one of the core application in Gen 3 FP&A (Fraud Prevention & Authentication ) for building a more intelligent and efficient fraud mitigation, authentication and alerting strategies  for online  and cross channel authentication use cases.\nResponsibility: \nInvolved in the requirement gathering and architecture design and development of New Device Fingerprint project.\nReengineering existing platform to a\u00a0Microservices\u00a0based architecture.\nReengineered platform to support 100% virtualization.\ninvolved in  development using 41st Parameter, Core Java - J2ee, Multi-threading, Groovy,\u00a0 Spring, Hibernate, Apache CAMEL, Web services(SOAP and Rest), Maven, Oracle and Weblogic.\ninstalled an updated version of 41st Parameter (external vendor) code to do Device fingerprinting.\nImplemented different features related to Device fingerprinting in  AuthC Service .\nUsed Apache Camel for creating routes using Web service.\nUsed\u00a0spring boot to bootstrap the basic configuration of the project.\u00a0\nDeveloped Data access layer using ORM framework hibernate for mapping database scheme to Object model.\nExtensively used different Spring modules like Spring Boot, Spring Core, Spring MVC, Spring DAO and Spring JMS. \nUsed Ready API Tool to Implement functional and integation tests.\nPerformed Unit testing using JUNIT and\u00a0Mockito.\nUsed Splunk\u00a0tool in order to analyze the logs in the applications.\nExtensively used Groovy for functional tests.\nUsed\u00a0Cassandra\u00a0CQL with Java API's to retrieve data from\u00a0Cassandra\u00a0tables.\nInvolved in writing different DDL and DML scripts for functional tests.\nManaged code for different releases by branching and merging using SVN.\nUsed CI tools like Jenkins.\nUsed JIRA as a change request , defect tracking and project status tracking system in the project.\nEnvironment: 41st Parameter, Core Java, Groovy, J2EE, Hibernate, Spring,Spring Boot, EJB, Apache CAMEL, WebServices(SOAP, Restful and Amazon), XML, JSON,  Ready API, Log4j, Weblogic, ActiveMQ, SQL Developer,MQ-Series, Jenkins, Splunk, Junit, Mockito, Docker, Oracle DB, Cassandra, Putty and UNIX/Linux.\nBank of America, Agoura Hills,CA.                                                                         \nMar 14  \u2013 Apr 15 .\nRole: Java Developer.\nDescription:  This project will be used by the RMD Department of BOFA. RMD will issue loans to the borrowers based on collateral Status before issuing the loan RMD checks that whether that collateral is insured or not and collateral\u2019s Social Security Number through third party agencies and finally RMD checks whether borrowers is paying tax properly for that collateral or not with the help of third party agency.\nResponsibility: \nUsed Agile methodology for design and development of project.\nImplemented User Interface using JSP, HTML, CSS, Ajax, JavaScript and AngularJS.\nImplemented Tax  and  Loan ID modules using Spring Framework.\nImplemented Persistence layer using Hibernate JPA.\nCreated and maintained the configuration of the Spring Application Framework (IOC) and implemented business logic using EJB.\nImplemented SOAP Services(JAX-WS) to interact with external systems like Fidelity.\nConverted  Business to customer services into Restful Services.\nHave good experience on continuous integration tool Jenkins.\nImplemented some fuzzy logic\u2019s using Hadoop MapReduce Programming.\nImplemented  AWS Redshift\u00a0(a petabyte-scale data warehouse service in the cloud).\nConverted EJB MDB\u2019s in to Spring MDP\u2019s using Spring JMS Module and moved into Amazon cloud(AWS).\nHandled all the service nodes and components on Amazon cloud, including handling Amazon service outages.\nImplemented NO-SQL DB(Cassandra) to store poisoned messages.\nCQL is used to query Cassandra data from dev center.\nPerformed importing data from various sources to the\u00a0Cassandra\u00a0cluster using Java/Python APIs or Sqoop.\u00a0\nResponsible for bug fixes and documentation.\nUsed Linux OS for Development and Production Environment.\nAbility to learn and adapt quickly to the emerging new technologies.\nEnvironment: Core Java, J2EE, JSP, Servlets, Hadoop/Big Data, Splunk Spring Core, Spring MVC, Spring Data, Hibernate-JPA, EJB, WebServices(SOAP, Restful and Amazon WebService), Kafka, Apache CAMEL, AngularJS, Ajax, XML,  JavaScript, JSON, CSS, HTML, Log4j, SONOR,Weblogic, Putty, UNIX/Linux, SQL, SQL Developer, Jenkins, Sqoop, Cassandra DB, MySQL and Oracle DB.\nBank of America, Jersey City, NJ.                   \t   \t\t                                 \nMay\u201913 \u2013 March\u201914.\nTitle:  Enterprise Transaction Scanning in AML (Anti Money Laundering).\nRole:  Java Developer.\nDescription: Anti Money Laundering(AML) is the policy in Bank of America where Bank of America does not want to be  used  in the  process to conceal the true source of funds that were originally derived from criminal activity or in the process of funding criminal activity, including terrorism.\nAML Policy Statement is intended to guard against Bank of America\u2019s unintentional involvement in criminal activity, and to reinforce Bank of America\u2019s policy of cooperation with law enforcement and regulatory agencies.\nUnder the Project AML, Bank of America will,\nTake reasonable steps to determine the true identity of all customers and beneficial ownership of Bank of America products and services .\nReport all identified instances of suspicious activity to the extent that it can do so under all applicable foreign and domestic laws .\nAvoid providing support or assistance to customers seeking to deceive law enforcement agencies through the provision of false, altered, incomplete or missing information or by informing customers that their activities are, may be, or have been investigated or reported as suspicious.\nAML uses the tool called Fircosoft for scanning the Enterprise transactions and report the suspicious activities through the system called \u2018ETS (Enterprise Transaction Scanning)\u2019. ETS will scan all the wired transactions against the watch list (central repository of suspicious individuals, countries and cities) stored in ETS database. \nResponsibilites:\nInteraction with Business users on daily basis for gathering the Requirements.\nInvolving in the preparing low level design.\nInvolved in the development of Report Generation module. Which includes volume statistics report, Sanctions Monitoring Metrics report, TPS report.\nImplemented Spring MVC, dependency Injection (DI) features along with Hibernate \nImplemented  Online List Management (OLM)  and  FMM module  using Spring and Hibernate.\nCreated Configuration files for the application using Spring framework.\nImplemented a\u00a0RESTful interface for the search and Address services\nImplemented SOAP Services(JAX-WS) to interact with external systems.\nWrote various SQL, PL/SQL queries and stored procedures for data retrieval.\nPerformed Unit testing using JUNIT and\u00a0Mockito.\nUsed Linux OS for Development and Production Environment, Wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs.\nEnvironment: Core Java, multithreading, Fircosoft, J2EE, JSP, Servlets, Spring Core, Spring MVC, Spring ORM, Spring Batch, Hibernate, JPA, WebServices(SOAP and Restful), AnjularJS, Ajax, XML,  JavaScript, JSON, CSS , HTML, SVN, Jenkins, Log4j, Weblogic, Putty, UNIX/Linux, SQL, SQL Developer, Mockito, Cassandra, Junit, Mockito and Oracle DB.\nFidelity Investments, Atlanta, GA.      \t\t                              \nFeb\u201912 \u2013 April\u201913.\nTitle: TradeClearing System.\nRole: Java Developer\nTradeClear had following functionalities:\nCentralized clearing: Listed Derivatives are traded on numerous exchanges and booked into a large number of front office booking systems within the firm. TradeClear consolidates information flow from substantially all relevant booking systems and most major clearing houses where Client has membership rights. \nReal-time Processing: Listed derivative transactions must be balanced and cleared on the same day they are traded. This gives a little as 90 minutes to identify mismatches in bookings and correctly clear the day\u2019s business. \nResponsibility:\nResponsible for gathering business requirements, review the requirements and converting them to detailed design documents and clarification documents.\nDeveloped UI and backend applications using Struts, Spring, Hibernate, Java, EJB 3.0, JSP, HTML, DHTML, JavaScript and AJAX.\nImplemented JSP, Struts Tag Libraries, Java Script and CSS for developing User for creating/generating Hibernate classes and configuration XML\u2019s and to also manage CRUD operations (insert, update, and delete).\nImplemented a\u00a0RESTful interface for the Front-end response.\nUsed Web Services to get price from external Business Entities.\nDeveloped reusable services using BPEL to transfer data between heterogeneous systems\nUsing different Adapters.\nImplemented messaging using TIBCO EMS.\nImplemented integration between the BPEL worklist and Oracle eBusiness Suite .\nImplemented security for BPEL services using OWSM. \nResponsible for integration of different modules. \nCreated JUnit test cases, and Development of JUnit classes.\nConfigured log4j to enable/disable logging in application.\nInvolved in Code Reviews of other modules, documents, test cases.\nWrote UNIX Shell scripts and used UNIX environment to deploy the application.\nResponsible in coordination with offshore team, attending daily and weekly scrum meetings to update the work status, issues clarifications etc.\nEnvironment: Core Java,J2EE, JDeveloper, Spring, Hibernate, SOA 10g(BPEL), Weblogic Server, Webservices(SOAP and Restful), JMS, PL/SQL, Sql Developer, XML HTML, JavaScript, SVN, Maven, Log4j, JUnit, Sybase , JBoss, Oracle, DB2, SAP, Mainframe(COBOL), MQ-Series,MySQL, Windows XP, RAD and Unix. \nPrudential,   Newark, NJ.      \t          \t           \t                                 \nMay\u201910 \u2013 Dec\u201911\nRole: Java Developer.    \nProject: 4Front is an application provides a single point of access for teleconsultants for legacy \nsystems (E.g.: CAPSIL, SALAS, OPAL and OB).\u00a0 It allows users in Customer Services and other areas of the business to Verify the identification of a caller, Maintain a history of a caller\u2019s contact, Make with enquiries, Perform alterations to a customer\u2019s policy, Investigate the New Business, Review the Direct Debit instructions, Produce outputs (fax, letter, etc.), Provide valuations, Pass the call to another 4Front user and Automate the call hand-off.\n\nResponsibility:      \nDay to day support activities. \nMeeting the Client SLA on the production tickets.\nDesign and development of new change requests using  Java, struts, JSP and EJB.\nImplemented integration between the BPEL worklist and Oracle eBusiness Suite.\nResponsible for all the SDLC phases of a change request including testing and live support.\nEnvironment: Core Java , J2ee, Oracle Fusion(BPEL), JSP, Eclipse, Servlet, XML, Struts, Tiles, AJAX, EJB, JUnit, JBoss, websphere Application Server , Ant, JavaScript, CSS, Log4J, Junit,HTML, PL/SQL, CVS, MQ-Series, Mainframe(COBOL), RAD and  DB2. \nHilmar Cheese\t\t                                                     \nSep\u2019 08 \u2013 Feb\u2019 2010\nTitle:  Custom Business Application.\nRole: Java Developer.\nDescription: This project has been designed and developed to process online order request. This project consist of different module such as online User Registration, Update User Information, Submit order online, payment, process order and delivery of order.\nResponsibility:\nInvolved in gathering requirements, Analysis, Design, Development and testing of the entire Application.\nInvolved in all phases of SDLC (Software Development Life Cycle).\nCreated UML diagrams like class diagrams and activity diagrams using the Rational Rose.\nParticipated in the design and development of application using JSP, HTML, CSS and JavaScript.\nUsed Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking.\nDesigned and Developed the presentation layer using AJAX for RUI(Rich User Interface).\nJSON is used in conjunction with JavaScript for making HTTP requests.\nJQuery is used for validation.\nDeveloped the presentation tier of the application using Struts framework and MVC design pattern.\nConfigured the Hibernate ORM framework as persistence layer for the backend by using hibernate.confg.xml \nDesigned and developed DAO\u2019s for accessing the POJO\u2019s and updating the DB tables using the POJO\u2019s, Java Collections, and Synchronization etc.\nUsed Hibernate object relation mappings (ORM) for the database operations on MySQL.\nDeveloped and modified the stored procedures, the DAO (Data Access Objects) and VO (value Object) classes for separating the Data Access logic and business logic.\nExtensively participated in application integration. Spring is used to integrate Struts and Hibernate. Implemented interceptors for Spring and Hibernate.\nTransactions were implemented using declarative transactions in Spring with transaction managers capable of supporting Hibernate.\nConfiguration issues in the various frameworks used were identified and resolved to extract an acceptable level of performance in terms of efficiency, response and robustness.\nConsumed Web Services as a gateway for the payment through the third-party.\nDeveloped Web Services using SOA, SOAP, WSDL, UDDI and JAX-WS,JAX-RPC programming models.\nUsed Ant as build tool for building and deploying it into Weblogic Server. Ant scripts are used for automating build process.\nDeveloped and execute unit tests and test suites for product components using JUnit Testing Used.\nEnvironment: Core Java, J2EE1.6.x, JDK, JSP, Struts 2.x, Tiles, JMS, Spring 3.x, Hibernate 3.0, MySQL, Eclipse, WebSphere Application Server, JBOSS, JSON, AJAX, JQuery, Web Services(SOAP,WSDL),Ant, JavaScript, CSS, Log4J, Junit,HTML, PL/SQL, CVS, MySQL and DB2.\nR-Systems International Ltd\t\t    \t                       \nOct\u201907 - July\u201908\nTitle: RMS (Repayment Management System).\nRole: Software Programmer.\nDescription: RMS is Repayment Management System. Case appears in RMS only after the final disbursement of loan amount. In case of partial disbursement; only after the last disbursement the case will appear in RMS. RMS deals with how does the customer repays the Loan i.e. through his salary deduction or online transfer from checking a/c, etc.\nResponsibility: \nInvolved in Development of RMS Enhancements like RMS Transaction, RMS Monthly History, Scheme Change maker/checker, Customer service query, Non Provisioning Assets screens like specific provision manual marking, writeoff manual marking, sale of asset, property value updating, collateral value updating and ground rent prospect entry.\nDeveloped sub-modules of non provisioning Assets like sale of asset, writeoff manual marking and ground rent prospect entry.\nInvolved in requirements planning, analysis and design discussions with the technical team.\nDocumentation & review of requirements with design team.\nInvolved in preparing program specifications and testing scripts and updating the same.\nDeveloped stored procedures, Functions, views and also wrote PL/SQL scripts.\nUsed JSF layout for view of MVC.\nResponsible in troubleshooting application and understanding the same.\nUsed web services to fetch data synchronously from the other interfaces\nIntegrated Spring DAO for data access using with Hibernate.\nCoordinated with team in troubleshooting and fixing production application issues.\nInvolved in setting up processes, procedures, knowledge transfer to offshore teams.\nEnvironment: Core Java, J2EE, XSL, XML, JSP, Struts, Tiles, Spring 2.x, Hibernate, JavaScript, HTML, CSS, Oracle, Websphere Application Server, DB2, Web Services (WSDL, SOAP), SQL/PL SQL and windows. ",
  "size_bytes": 60622,
  "num_pages": null,
  "extracted_at": "2025-09-10T18:15:26.105992",
  "clean_text": "cell professional summary year total experience phase software development life cycle include analysis design implementation integration testing maintenance year experience develop web enterprise soa application core java ooad multi threading javabeans jsp servlets jndi jdbc hibernate jpa spring restful micro service xsd xml xslt json jax b apache commons ejb jms mq series html ajax oracle linux unix year experience big data cloud base technology like hdfs spark kafka flume sqoop aws extensive experience develop web application spring boot spring core spring mvc spring orm spring jpa spring rest spring expertise implement persistence layer jpa hibernate expertise work soap rest microservices cxf jersey cloudfoundary implement microservice spring core spring boot spring data spring rest spring experience collection multi threading concurrency memory management extensive experience work server like weblogic websphere jboss tomcat expertise xml parsers sax dom good experience data structure algorithm good experience junit mockito implement rds sns sqs customer care application cloud environment good experience maven ant building project log debug purpose effectiveness coordinate business team fix defect resolve issue experience write sql query store procedures access manage database oracle mysql experience tools rad eclipse eclipse jenkins ant maven mercurial sonar git svn cvs perforce toad sqldeveloper code collaborator soap ui restclient ui experience agile waterfall modal practice agile development framework jira rally versionone standard test driven design development possess excellent communication interpersonal analytical problem solve skill technical skills technologies jdbc javabeans jsp servlets ejb jndi jms language java groovy python web technologies html dhtml javascript json ajax xml technologies xml dtd xslt xsd xpath jaxb sax dom database oracle g mysql cassandra operate systems unix linux windows nt xp application server websphere weblogic jboss middleware apache camel oracle esb jms mq series ide eclipse rad jdeveloper toad sql developer framework apache camel spring big data orm technologies hibernate jpa webservice specifications jax ws jax rs axway apigateway ui technologies jsp javascript jquery ajax css html version control git svn cvs perforce cloud technologies cloud foundry aws tool ready api version jira parasoft restclient ui soap ui fraud prevention platform identification filter transaction customer education master computer professional experience verizon tx tilldate role java developer description verizon dvs reconciliation cassandra loader consist api currently run ibm main frame system intented program rewrite api java cassandra currently verizon pay ibm base mips api get max day write api java reduce cost spend ibm api scalability greatly increase cassandra responsibility implement api write api cloudfoundary netflix oss stack provide infrastructure micro server eureka server zuul proxy ribbon hystrix create shell script linux enable seed datum loading cassandra table create application datum modelling allow cassandra table migration use case enable code generation ddl file control files spark configuration file spring boot artifacts develop spark script scala shell requirement work spark core spark streaming spark sql module spark develop multiple poc spark deploy yarn cluster compare performance spark hive sql teradata develop kafka producer consumer cassandra client spark component hdfs hive involve convert hive sql query spark transformation spark rdd python scala create application create control file perform seed datum migration cassandra call init load data file create mainframe system format data file fix width delimit create cpftestsuite automation tool measure cpf functionality essential detect configuration issue preload table create reconloganalyzer tool perform log analysis miss mismatch log statement produce output excel file create application create control file perform seed datum migration cassandra call init load data file create mainframe system format data file fix width delimit create jenkins build custom application implement test case junit tested web service rest client proactively monitor database system ensure availability performance environment java spring core spring boot spring jpa spring rest spring security spring cloud jpa spark kafka jenkins aws git maven mq series mainframe rad junit cassandra oracle google inc mountain view role java developer description cyber insurance predictive risk analytic tool implement analyse business individual user internet base breach data breach malware phishing spam hack cloud service include company industry geography scale service security posture responsibility involve requirement gathering design development catastrophe modeling netflix oss stack provide infrastructure micro server eureka server zuul proxy ribbon hystrix extensively different spring module like spring boot spring core spring jpa spring rest spring cloud implement cost calculator engine annual loss deviation variation spring rest implement controller layer jpa implement service repository layer implement micro service pivotal cloud cloud groovy script test automation swagger document api involve convert hive sql query spark transformation spark rdd python scala develop code importing export datum hdfs hive sqoop responsible write hive queries analyze datum hive warehouse hql write complex hive query udfs java python involve define job flow oozie scheduling job manage apache hadoop job direct develop hive user defined functions java compile jar add hdf execute hive queries design deploy isolated search dcs datastax solr clusters develop solr index query span multiple dcs involve write api testing junit testing enhancement bug fixing environment core jpa spring core spring mvc spring jpa spring rest spring security spring cloud hdfs hive spark apache solr kafka zookeeper xml groovy json javascript angularjs swagger jenkins junit tomcat git mysql unix linux wells fargo san leandro role java developer description new device fingerprinting core application gen fraud prevention authentication build intelligent efficient fraud mitigation authentication alert strategy online cross channel authentication use case responsibility involve requirement gathering architecture design development new device fingerprint project reengineere exist platform microservices base architecture reengineere platform support virtualization involve development parameter core java multi threading groovy spring hibernate apache camel web rest maven oracle weblogic instal update version parameter external vendor code device fingerprinting implement different feature relate device fingerprinting authc service apache camel create route web service spring boot bootstrap basic configuration project develop data access layer orm framework hibernate mapping database scheme object model extensively different spring module like spring boot spring core spring mvc spring dao spring jms ready api tool implement functional integation test performed unit testing junit mockito splunk tool order analyze log application extensively groovy functional test cassandra cql java api retrieve datum cassandra table involve write different ddl dml script functional test manage code different release branch merging svn ci tool like jenkin jira change request defect tracking project status tracking system project environment parameter core java groovy hibernate spring spring boot ejb apache camel restful amazon xml json ready api weblogic activemq sql developer mq series jenkins splunk junit mockito docker oracle db cassandra putty unix linux bank america agoura hills mar apr role java developer description project rmd department bofa rmd issue loan borrower base collateral status issue loan rmd check collateral insure collateral social security number party agency finally rmd check borrower pay tax properly collateral help party agency responsibility agile methodology design development project implement user interface jsp html css ajax javascript angularjs implement tax loan id module spring framework implement persistence layer hibernate jpa create maintain configuration spring application framework ioc implement business logic ejb implement soap ws interact external system like fidelity converted business customer service restful services good experience continuous integration tool jenkin implement fuzzy logic hadoop mapreduce programming implement aws redshift petabyte scale datum warehouse service cloud converted ejb mdb spring mdp spring jms module move amazon handle service node component amazon cloud include handle amazon service outage implement sql store poison message cql query cassandra datum dev center performed import datum source cassandra cluster java python api sqoop responsible bug fix documentation linux os development production environment ability learn adapt quickly emerge new technology environment core java jsp servlets hadoop big data splunk spring core spring mvc spring data hibernate jpa ejb restful amazon webservice kafka apache camel angularjs ajax xml javascript json css html sonor weblogic putty unix linux sql sql developer jenkins sqoop cassandra db mysql oracle db bank america jersey city nj title enterprise transaction scanning aml anti money laundering role java developer description anti money policy bank america bank america want process conceal true source fund originally derive criminal activity process fund criminal activity include terrorism aml policy statement intend guard bank america unintentional involvement criminal activity reinforce bank america policy cooperation law enforcement regulatory agency project aml bank america reasonable step determine true identity customer beneficial ownership bank america product service report identify instance suspicious activity extent applicable foreign domestic law avoid provide support assistance customer seek deceive law enforcement agency provision false altered incomplete miss information inform customer activity investigate report suspicious aml use tool call fircosoft scan enterprise transaction report suspicious activity system call ets enterprise transaction scanning ets scan wire transaction watch list central repository suspicious individual country city store ets database responsibilite interaction business user daily basis gather requirements involve prepare low level design involve development report generation module include volume statistic report sanctions monitoring metrics report tps report implement spring mvc dependency injection di feature hibernate implement online list management olm fmm module spring hibernate create configuration file application spring framework implement restful interface search address service implement soap ws interact external system write sql pl sql query store procedure datum retrieval performed unit testing junit mockito linux os development production environment wrote unix shell script unix environment deploy ear read log environment core java multithreading fircosoft jsp servlets spring core spring mvc spring orm spring batch hibernate jpa restful anjularjs ajax xml javascript json css html svn jenkins weblogic putty unix linux sql sql developer mockito cassandra junit mockito oracle db fidelity investments atlanta ga title tradeclearing system role java developer tradeclear follow functionality centralized clearing list derivative trade numerous exchange book large number office booking system firm tradeclear consolidate information flow substantially relevant booking system major clearing house client membership right real time processing list derivative transaction balance clear day trade give little minute identify mismatch booking correctly clear day business responsibility responsible gather business requirement review requirement convert detailed design document clarification document develop ui backend application struts spring hibernate java ejb jsp html dhtml javascript ajax implement jsp struts tag libraries java script css develop user create generate hibernate class configuration xml manage crud operation insert update delete implement restful interface end response web services price external business entities develop reusable service bpel transfer datum heterogeneous system different adapter implement message tibco ems implement integration bpel worklist oracle ebusiness suite implement security bpel service owsm responsible integration different module create junit test case development junit class configured enable disable logging application involve code reviews module document test case write unix shell script unix environment deploy application responsible coordination offshore team attend daily weekly scrum meeting update work status issue clarification etc environment core java jdeveloper spring hibernate soa weblogic server restful jms pl sql sql developer xml html javascript svn maven junit sybase jboss oracle sap mq series mysql windows xp rad unix prudential newark nj role java developer project application provide single point access teleconsultant legacy system capsil salas opal ob allow user customer services area business verify identification caller maintain history caller contact enquiry perform alteration customer policy investigate new business review direct debit instruction produce output fax letter etc provide valuation pass user automate hand responsibility day day support activity meet client sla production ticket design development new change request java strut jsp ejb implement integration bpel worklist oracle ebusiness suite responsible sdlc phase change request include testing live support environment core java oracle jsp eclipse servlet xml strut tiles ajax ejb junit jboss websphere application server ant javascript css junit html pl sql cvs mq series rad hilmar cheese sep feb title custom business application role java developer description project design develop process online order request project consist different module online user registration update user information submit order online payment process order delivery order responsibility involve gathering requirement analysis design development testing entire application involve phase sdlc software development life cycle create uml diagram like class diagram activity diagram rational rose participate design development application jsp html css javascript eclipse ide tool develop application jira bug issue tracking design develop presentation layer ajax user interface json conjunction javascript make http request jquery validation develop presentation tier application struts framework mvc design pattern configure hibernate orm framework persistence layer backend design develop dao access pojo update db table pojo java collections synchronization etc hibernate object relation mapping orm database operation mysql develop modify store procedure dao data access objects vo value object class separate data access logic business logic extensively participate application integration spring integrate struts hibernate implement interceptor spring hibernate transaction implement declarative transaction spring transaction manager capable support hibernate configuration issue framework identify resolve extract acceptable level performance term efficiency response robustness consumed web services gateway payment party develop web services soa soap wsdl uddi jax ws jax rpc programming model ant build tool build deploy weblogic server ant script automate build process developed execute unit test test suite product component junit testing environment core java jdk jsp struts tiles jms spring hibernate mysql eclipse websphere application server jboss json ajax jquery web javascript css junit html pl sql cvs mysql r systems international ltd title rms repayment management system role software programmer description rms repayment management system case appear rms final disbursement loan case partial disbursement disbursement case appear rms rms deal customer repay loan salary deduction online transfer check c etc responsibility involve development rms enhancements like rms transaction rms monthly history scheme change maker checker customer service query non provisioning assets screen like specific provision manual marking writeoff manual marking sale asset property value updating collateral value update ground rent prospect entry develop sub module non provision asset like sale asset writeoff manual marking ground rent prospect entry involve requirement planning analysis design discussion technical team documentation review requirement design team involve prepare program specification test script update develop store procedure function view write pl sql script jsf layout view mvc responsible troubleshooting application understand web service fetch datum synchronously interface integrated spring dao datum access hibernate coordinate team troubleshoot fix production application issue involve set process procedure knowledge transfer offshore team environment core java xsl xml jsp strut tiles spring hibernate javascript html css oracle websphere application server web services wsdl soap sql pl sql window"
}